<!DOCTYPE html>
<html lang="en-US">
<head>
<title>JDBC - Interview Questions - Tutorialspoint</title>
<meta charset="utf-8">
<meta name="description" content="JDBC - Interview Questions - Dear readers, these JDBC Interview Questions have been designed specially to get you acquainted with the nature of questions you may encounter during your inter"/>
<meta name="keywords" content="C, C++, Python, Java, HTML, CSS, JavaScript, SQL, PHP, jQuery, XML, DOM, Bootstrap, Tutorials, Articles, Programming, training, learning, quiz, preferences, examples, code"/>
<link rel="canonical" href="https://www.tutorialspoint.com/jdbc/jdbc_interview_questions.htm" />
<link rel="shortcut icon" href="/favicon.ico" type="image/x-icon" />
<meta name="viewport" content="width=device-width,initial-scale=1.0,user-scalable=yes">
<link rel="stylesheet" href="/themes/css/style-min-v1.css?v=2.0.3">
<script src="/themes/js/script-min-v1.js?v=2.0.0"></script>
<script>function printPage() { window.print(); }</script>
<script data-cfasync="false" type="text/javascript">(function(w, d) { var s = d.createElement('script'); s.src = '//cdn.adpushup.com/40046/adpushup.js'; s.type = 'text/javascript'; s.async = true; (d.getElementsByTagName('head')[0] || d.getElementsByTagName('body')[0]).appendChild(s); })(window, document);</script>
<script data-cfasync="false" type="text/javascript">(function(w, d) { var s = d.createElement('script'); s.src = '//delivery.adrecover.com/18107/adRecover.js'; s.type = 'text/javascript'; s.async = true; (d.getElementsByTagName('head')[0] || d.getElementsByTagName('body')[0]).appendChild(s); })(window, document);</script>
<style>
.right-menu .mui-btn {
    background-color:#1890c4;
}
a.demo {
    background:#1890c4;
}
li.heading {
    background:#1890c4;
}
.course-box{background:#1890c4}
.home-intro-sub p{color:#1890c4}
</style>
</head>
<body>
<header id="header">
<!-- Top sub-menu Starts Here -->
<div class="mui-appbar mui-container-fulid top-menu">
<div class="mui-container">
<div class="top-menu-item home">
<a href="https://www.tutorialspoint.com/index.htm" target="_blank" title="TutorialsPoint - Home"><i class="fal fa-home"></i> <span>Home</span></a>
</div>
<div class="top-menu-item qa">
<a href="https://www.tutorialspoint.com/about/about_careers.htm" target="_blank" title="Job @ Tutorials Point"><i class="fa fa-suitcase"></i> <span>Jobs</span></a>
</div>
<div class="top-menu-item tools">
<a href="https://www.tutorialspoint.com/online_dev_tools.htm" target="_blank" title="Tools - Online Development and Testing Tools"><i class="fal fa-cogs"></i> <span>Tools</span></a>
</div>
<div class="top-menu-item coding-ground">
<a href="https://www.tutorialspoint.com/codingground.htm" target="_blank" title="Coding Ground - Free Online IDE and Terminal"><i class="fal fa-code"></i> <span>Coding Ground </span></a> 
</div>
<div class="top-menu-item current-affairs">
<a href="https://www.tutorialspoint.com/current_affairs.htm" target="_blank" title="Daily Current Affairs"><i class="fal fa-layer-plus"></i> <span>Current Affairs</span></a>
</div>
<div class="top-menu-item upsc-notes">
<a href="https://www.tutorialspoint.com/upsc_ias_exams.htm" target="_blank" title="UPSC IAS Exams Notes - TutorialsPoint"><i class="fal fa-user-tie"></i> <span>UPSC Notes</span></a>
</div>      
<div class="top-menu-item online-tutoris">
<a href="https://www.tutorialspoint.com/tutor_connect/index.php" target="_blank" title="Top Online Tutors - Tutor Connect"><i class="fal fa-user"></i> <span>Online Tutors</span></a>
</div>
<div class="top-menu-item whiteboard">
<a href="https://www.tutorialspoint.com/whiteboard.htm" target="_blank" title="Free Online Whiteboard"><i class="fal fa-chalkboard"></i> <span>Whiteboard</span></a>
</div>
<div class="top-menu-item net-meeting">
<a href="https://www.tutorialspoint.com/netmeeting.php" target="_blank" title="A free tool for online video conferencing"><i class="fal fa-chalkboard-teacher"></i> <span>Net Meeting</span></a> 
</div>
<div class="top-menu-item articles">
<a href="https://www.tutorix.com" target="_blank" title="Tutorx - The Best Learning App" rel="nofollow"><i class="fal fa-video"></i> <span>Tutorix</span></a> 
</div>        
<div class="social-menu-item">
<a href="https://www.facebook.com/tutorialspointindia" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Facebook"><i class="fab fa-facebook-f"></i></a> 
<a href="https://www.twitter.com/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Twitter"><i class="fab fa-twitter"></i></a>
<a href="https://www.linkedin.com/company/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Linkedin"><i class="fab fa-linkedin-in"></i></a>
<a href="https://www.youtube.com/channel/UCVLbzhxVTiTLiVKeGV7WEBg" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint YouTube"><i class="fab fa-youtube"></i></a>
</div>        
</div>
</div>
<!-- Top sub-menu Ends Here -->
<!-- Top main-menu Starts Here -->
<div class="mui-appbar mui-container-fulid mui--appbar-line-height mui--z1" id="logo-menu">
<div class="mui-container">
<div class="left-menu">
<a href="https://www.tutorialspoint.com/index.htm" title="Tutorialspoint">
<img class="tp-logo" alt="tutorialspoint" src="/jdbc/images/logo.png">
</a>
<div class="mui-dropdown">
<a class="mui-btn mui-btn--primary categories" data-mui-toggle="dropdown"><i class="fa fa-th-large"></i> 
<span>Categories <span class="mui-caret"></span></span></a>            
<ul class="mui-dropdown__menu cat-menu">
<li>
<ul>
<li><a href="/academic_tutorials.htm"><i class="fa fa-caret-right"></i> Academic Tutorials</a></li>
<li><a href="/big_data_tutorials.htm"><i class="fa fa-caret-right"></i> Big Data &amp; Analytics </a></li>
<li><a href="/computer_programming_tutorials.htm"><i class="fa fa-caret-right"></i> Computer Programming </a></li>
<li><a href="/computer_science_tutorials.htm"><i class="fa fa-caret-right"></i> Computer Science </a></li>
<li><a href="/database_tutorials.htm"><i class="fa fa-caret-right"></i> Databases </a></li>
<li><a href="/devops_tutorials.htm"><i class="fa fa-caret-right"></i> DevOps </a></li>
<li><a href="/digital_marketing_tutorials.htm"><i class="fa fa-caret-right"></i> Digital Marketing </a></li>
<li><a href="/engineering_tutorials.htm"><i class="fa fa-caret-right"></i> Engineering Tutorials </a></li>
<li><a href="/upsc_ias_exams.htm"><i class="fa fa-caret-right"></i> Exams Syllabus </a></li>
<li><a href="/famous_monuments.htm"><i class="fa fa-caret-right"></i> Famous Monuments </a></li>
<li><a href="/gate_exams_tutorials.htm"><i class="fa fa-caret-right"></i> GATE Exams Tutorials</a></li>
<li><a href="/latest_technologies.htm"><i class="fa fa-caret-right"></i> Latest Technologies </a></li>
<li><a href="/machine_learning_tutorials.htm"><i class="fa fa-caret-right"></i> Machine Learning </a></li>
<li><a href="/mainframe_tutorials.htm"><i class="fa fa-caret-right"></i> Mainframe Development </a></li>
<li><a href="/management_tutorials.htm"><i class="fa fa-caret-right"></i> Management Tutorials </a></li>
<li><a href="/maths_tutorials.htm"><i class="fa fa-caret-right"></i> Mathematics Tutorials</a></li>
<li><a href="/microsoft_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> Microsoft Technologies </a></li>
<li><a href="/misc_tutorials.htm"><i class="fa fa-caret-right"></i> Misc tutorials </a></li>
<li><a href="/mobile_development_tutorials.htm"><i class="fa fa-caret-right"></i> Mobile Development </a></li>
<li><a href="/java_technology_tutorials.htm"><i class="fa fa-caret-right"></i> Java Technologies </a></li>
<li><a href="/python_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> Python Technologies </a></li>
<li><a href="/sap_tutorials.htm"><i class="fa fa-caret-right"></i> SAP Tutorials </a></li>
<li><a href="/scripting_lnaguage_tutorials.htm"><i class="fa fa-caret-right"></i>Programming Scripts </a></li>
<li><a href="/selected_reading.htm"><i class="fa fa-caret-right"></i> Selected Reading </a></li>
<li><a href="/software_quality_tutorials.htm"><i class="fa fa-caret-right"></i> Software Quality </a></li>
<li><a href="/soft_skill_tutorials.htm"><i class="fa fa-caret-right"></i> Soft Skills </a></li>
<li><a href="/telecom_tutorials.htm"><i class="fa fa-caret-right"></i> Telecom Tutorials </a></li>
<li><a href="/upsc_ias_exams.htm"><i class="fa fa-caret-right"></i> UPSC IAS Exams </a></li>
<li><a href="/web_development_tutorials.htm"><i class="fa fa-caret-right"></i> Web Development </a></li>
<li><a href="/sports_tutorials.htm"><i class="fa fa-caret-right"></i> Sports Tutorials </a></li>
<li><a href="/xml_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> XML Technologies </a></li>
<li><a href="/multi_language_tutorials.htm"><i class="fa fa-caret-right"></i> Multi-Language</a></li>
<li><a href="/questions_and_answers.htm"><i class="fa fa-caret-right"></i> Interview Questions</a></li>
</ul>
</li>
</ul>
<div class="clear"></div>
</div> 
</div>
<div class="right-menu">
<div class="toc-toggle">
<a href="javascript:void(0);"><i class="fa fa-bars"></i></a>
</div>
<div class="mobile-search-btn">
<a href="https://www.tutorialspoint.com/search.htm"><i class="fal fa-search"></i></a>
</div>
<div class="search-box">
<form method="get" class="search-form" name="searchform" action="https://www.google.com/search" target="_blank" novalidate="">
<input type="hidden" name="sitesearch" value="www.tutorialspoint.com" class="user-valid valid">
<input class="header-search-box" type="text" id="search-string" name="q" placeholder="Search your favorite tutorials..." onfocus="if (this.value == 'Search your favorite tutorials...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Search your favorite tutorials...';}" autocomplete="off">
<button><i class="fal fa-search"></i></button>
</form>
</div>
<div class="menu-btn library-btn">
<a href="https://www.tutorialspoint.com/tutorialslibrary.htm"><i class="fal fa-cubes"></i> <span>Library</span></a>
</div>
<div class="menu-btn videos-btn">
<a href="https://www.tutorialspoint.com/videotutorials/index.php"><i class="fal fa-video"></i> <span>Videos</span></a> 
</div>
<div class="menu-btn videos-btn">
<a href="https://www.tutorialspoint.com/questions/index.php"><i class="fa fa-location-arrow"></i> <span>Q/A</span></a>
</div>
<div class="menu-btn ebooks-btn">
<a href="https://store.tutorialspoint.com"><i class="fal fa-book"></i> <span>eBooks</span></a>
</div>
<div class="mui-dropdown">
<button class="mui-btn mui-btn--primary mobile-menu" data-mui-toggle="dropdown">
<span class="mui-caret"></span>
</button>
<ul class="mui-dropdown__menu">
<li><a href="https://www.tutorialspoint.com/tutorialslibrary.htm"><i class="fal fa-cubes"></i> <span>Library</span></a></li>
<li><a href="https://www.tutorialspoint.com/videotutorials/index.php"><i class="fal fa-video"></i> <span>Videos</span></a></li>
<li><a href="https://store.tutorialspoint.com"><i class="fal fa-book"></i> <span>eBooks</span></a></li>
</ul>
</div>
</div>
</div>
</div>
<!-- Top main-menu Ends Here -->
</header>
<div class="mui-container-fluid content">
<div class="mui-container">
<!-- Tutorial ToC Starts Here -->
<div class="mui-col-md-3 tutorial-toc">
<div class="mini-logo">
<img src="/jdbc/images/jdbc-mini-logo.jpg" alt="JDBC Tutorial" />
</div>
<ul class="toc chapters">
<li class="heading">JDBC Tutorial</li>
<li><a target="_top" href="/jdbc/index.htm">JDBC - Home</a></li>
<li><a target="_top" href="/jdbc/jdbc-introduction.htm">JDBC - Introduction</a></li>
<li><a target="_top" href="/jdbc/jdbc-sql-syntax.htm">JDBC - SQL Syntax</a></li>
<li><a target="_top" href="/jdbc/jdbc-environment-setup.htm">JDBC - Environment</a></li>
<li><a target="_top" href="/jdbc/jdbc-sample-code.htm">JDBC - Sample Code</a></li>
<li><a target="_top" href="/jdbc/jdbc-driver-types.htm">JDBC - Driver Types</a></li>
<li><a target="_top" href="/jdbc/jdbc-db-connections.htm">JDBC - Connections</a></li>
<li><a target="_top" href="/jdbc/jdbc-statements.htm">JDBC - Statements</a></li>
<li><a target="_top" href="/jdbc/jdbc-result-sets.htm">JDBC - Result Sets</a></li>
<li><a target="_top" href="/jdbc/jdbc-data-types.htm">JDBC - Data Types</a></li>
<li><a target="_top" href="/jdbc/jdbc-transactions.htm">JDBC - Transactions</a></li>
<li><a target="_top" href="/jdbc/jdbc-exceptions.htm">JDBC - Exceptions</a></li>
<li><a target="_top" href="/jdbc/jdbc-batch-processing.htm">JDBC - Batch Processing</a></li>
<li><a target="_top" href="/jdbc/jdbc-stored-procedure.htm">JDBC - Stored Procedure</a></li>
<li><a target="_top" href="/jdbc/jdbc-streaming-data.htm">JDBC - Streaming Data</a></li>
</ul>
<ul class="toc chapters">
<li class="heading">JDBC Examples</li>
<li><a target="_top" href="/jdbc/jdbc-create-database.htm">JDBC - Create Database</a></li>
<li><a target="_top" href="/jdbc/jdbc-select-database.htm">JDBC - Select Database</a></li>
<li><a target="_top" href="/jdbc/jdbc-drop-database.htm">JDBC - Drop Database</a></li>
<li><a target="_top" href="/jdbc/jdbc-create-tables.htm">JDBC - Create Tables</a></li>
<li><a target="_top" href="/jdbc/jdbc-drop-tables.htm">JDBC - Drop Tables</a></li>
<li><a target="_top" href="/jdbc/jdbc-insert-records.htm">JDBC - Insert Records</a></li>
<li><a target="_top" href="/jdbc/jdbc-select-records.htm">JDBC - Select Records</a></li>
<li><a target="_top" href="/jdbc/jdbc-update-records.htm">JDBC - Update Records</a></li>
<li><a target="_top" href="/jdbc/jdbc-delete-records.htm">JDBC - Delete Records</a></li>
<li><a target="_top" href="/jdbc/jdbc-where-clause.htm">JDBC - WHERE Clause</a></li>
<li><a target="_top" href="/jdbc/jdbc-like-clause.htm">JDBC - Like Clause</a></li>
<li><a target="_top" href="/jdbc/jdbc-sorting-data.htm">JDBC - Sorting Data</a></li>
</ul>
<ul class="toc chapters">
<li class="heading">JDBC Useful Resources</li>
<li><a target="_top" href="/jdbc/jdbc_questions_answers.htm">JDBC - Questions and Answers</a></li>
<li><a target="_top" href="/jdbc/jdbc-quick-guide.htm">JDBC - Quick Guide</a></li>
<li><a target="_top" href="/jdbc/jdbc-useful-resources.htm">JDBC - Useful Resources</a></li>
<li><a target="_top" href="/jdbc/jdbc-discussion.htm">JDBC - Discussion</a></li>
<li><a target="_top" href="/java/index.htm">Useful - Java Tutorials</a></li>
</ul>

<ul class="toc reading">
<li class="sreading">Selected Reading</li>
<li><a target="_top" href="/upsc_ias_exams.htm">UPSC IAS Exams Notes</a></li>
<li><a target="_top" href="/developers_best_practices/index.htm">Developer's Best Practices</a></li>
<li><a target="_top" href="/questions_and_answers.htm">Questions and Answers</a></li>
<li><a target="_top" href="/effective_resume_writing.htm">Effective Resume Writing</a></li>
<li><a target="_top" href="/hr_interview_questions/index.htm">HR Interview Questions</a></li>
<li><a target="_top" href="/computer_glossary.htm">Computer Glossary</a></li>
<li><a target="_top" href="/computer_whoiswho.htm">Who is Who</a></li>
</ul>
<div id="stickyparent">
<div style="height:250px;width:300px;" id="sticky-ad">
<div id="430c9911-782f-495d-88f9-69f58ca8c9a4" class="_ap_apex_ad" >
<script>
var adpushup = adpushup || {};
adpushup.que = adpushup.que || [];
adpushup.que.push(function() {
adpushup.triggerAd("430c9911-782f-495d-88f9-69f58ca8c9a4");
});
</script>
</div>
</div>
</div>
</div>
<!-- Tutorial ToC Ends Here -->
<!-- Tutorial Content Starts Here -->
<div class="mui-col-md-6 tutorial-content">
<h1>JDBC - Interview Questions</h1>
<hr />
<div class="top-ad-heading">Advertisements</div>
<div style="text-align:center" class="google-top-ads">
<div id="adp_top_ads" style="text-align:center !important;"></div>
<script>
     var adPos = document.getElementById('adp_top_ads');
     var ad_id_720 = "8014640d-fd34-4b2e-9b1b-cc67234a2325";
     var ad_id_650 = "2d1bb2c4-eb72-471d-9c80-1bf5514728c1";
     var ad_id_300 = "df94a1a9-ae2f-432d-9a92-d93823ff4503";
     var width = window.innerWidth;
     var ad_id = ad_id_720;
     if( width <= 768 ){
        ad_id =  ad_id_300;
     }else if( width <= 1435 ){
        ad_id =  ad_id_650;
     }
     adPos.innerHTML = '<div id="' + ad_id + '" class="_ap_apex_ad"></div>';
     var adpushup = adpushup || {};
     adpushup.que = adpushup.que || [];
     adpushup.que.push(function() {
     adpushup.triggerAd(ad_id);
     });
</script>
</div>
<br>
<div class="mui-container-fluid button-borders">
<div class="pre-btn">
<a href="index.htm"><i class="fal fa-chevron-circle-left"></i> Previous Page</a>
</div>
<div class="nxt-btn">
<a href="index.htm">Next Page <i class="fal fa-chevron-circle-right"></i>&nbsp;</a>
</div>
</div>
<div class="clearer"></div>
<p>Dear readers, these <b>JDBC Interview Questions</b> have been designed specially to get you acquainted with the nature of questions you may encounter during your interview for the subject of <b>JDBC</b>. As per my experience good interviewers hardly plan to ask any particular question during your interview, normally questions start with some basic concept of the subject and later they continue based on further discussion and what you answer:</p>
<section class="toggle">
<label> What is JDBC?</label>
<div class="toggle-content">
<p>JDBC stands for Java Database Connectivity, which is a standard Java API for database-independent connectivity between the Java programming language and a wide range of databases.</p>
</div>
</section>
<section class="toggle">
<label> Describe a general JDBC Architecture.</label>
<div class="toggle-content">
<p>General JDBC Architecture consists of two layers JDBC API (This provides the application-to-JDBC Manager connection) and JDBC Driver API (This supports the JDBC Manager-to-Driver Connection).</p>
</div>
</section>
<section class="toggle">
<label> What are the common JDBC API components?</label>
<div class="toggle-content">
<p>JDBC API consists of following interfaces and classes DriverManager, Driver, Connection, Statement, ResultSet, SQLException.</p>
</div>
</section>
<section class="toggle">
<label> What is a JDBC DriverManager?</label>
<div class="toggle-content">
<p>JDBC DriverManager is a class that manages a list of database drivers. It matches connection requests from the java application with the proper database driver using communication subprotocol.</p>
</div>
</section>
<section class="toggle">
<label> What is a JDBC Driver?</label>
<div class="toggle-content">
<p>JDBC driver is an interface enabling a Java application to interact with a database. To connect with individual databases, JDBC requires drivers for each database. The JDBC driver gives out the connection to the database and implements the protocol for transferring the query and result between client and database.</p>
</div>
</section>
<section class="toggle">
<label> What is a connection?</label>
<div class="toggle-content">
<p>Connection interface consists of methods for contacting a database. The connection object represents communication context.</p>
</div>
</section>
<section class="toggle">
<label> What is a statement?</label>
<div class="toggle-content">
<p>Statement encapsulates an SQL statement which is passed to the database to be parsed, compiled, planned and executed.</p>
</div>
</section>
<section class="toggle">
<label> What is a ResultSet?</label>
<div class="toggle-content">
<p>These objects hold data retrieved from a database after you execute an SQL query using Statement objects. It acts as an iterator to allow you to move through its data. The java.sql.ResultSet interface represents the result set of a database query.</p>
</div>
</section>
<section class="toggle">
<label> What are types of ResultSet?</label>
<div class="toggle-content">
<p>There are three constants which when defined in result set can move cursor in resultset backward, forward and also in a particular row.</p>
<ul class="list">
<li><p><b>ResultSet.TYPE_FORWARD_ONLY</b> &minus; The cursor can only move forward in the result set.</p></li>
<li><p><b>ResultSet.TYPE_SCROLL_INSENSITIVE</b> &minus; The cursor can scroll forwards and backwards, and the result set is not sensitive to changes made by others to the database that occur after the result set was created.</p></li>
<li><p><b>ResultSet.TYPE_SCROLL_SENSITIVE</b> &minus; The cursor can scroll forwards and backwards, and the result set is sensitive to changes made by others to the database that occur after the result set was created.</p></li>
</ul>
</div>
</section>
<section class="toggle">
<label> What are the basic steps to create a JDBC application?</label>
<div class="toggle-content">
<p>Following are the basic steps to create a JDBC application
<ul class="list">
<li><p>Import packages containing the JDBC classes needed for database programming.</p></li>
<li><p>Register the JDBC driver, so that you can open a communications channel with the database.</p></li>
<li><p>Open a connection using the DriverManager.getConnection () method.</p></li>
<li><p>Execute a query using an object of type Statement.</p></li>
<li><p>Extract data from result set using the appropriate ResultSet.getXXX () method.</p></li>
<li><p>Clean up the environment by closing all database resources relying on the JVM's garbage collection.</p></li>
</ul>
</div>
</section>
<section class="toggle">
<label> What are JDBC driver types?</label>
<div class="toggle-content">
<p>There are four types of JDBC drivers</p>
<ul class="list">
<li><p><b>JDBC-ODBC Bridge plus ODBC driver</b> &minus; also called Type 1 calls native code of the locally available ODBC driver.</p></li>
<li><p><b>Native-API, partly Java driver</b> &minus; also called Type 2 calls database vendor native library on a client side. This code then talks to database over network.</p></li>
<li><p><b>JDBC-Net, pure Java driver</b> &minus; also called Type 3  the pure-java driver that talks with the server-side middleware that then talks to database.</p></li>
<li><p><b>Native-protocol, pure Java driver</b> &minus; also called Type 4 the pure-java driver that uses database native protocol.</p></li>
</ul>
</div>
</section>
<section class="toggle">
<label> When should each of the JDBC driver type be used?</label>
<div class="toggle-content">
<p>Following is a list as to when the four types of drivers can be used
<ul class="list">
<li><p>If you are accessing one type of database, such as Oracle, Sybase, or IBM, the preferred driver type is 4.</p></li>
<li><p>If your Java application is accessing multiple types of databases at the same time, type 3 is the preferred driver.</p></li>
<li><p>Type 2 drivers are useful in situations where a type 3 or type 4 driver is not available yet for your database.</p></li>
<li><p>The type 1 driver is not considered a deployment-level driver and is typically used for development and testing purposes only.</p></li>
</ul>
</div>
</section>
<section class="toggle">
<label> Which type of JDBC driver is the fastest one?</label>
<div class="toggle-content">
<p>JDBC Net pure Java driver(Type 4) is the fastest driver because it converts the JDBC calls into vendor specific protocol calls and it directly interacts with the database.</p>
</div>
</section>
<section class="toggle">
<label> Does the JDBC-ODBC Bridge support multiple concurrent open statements per connection?</label>
<div class="toggle-content">
<p>No. You can open only one Statement object per connection when you are using the JDBC-ODBC Bridge.</p>
</div>
</section>
<section class="toggle">
<label> What are the standard isolation levels defined by JDBC?</label>
<div class="toggle-content">
<p>The standard isolation levels are</b>
<ul class="list">
<li><p><b>TRANSACTION_NONE</b></p></li>
<li><p><b>TRANSACTION_READ_COMMITTED</b></p></li>
<li><p><b>TRANSACTION_READ_UNCOMMITTED</b></p></li>
<li><p><b>TRANSACTION_REPEATABLE_READ</b></p></li>
<li><p><b>TRANSACTION_SERIALIZABLE</b></p></li>
</ul>
</div>
</section>
<section class="toggle">
<label> What is the design pattern followed by JDBC?</label>
<div class="toggle-content">
<p>JDBC architecture decouples an abstraction from its implementation. Hence JDBC follows a bridge design pattern. The JDBC API provides the abstraction and the JDBC drivers provide the implementation. New drivers can be plugged-in to the JDBC API without changing the client code.</p>
</div>
</section>
<section class="toggle">
<label> What are the different types of JDBC Statements?</label>
<div class="toggle-content">
<p>Types of statements are</p>
<ul class="list">
<li><p><b>Statement</b> &minus; regular SQL statement.</p></li>
<li><p><b>PreparedStatement</b> &minus; more efficient than statement due to pre-compilation of SQL.</p></li>
<li><p><b>CallableStatement</b> &minus; to call stored procedures on the database.</p></li>
</ul>
</div>
</section>
<section class="toggle">
<label> What is difference between statement and prepared statement?</label>
<div class="toggle-content">
<p>Prepared statements offer better performance, as they are pre-compiled. Prepared statements reuse the same execution plan for different arguments rather than creating a new execution plan every time. Prepared statements use bind arguments, which are sent to the database engine. This allows mapping different requests with same prepared statement but different arguments to execute the same execution plan. Prepared statements are more secure because they use bind variables, which can prevent SQL injection attack.</p>
</div>
</section>
<section class="toggle">
<label> How do you register a driver?There are 2 approaches for registering the Driver</label>
<div class="toggle-content">
<ul class="list">
<li><p><b>Class.forName()</b> &minus; This method dynamically loads the driver's class file into memory, which automatically registers it. This method is preferable because it allows you to make the driver registration configurable and portable.</p></li>
<li><p><b>DriverManager.registerDriver()</b> &minus; This static method is used in case you are using a non-JDK compliant JVM, such as the one provided by Microsoft.</p></li>
</ul>
</div>
</section>
<section class="toggle">
<label> What are the benefits of JDBC 4.0?</label>
<div class="toggle-content">
<p>Here are few advantages of JDBC 4.0</p>
<ul class="list">
<li><p>Auto loading of JDBC driver class. In the earlier versions we had to manually register and load drivers using class.forName.</p></li>
<li><p>Connection management enhancements. New methods added to javax.sql.PooledConnection.</p></li>
<li><p>DataSet Implementation of SQL using annotations.</p></li>
<li><p>SQL XML support.</p></li>
</ul>
</div>
</section>
<section class="toggle">
<label> What do you mean by fastest type of JDBC driver?</label>
<div class="toggle-content">
<p>JDBC driver performance or fastness depends on a number of issues Quality of the driver code, size of the driver code, database server and its load, Network topology, Number of times your request is translated to a different API.</p>
</div>
</section>
<section class="toggle">
<label> In real time project which driver did you use?</label>
<div class="toggle-content">
<p>Tell about your real time experience.</p>
</div>
</section>
<section class="toggle">
<label> How do you create a connection object?</label>
<div class="toggle-content">
<p>There are 3 overloaded DriverManager.getConnection() methods to create a connection object</p>
<p>getConnection(String url, String user, String password)Using a database URL with a username and password. For example</p>
<pre class="prettyprint notranslate">
String URL = "jdbcoraclethin@amrood1521EMP";
String USER = "username";
String PASS = "password"
Connection conn = DriverManager.getConnection(URL, USER, PASS);
getConnection(String url)Using only a database URL. For example
</pre>
<pre class="prettyprint notranslate">
String URL = "jdbcoraclethinusername/password@amrood1521EMP";
Connection conn = DriverManager.getConnection(URL);
getConnection(String url, Properties prop)Using a database URL and a Properties object. For example
</pre>
<pre class="prettyprint notranslate">
String URL = "jdbcoraclethin@amrood1521EMP";
Properties info = new Properties( );
info.put( "user", "username" );
info.put( "password", "password" );
</pre>
</div>
</section>
<section class="toggle">
<label> How can I determine whether a Statement and its ResultSet will be closed on a commit or rollback?</label>
<div class="toggle-content">
<p>Use the DatabaseMetaData methods supportsOpenStatementsAcrossCommit() and supportsOpenStatementsAcrossRollback() to check.</p>
</div>
</section>
<section class="toggle">
<label> Is there a practical limit for the number of SQL statements that can be added to an instance of a Statement object?</label>
<div class="toggle-content">
<p>The specification makes no mention of any size limitation for Statement.addBatch(), this is dependent, on the driver.</p>
</div>
</section>
<section class="toggle">
<label> How cursor works in scrollable result set?</label>
<div class="toggle-content">
<p>There are several methods in the ResultSet interface that involve moving the cursor, like beforeFirst(), afterLast(), first(), last(), absolute(int row), relative(int row), previous(), next(), getRow(), moveToInsertRow(), moveToCurrentRow().</p>
</div>
</section>
<section class="toggle">
<label> How can you view a result set?</label>
<div class="toggle-content">
<p>ResultSet interface contains get methods for each of the possible data types, and each get method has two versions</p>
<ul class="list">
<li><p>One that takes in a column name.</p></li>
<li><p>One that takes in a column index.</p></li>
</ul>
<p>For e.g. getInt(String columnName), getInt(int columnIndex)</p>
</div>
</section>
<section class="toggle">
<label> How do you update a result set?</label>
<div class="toggle-content">
<p>ResultSet interface contains a collection of update methods for updating the data of a result set. Each update method has two versions for each data type</p>
<ul class="list">
<li><p>One that takes in a column name.</p></li>
<li><p>One that takes in a column index.</p></li>
</ul>
<p>These methods change the columns of the current row in the ResultSet object, but not in the underlying database. To update your changes to the row in the database, you need to invoke one of the following methods</p>
<p>updateRow(), deleteRow(), refreshRow(), cancelRowUpdates(), insertRow()</p>
</div>
</section>
<section class="toggle">
<label> How does JDBC handle the data types of Java and database?</label>
<div class="toggle-content">
<p>The JDBC driver converts the Java data type to the appropriate JDBC type before sending it to the database. It uses a default mapping for most data types. For example, a Java int is converted to an SQL INTEGER.</p>
</div>
</section>
<section class="toggle">
<label> What causes "No suitable driver" error?</label>
<div class="toggle-content">
<p>"No suitable driver" is occurs during a call to the DriverManager.getConnection method, may be of any of the following reason</p>
<ul class="list">
<li><p>Due to failing to load the appropriate JDBC drivers before calling the getConnection method.</p></li>
<li><p>It can be specifying an invalid JDBC URL, one that is not recognized by JDBC driver.</p></li>
<li><p>This error can occur if one or more the shared libraries needed by the bridge cannot be loaded.</p></li>
</ul>
</div>
</section>
<section class="toggle">
<label> How do you handle SQL NULL values in Java?</label>
<div class="toggle-content">
<p>SQL's use of NULL values and Java's use of null are different concepts. There are three tactics you can use</p>
<ul class="list">
<li><p>Avoid using getXXX( ) methods that return primitive data types.</p></li>
<li><p>Use wrapper classes for primitive data types, and use the ResultSet object's wasNull( ) method to test whether the wrapper class variable that received the value returned by the getXXX( ) method should be set to null.</p></li>
<li><p>Use primitive data types and the ResultSet object's wasNull( ) method to test whether the primitive variable that received the value returned by the getXXX( ) method should be set to an acceptable value that you've chosen to represent a NULL.</p></li>
</ul>
</div>
</section>
<section class="toggle">
<label> What does setAutoCommit do?</label>
<div class="toggle-content">
<p>When a connection is created, it is in auto-commit mode. This means that each individual SQL statement is treated as a transaction and will be automatically committed right after it is executed. By setting auto-commit to false no SQL statements will be committed until you explicitly call the commit method.</p>
</div>
</section>
<section class="toggle">
<label> Why will you set auto commit mode to false?</label>
<div class="toggle-content">
<p>Following are the reasons</p>
<ul class="list">
<li><p>To increase performance.</p></li>
<li><p>To maintain the integrity of business processes.</p></li>
<li><p>To use distributed transactions.</p></li>
</ul>
</div>
</section>
<section class="toggle">
<label> What is SavePoint? Give an example.</label>
<div class="toggle-content">
<p>A savepoint marks a point that the current transaction can roll back to. Instead of rolling all of its changes back, it can choose to roll back only some of them. For example, suppose you</p>
<ul class="list">
<li><p>start a transaction.</p></li>
<li><p>insert 10 rows into a table.</p></li>
<li><p>set a savepoint.</p></li>
<li><p>insert another 5 rows.</p></li>
<li><p>rollback to the savepoint.</p></li>
<li><p>commit the transaction.</p></li>
</ul>
<p>After doing this, the table will contain the first 10 rows you inserted. The other 5 rows will have been deleted by the rollback. A savepoint is just a marker that the current transaction can roll back to.</p>
</div>
</section>
<section class="toggle">
<label> What are SQL warnings?</label>
<div class="toggle-content">
<p>SQLWarning objects are a subclass of SQLException that deal with database access warnings. Warnings do not stop the execution of an application, as exceptions do. They simply alert the user that something did not happen as planned. A warning can be reported on a Connection object, a Statement object (including PreparedStatement and CallableStatement objects), or a ResultSet object. Each of these classes has a getWarnings method.</p>
</div>
</section>
<section class="toggle">
<label> Why would you use a batch process?</label>
<div class="toggle-content">
<p>Batch Processing allows you to group related SQL statements into a batch and submit them with one call to the database.</p>
</div>
</section>
<section class="toggle">
<label> What are the steps followed to create a batch process?</label>
<div class="toggle-content">
<p>Typical sequences of steps to use Batch Processing with Statement or PrepareStatement Object are</p>
<ul class="list">
<li><p>In case of Batch processing using PrepareStatement object, create SQL statements with placeholders.</p></li>
<li><p>Create a Statement or PrepareStatement object using either createStatement() or prepareStatement() methods respectively.</p></li>
<li><p>Set auto-commit to false using setAutoCommit().</p></li>
<li><p>Add as many as SQL statements you like into batch using addBatch() method on created statement object.</p></li>
<li><p>Execute all the SQL statements using executeBatch() method on created statement object.</p></li>
<li><p>Finally, commit all the changes using commit() method.</p></li>
</ul>
</div>
</section>
<section class="toggle">
<label> What is a Stored Procedure and how do you call it in JDBC?</label>
<div class="toggle-content">
<p>A stored procedure is a group of SQL statements that form a logical unit and perform a particular task. For example operations on an employee database (hire, fire, promote, lookup) could be coded as stored procedures executed by application code. Stored procedures can be called using CallableStatement class in JDBC API. For example the following code demonstrates this</p>
<pre class="prettyprint notranslate">
CallableStatement cs = con.prepareCall("{call MY_SAMPLE_STORED_PROC}");
ResultSet rs = cs.executeQuery();
</pre>
</div>
</section>
<section class="toggle">
<label> What is JDBC SQL escape syntax?</label>
<div class="toggle-content">
<p>The escape syntax gives you the flexibility to use database specific features unavailable to you by using standard JDBC methods and properties.</p>
<p>The general SQL escape syntax format is as follows</p>
<pre class="prettyprint notranslate">
{keyword 'parameters'}.
</pre>
<p>JDBC defines escape sequences that contain the standard syntax for the following language features</p>
<ul class="list">
<li><p>Date, time, and timestamp literals (d, t, ts Keywords).</p></li>
<li><p>Scalar functions such as numeric, string, and data type conversion functions(fn Keyword).</p></li>
<li><p>Outer joins(oj Keyword)</p></li>
<li><p>Escape characters for wildcards used in LIKE clauses(escape Keyword).</p></li>
<li><p>Procedure calls(call Keyword).</p></li>
</ul>
</div>
</section>
<section class="toggle">
<label> What is a transaction?</label>
<div class="toggle-content">
<p>A transaction is a logical unit of work. To complete a logical unit of work, several actions may need to be taken against a database. Transactions are used to provide data integrity, correct application semantics, and a consistent view of data during concurrent access.</p>
</div>
</section>
<section class="toggle">
<label> How will you insert multiple rows into a database in a single transaction?</label>
<div class="toggle-content">
<p>Follow steps as below</p>
<pre class="prettyprint notranslate">
//turn off the implicit commit
Connection.setAutoCommit(false);
//..your insert/update/delete goes here
Connection.Commit();
//a new transaction is implicitly started.
</pre>
</div>
</section>
<section class="toggle">
<label> When will you get the message "No Suitable Driver"?</label>
<div class="toggle-content">
<p>When a Connection request is issued, the DriverManager asks each loaded driver if it understands the URL sent. When the URL passed is not properly constructed, then the "No Suitable Driver" message is returned.</p>
</div>
</section>
<section class="toggle">
<label> What is the difference between execute, executeQuery, executeUpdate?</label>
<div class="toggle-content">
<ul class="list">
<li><p><b>boolean execute()</b> - Executes the any kind of SQL statement.</p></li>
<li><p><b>ResultSet executeQuery()</b> - This is used generally for reading the content of the database. The output will be in the form of ResultSet. Generally SELECT statement is used.</p></li>
<li><p><b>int executeUpdate()</b> - This is generally used for altering the databases. Generally DROP TABLE or DATABASE, INSERT into TABLE, UPDATE TABLE, DELETE from TABLE statements will be used in this. The output will be in the form of int which denotes the number of rows affected by the query.</p></li>
</ul>
</div>
</section>
<section class="toggle">
<label> Why do you have to close database connections in Java?</label>
<div class="toggle-content">
<p>You need to close the resultset, the statement and the connection. If the connection has come from a pool, closing it actually sends it back to the pool for reuse. We can do this in the finally{} block, such that if an exception is thrown, you still get the chance to close this.</p>
</div>
</section>
<section class="toggle">
<label> What is the use of blob, clob datatypes in JDBC?</label>
<div class="toggle-content">
<p>These are used to store large amount of data into database like images, movie etc which are extremely large in size.</p>
</div>
</section>
<section class="toggle">
<label> Resultset is an interface, how does it support rs.Next()?</label>
<div class="toggle-content">
<p>Every vendor of Database provides implementation of ResultSet & other interfaces, through the Driver.</p>
</div>
</section>
<section class="toggle">
<label> What is Connection Pooling?</label>
<div class="toggle-content">
<p>Connection Pooling is a technique used for reuse of physical connections and reduced overhead for your application. Connection pooling functionality minimizes expensive operations in the creation and closing of sessions.Database vendor's help multiple clients to share a cached set of connection objects that provides access to a database. Clients need not create a new connection everytime to interact with the database.</p>
</div>
</section>
<section class="toggle">
<label> How do you implement connection pooling?</label>
<div class="toggle-content">
<p>If you use an application server like WebLogic, WebSphere, jBoss, Tomcat. , then your application server provides the facilities to configure for connection pooling. If you are not using an application server then components like Apache Commons DBCP Component can be used.</p>
</div>
</section>
<section class="toggle">
<label> Out of byte[] or a java.sql.Blob, which has best performance when used to manipulate data from database?</label>
<div class="toggle-content">
<p>java.sql.Blob has better performance as it does not extract any data from the database until you explicitly ask it to.</p>
</div>
</section>
<section class="toggle">
<label> Out of String or a java.sql.Clob, which has best performance when used to manipulate data from database?</label>
<div class="toggle-content">
<p>java.sql.Clob has better performance as it does not extract any data from the database until you explicitly ask it to.</p>
</div>
</section>
<section class="toggle">
<label> Suppose the SELECT returns 1000 rows, then how to retrieve the first 100 rows, then go back and retrieve the next 100 rows?</label>
<div class="toggle-content">
<p>Use the Statement.setFetchSize method to indicate the size of each database fetch.</p>
</div>
</section>
<section class="toggle">
<label> What does the Class.forName("MyClass") do?</label>
<div class="toggle-content">
<p>Class.forName("MyClass")</p>
<ul class="list">
<li><p>Loads the class MyClass.</p></li>
<li><p>Execute any static block code of MyClass.</p></li>
<li><p>Returns an instance of MyClass.</p></li>
</ul>
</div>
</section>
<section class="toggle">
<label> When you say Class.forName() loads the driver class, does it mean it imports the driver class using import statement?</label>
<div class="toggle-content">
<p>No, it doesn't. An import statement tells the compiler which class to look for. Class.forName() instructs the Classclass to find a class-loader and load that particular Class object into the memory used by the JVM.</p>
</div>
</section>
<section class="toggle">
<label> What we set the attribute Concurrency in ResultSet?</label>
<div class="toggle-content">
<p>The ResultSet concurrency determines whether the ResultSet can be updated, or only read. A ResultSet can have one of two concurrency levels</p>
<ul class="list">
<li><p><b>ResultSet.CONCUR_READ_ONLY</b> &minus; means that the ResultSet can only be read.</p></li>
<li><p><b>ResultSet.CONCUR_UPDATABLE</b> &minus; means that the ResultSet can be both read and updated.</p></li>
</ul>
</div>
</section>
<section class="toggle">
<label> What are the differences between setMaxRows(int) and SetFetchSize(int)?</label>
<div class="toggle-content">
<p>The difference between setFetchSize(int) and setMaxRow(int) are</p>
<ul class="list">
<li><p>setFetchSize(int) defines the number of rows that will be read from the database when the ResultSet needs more rows. setFetchSize(int) affects how the database returns the ResultSet data.</p></li>
<li><p>setMaxRows(int) method of the ResultSet specifies how many rows a ResultSet can contain at a time. setMaxRows(int) affects the client side JDBC object.</p></li>
</ul>
</div>
</section>
<section class="toggle">
<label> What is a RowSet?</label>
<div class="toggle-content">
<p>A JDBC RowSet object holds tabular data in a way that makes it more flexible and easier to use than a result set. A RowSet objects are JavaBeans components.</p>
</div>
</section>
<section class="toggle">
<label> What are different types of RowSet objects?</label>
<div class="toggle-content">
<p>There are two types of RowSet</p>
<ul class="list">
<li><p><b>Connected</b> A connected RowSet Object is permanent in nature. It doesn't terminate until the application is terminated.</p></li>
<li><p><b>Disconnected</b> A disconnected RowSet object is ad-hoc in nature. Whenever it requires retrieving data from the database, it establishes the connection and closes it upon finishing the required task. The data that is modified during disconnected state is updated after the connection is re-established.</p></li>
</ul>
</div>
</section>
<section class="toggle">
<label> What is a "dirty read"?</label>
<div class="toggle-content">
<p>In typical database transactions, say one transaction reads and changes the value while the second transaction reads the value before committing or rolling back by the first transaction. This reading process is called as 'dirty read'. Because there is always a chance that the first transaction might rollback the change which causes the second transaction reads an invalid value.</p>
</div>
</section>
<section class="toggle">
<label> Which isolation level prevents dirty read in JDBC, connection class?</label>
<div class="toggle-content">
<p>TRANSACTION_READ_COMMITTED prevents dirty reads.</p>
</div>
</section>
<section class="toggle">
<label> What is Metadata and why should you use it?</label>
<div class="toggle-content">
<p>JDBC API has two Metadata interfaces  DatabaseMetaData & ResultSetMetaData. The meta data provides comprehensive information about the database as a whole. The implementation for these interfaces is implemented by database driver vendors to let users know the capabilities of a Database.</p>
</div>
</section>
<section class="toggle">
<label> How to Connect to an Excel Spreadsheet using JDBC in Java?</label>
<div class="toggle-content">
<p>Follow the steps below</p>
<p>First setup the new ODBC datasource. Goto Administrative Tools&minus;&gt;Data Sources (ODBC)&minus;&gt;System DSN tab&minus;&gt;Add&minus;&gt;Driver do Microsoft Excel(*.xls)&minus;&gt;Finish. Now give the Data Source Name (SampleExcel) &amp; Description. Next, click Select Workbook and point to your excel sheet.</p>
<p>In the code make to following code additions</p>
<pre class="prettyprint notranslate">
Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
Connection conn = DriverManager.getConnection("jdbcodbcSampleExcel","","");
stmt = conn.createStatement();
sql = "select * from [Sheet1$]";
rs=stmt.executeQuery(sql);
</pre>
<p>Where Sheet1 is the excel sheet name.</p>
</div>
</section>
<section class="toggle">
<label> What is difference between JDBC, JNDI and Hibernate?</label>
<div class="toggle-content">
<ul class="list">
<li><p>Hibernate is an Object&minus;Relational Mapping tool. It maps Objects to relational data.</p></li>
<li><p>The Java Naming and Directory Interface (JNDI) is an API to access different naming and directory services. You use it to access something stored in a directory or naming service without haveing to code specifically to that naming or directory service.</p></li>
<li><p>Java DataBase Connectivity (JDBC) API is an API to access different relational databases. You use it to access relational databases without embedding a dependency on a specific database type in your code.</p></li>
</ul>
</div>
</section>
<h2>What is Next ?</h2>
<p>Further you can go through your past assignments you have done with the subject and make sure you are able to speak confidently on them. If you are fresher then interviewer does not expect you will answer very complex questions, rather you have to make your basics concepts very strong.</p>
<p>Second it really doesn't matter much if you could not answer few questions but it matters that whatever you answered, you must have answered with confidence. So just feel confident during your interview. We at tutorialspoint wish you best luck to have a good interviewer and all the very best for your future endeavor. Cheers :-)</p>
<div class="mui-container-fluid button-borders show" id="bottom_navigation">
<div class="pre-btn">
<a href="index.htm"><i class="fal fa-chevron-circle-left"></i> Previous Page</a>
<a class="hide-on-mobile" href="javascript:printPage();"><i class="fa fa-print"></i> Print Page</a>
</div>
<div class="nxt-btn">
<a href="index.htm">Next Page <i class="fal fa-chevron-circle-right"></i>&nbsp;</a>
</div>
</div>
<div class="google-bottom-ads">
<div>Advertisements</div>
<div id="adp_bottom_ads"></div>
<script>
var adPos = document.getElementById('adp_bottom_ads');
var mobile_ad_id = "a8a632a6-046e-4f5c-b25f-8bc82ac89fb2";
var desktop_ad_id = "e7ddd6f7-1ab0-494a-bade-887daa4373a0";
var adpushup = adpushup || {};
adpushup.que = adpushup.que || [];
adpushup.que.push(function() {
var ad_id = window.innerWidth <= 768 ? mobile_ad_id : desktop_ad_id;
adPos.innerHTML = '<div id="' + ad_id + '" class="_ap_apex_ad"></div>';
adpushup.triggerAd(ad_id);
});
</script>
<div class="space-bottom"></div>
</div>
</div>
<!-- Tutorial Content Ends Here -->
<!-- Right Column Starts Here -->
<div class="mui-col-md-2 google-right-ads">
<div class="space-top"></div>
<div class="google-right-ad" id="ad300" style="margin: 0px auto !important;margin-top:5px;">
<div id="f0f6cff6-393d-4170-b63a-d9ff06ca9f25" class="_ap_apex_ad">
<script>
var adpushup = adpushup || {};
adpushup.que = adpushup.que || [];
adpushup.que.push(function() {
adpushup.triggerAd("f0f6cff6-393d-4170-b63a-d9ff06ca9f25");
});
</script>
</div>
</div>
<div class="google-right-ad" style="margin-top:16px;">
<div id="5c0affd5-724a-475c-bfcd-cecbc7660c36" class="_ap_apex_ad">
<script>
var adpushup = adpushup || {};
adpushup.que = adpushup.que || [];
adpushup.que.push(function() {
adpushup.triggerAd("5c0affd5-724a-475c-bfcd-cecbc7660c36");
});
</script>
</div>
</div>
<div class="space-bottom"></div>

<div class="google-right-ad" style="margin-top:16px;margin-bottom:15px;">
<div id="8f8814c2-d64c-4d26-9cb9-543653c0b48f" class="_ap_apex_ad">
<script>
var adpushup = adpushup || {};
adpushup.que = adpushup.que || [];
adpushup.que.push(function() {
adpushup.triggerAd("8f8814c2-d64c-4d26-9cb9-543653c0b48f");
});
</script>
</div>
</div>
</div>
</div>
<!-- Right Column Ends Here -->
</div>
</div>
<div class="clear"></div>
<footer id="footer">
<div class="mui--text-center">
<div class="mui--text-caption mui--text-light">
<a href="/index.htm" class="logo"><img class="img-responsive" src="/images/logo-black.png" alt="Tutorials Point" title="Tutorials Point"></a>
</div>
<ul class="mui-list--inline mui--text-body2 mui--text-light">
<li><a href="/about/index.htm"><i class="fal fa-globe"></i> About us</a></li>
<li><a href="/about/about_terms_of_use.htm"><i class="fal fa-asterisk"></i> Terms of use</a></li>
<li><a href="/about/about_privacy.htm"> <i class="fal fa-shield-check"></i> Privacy Policy</a></li>
<li><a href="/about/faq.htm"><i class="fal fa-question-circle"></i> FAQ's</a></li>
<li><a href="/about/about_helping.htm"><i class="fal fa-hands-helping"></i> Helping</a></li>
<li><a href="/about/contact_us.htm"><i class="fal fa-map-marker-alt"></i> Contact</a></li>
</ul>
<div class="mui--text-caption mui--text-light bottom-copyright-text">&copy; Copyright 2020. All Rights Reserved.</div>
</div>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-232293-17"></script>
<script>
window.dataLayer = window.dataLayer || [];
function gtag(){dataLayer.push(arguments);}
gtag('js', new Date());
gtag('config', 'UA-232293-6');
</script>
</footer>
</body>
</html>

