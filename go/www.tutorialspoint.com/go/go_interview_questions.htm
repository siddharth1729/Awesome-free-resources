<!DOCTYPE html>
<html lang="en-US">
<head>
<title>Go - Interview Questions - Tutorialspoint</title>
<meta charset="utf-8">
<meta name="description" content="Go - Interview Questions - Dear readers, these Go Programming Language Interview Questions have been designed specially to get you acquainted with the nature of questions you may encounte"/>
<meta name="keywords" content="C, C++, Python, Java, HTML, CSS, JavaScript, SQL, PHP, jQuery, XML, DOM, Bootstrap, Tutorials, Articles, Programming, training, learning, quiz, preferences, examples, code"/>
<link rel="canonical" href="https://www.tutorialspoint.com/go/go_interview_questions.htm" />
<link rel="shortcut icon" href="/favicon.ico" type="image/x-icon" />
<meta name="viewport" content="width=device-width,initial-scale=1.0,user-scalable=yes">
<link rel="stylesheet" href="/themes/css/style-min-v1.css?v=2.0.3">
<script src="/themes/js/script-min-v1.js?v=2.0.0"></script>
<script>function printPage() { window.print(); }</script>
<script data-cfasync="false" type="text/javascript">(function(w, d) { var s = d.createElement('script'); s.src = '//cdn.adpushup.com/40046/adpushup.js'; s.type = 'text/javascript'; s.async = true; (d.getElementsByTagName('head')[0] || d.getElementsByTagName('body')[0]).appendChild(s); })(window, document);</script>
<script data-cfasync="false" type="text/javascript">(function(w, d) { var s = d.createElement('script'); s.src = '//delivery.adrecover.com/18107/adRecover.js'; s.type = 'text/javascript'; s.async = true; (d.getElementsByTagName('head')[0] || d.getElementsByTagName('body')[0]).appendChild(s); })(window, document);</script>
<style>
.right-menu .mui-btn {
    background-color:#74cddd;
}
a.demo {
    background:#74cddd;
}
li.heading {
    background:#74cddd;
}
.course-box{background:#74cddd}
.home-intro-sub p{color:#74cddd}
</style>
</head>
<body>
<header id="header">
<!-- Top sub-menu Starts Here -->
<div class="mui-appbar mui-container-fulid top-menu">
<div class="mui-container">
<div class="top-menu-item home">
<a href="https://www.tutorialspoint.com/index.htm" target="_blank" title="TutorialsPoint - Home"><i class="fal fa-home"></i> <span>Home</span></a>
</div>
<div class="top-menu-item qa">
<a href="https://www.tutorialspoint.com/about/about_careers.htm" target="_blank" title="Job @ Tutorials Point"><i class="fa fa-suitcase"></i> <span>Jobs</span></a>
</div>
<div class="top-menu-item tools">
<a href="https://www.tutorialspoint.com/online_dev_tools.htm" target="_blank" title="Tools - Online Development and Testing Tools"><i class="fal fa-cogs"></i> <span>Tools</span></a>
</div>
<div class="top-menu-item coding-ground">
<a href="https://www.tutorialspoint.com/codingground.htm" target="_blank" title="Coding Ground - Free Online IDE and Terminal"><i class="fal fa-code"></i> <span>Coding Ground </span></a> 
</div>
<div class="top-menu-item current-affairs">
<a href="https://www.tutorialspoint.com/current_affairs.htm" target="_blank" title="Daily Current Affairs"><i class="fal fa-layer-plus"></i> <span>Current Affairs</span></a>
</div>
<div class="top-menu-item upsc-notes">
<a href="https://www.tutorialspoint.com/upsc_ias_exams.htm" target="_blank" title="UPSC IAS Exams Notes - TutorialsPoint"><i class="fal fa-user-tie"></i> <span>UPSC Notes</span></a>
</div>      
<div class="top-menu-item online-tutoris">
<a href="https://www.tutorialspoint.com/tutor_connect/index.php" target="_blank" title="Top Online Tutors - Tutor Connect"><i class="fal fa-user"></i> <span>Online Tutors</span></a>
</div>
<div class="top-menu-item whiteboard">
<a href="https://www.tutorialspoint.com/whiteboard.htm" target="_blank" title="Free Online Whiteboard"><i class="fal fa-chalkboard"></i> <span>Whiteboard</span></a>
</div>
<div class="top-menu-item net-meeting">
<a href="https://www.tutorialspoint.com/netmeeting.php" target="_blank" title="A free tool for online video conferencing"><i class="fal fa-chalkboard-teacher"></i> <span>Net Meeting</span></a> 
</div>
<div class="top-menu-item articles">
<a href="https://www.tutorix.com" target="_blank" title="Tutorx - The Best Learning App" rel="nofollow"><i class="fal fa-video"></i> <span>Tutorix</span></a> 
</div>        
<div class="social-menu-item">
<a href="https://www.facebook.com/tutorialspointindia" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Facebook"><i class="fab fa-facebook-f"></i></a> 
<a href="https://www.twitter.com/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Twitter"><i class="fab fa-twitter"></i></a>
<a href="https://www.linkedin.com/company/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Linkedin"><i class="fab fa-linkedin-in"></i></a>
<a href="https://www.youtube.com/channel/UCVLbzhxVTiTLiVKeGV7WEBg" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint YouTube"><i class="fab fa-youtube"></i></a>
</div>        
</div>
</div>
<!-- Top sub-menu Ends Here -->
<!-- Top main-menu Starts Here -->
<div class="mui-appbar mui-container-fulid mui--appbar-line-height mui--z1" id="logo-menu">
<div class="mui-container">
<div class="left-menu">
<a href="https://www.tutorialspoint.com/index.htm" title="Tutorialspoint">
<img class="tp-logo" alt="tutorialspoint" src="/go/images/logo.png">
</a>
<div class="mui-dropdown">
<a class="mui-btn mui-btn--primary categories" data-mui-toggle="dropdown"><i class="fa fa-th-large"></i> 
<span>Categories <span class="mui-caret"></span></span></a>            
<ul class="mui-dropdown__menu cat-menu">
<li>
<ul>
<li><a href="/academic_tutorials.htm"><i class="fa fa-caret-right"></i> Academic Tutorials</a></li>
<li><a href="/big_data_tutorials.htm"><i class="fa fa-caret-right"></i> Big Data &amp; Analytics </a></li>
<li><a href="/computer_programming_tutorials.htm"><i class="fa fa-caret-right"></i> Computer Programming </a></li>
<li><a href="/computer_science_tutorials.htm"><i class="fa fa-caret-right"></i> Computer Science </a></li>
<li><a href="/database_tutorials.htm"><i class="fa fa-caret-right"></i> Databases </a></li>
<li><a href="/devops_tutorials.htm"><i class="fa fa-caret-right"></i> DevOps </a></li>
<li><a href="/digital_marketing_tutorials.htm"><i class="fa fa-caret-right"></i> Digital Marketing </a></li>
<li><a href="/engineering_tutorials.htm"><i class="fa fa-caret-right"></i> Engineering Tutorials </a></li>
<li><a href="/upsc_ias_exams.htm"><i class="fa fa-caret-right"></i> Exams Syllabus </a></li>
<li><a href="/famous_monuments.htm"><i class="fa fa-caret-right"></i> Famous Monuments </a></li>
<li><a href="/gate_exams_tutorials.htm"><i class="fa fa-caret-right"></i> GATE Exams Tutorials</a></li>
<li><a href="/latest_technologies.htm"><i class="fa fa-caret-right"></i> Latest Technologies </a></li>
<li><a href="/machine_learning_tutorials.htm"><i class="fa fa-caret-right"></i> Machine Learning </a></li>
<li><a href="/mainframe_tutorials.htm"><i class="fa fa-caret-right"></i> Mainframe Development </a></li>
<li><a href="/management_tutorials.htm"><i class="fa fa-caret-right"></i> Management Tutorials </a></li>
<li><a href="/maths_tutorials.htm"><i class="fa fa-caret-right"></i> Mathematics Tutorials</a></li>
<li><a href="/microsoft_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> Microsoft Technologies </a></li>
<li><a href="/misc_tutorials.htm"><i class="fa fa-caret-right"></i> Misc tutorials </a></li>
<li><a href="/mobile_development_tutorials.htm"><i class="fa fa-caret-right"></i> Mobile Development </a></li>
<li><a href="/java_technology_tutorials.htm"><i class="fa fa-caret-right"></i> Java Technologies </a></li>
<li><a href="/python_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> Python Technologies </a></li>
<li><a href="/sap_tutorials.htm"><i class="fa fa-caret-right"></i> SAP Tutorials </a></li>
<li><a href="/scripting_lnaguage_tutorials.htm"><i class="fa fa-caret-right"></i>Programming Scripts </a></li>
<li><a href="/selected_reading.htm"><i class="fa fa-caret-right"></i> Selected Reading </a></li>
<li><a href="/software_quality_tutorials.htm"><i class="fa fa-caret-right"></i> Software Quality </a></li>
<li><a href="/soft_skill_tutorials.htm"><i class="fa fa-caret-right"></i> Soft Skills </a></li>
<li><a href="/telecom_tutorials.htm"><i class="fa fa-caret-right"></i> Telecom Tutorials </a></li>
<li><a href="/upsc_ias_exams.htm"><i class="fa fa-caret-right"></i> UPSC IAS Exams </a></li>
<li><a href="/web_development_tutorials.htm"><i class="fa fa-caret-right"></i> Web Development </a></li>
<li><a href="/sports_tutorials.htm"><i class="fa fa-caret-right"></i> Sports Tutorials </a></li>
<li><a href="/xml_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> XML Technologies </a></li>
<li><a href="/multi_language_tutorials.htm"><i class="fa fa-caret-right"></i> Multi-Language</a></li>
<li><a href="/questions_and_answers.htm"><i class="fa fa-caret-right"></i> Interview Questions</a></li>
</ul>
</li>
</ul>
<div class="clear"></div>
</div> 
</div>
<div class="right-menu">
<div class="toc-toggle">
<a href="javascript:void(0);"><i class="fa fa-bars"></i></a>
</div>
<div class="mobile-search-btn">
<a href="https://www.tutorialspoint.com/search.htm"><i class="fal fa-search"></i></a>
</div>
<div class="search-box">
<form method="get" class="search-form" name="searchform" action="https://www.google.com/search" target="_blank" novalidate="">
<input type="hidden" name="sitesearch" value="www.tutorialspoint.com" class="user-valid valid">
<input class="header-search-box" type="text" id="search-string" name="q" placeholder="Search your favorite tutorials..." onfocus="if (this.value == 'Search your favorite tutorials...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Search your favorite tutorials...';}" autocomplete="off">
<button><i class="fal fa-search"></i></button>
</form>
</div>
<div class="menu-btn library-btn">
<a href="https://www.tutorialspoint.com/tutorialslibrary.htm"><i class="fal fa-cubes"></i> <span>Library</span></a>
</div>
<div class="menu-btn videos-btn">
<a href="https://www.tutorialspoint.com/videotutorials/index.php"><i class="fal fa-video"></i> <span>Videos</span></a> 
</div>
<div class="menu-btn videos-btn">
<a href="https://www.tutorialspoint.com/questions/index.php"><i class="fa fa-location-arrow"></i> <span>Q/A</span></a>
</div>
<div class="menu-btn ebooks-btn">
<a href="https://store.tutorialspoint.com"><i class="fal fa-book"></i> <span>eBooks</span></a>
</div>
<div class="mui-dropdown">
<button class="mui-btn mui-btn--primary mobile-menu" data-mui-toggle="dropdown">
<span class="mui-caret"></span>
</button>
<ul class="mui-dropdown__menu">
<li><a href="https://www.tutorialspoint.com/tutorialslibrary.htm"><i class="fal fa-cubes"></i> <span>Library</span></a></li>
<li><a href="https://www.tutorialspoint.com/videotutorials/index.php"><i class="fal fa-video"></i> <span>Videos</span></a></li>
<li><a href="https://store.tutorialspoint.com"><i class="fal fa-book"></i> <span>eBooks</span></a></li>
</ul>
</div>
</div>
</div>
</div>
<!-- Top main-menu Ends Here -->
</header>
<div class="mui-container-fluid content">
<div class="mui-container">
<!-- Tutorial ToC Starts Here -->
<div class="mui-col-md-3 tutorial-toc">
<div class="mini-logo">
<img src="/go/images/go-mini-logo.jpg" alt="Go Tutorial" />
</div>
<ul class="toc chapters">
<li class="heading">Go Tutorial</li>
<li><a href="/go/index.htm">Go - Home</a></li>
<li><a href="/go/go_overview.htm">Go - Overview</a></li>
<li><a href="/go/go_environment.htm">Go - Environment Setup</a></li>
<li><a href="/go/go_program_structure.htm">Go - Program Structure</a></li>
<li><a href="/go/go_basic_syntax.htm">Go - Basic Syntax</a></li>
<li><a href="/go/go_data_types.htm">Go - Data Types</a></li>
<li><a href="/go/go_variables.htm">Go - Variables</a></li>
<li><a href="/go/go_constants.htm">Go - Constants</a></li>
<li><a href="/go/go_operators.htm">Go - Operators</a></li>
<li><a href="/go/go_decision_making.htm">Go - Decision Making</a></li>
<li><a href="/go/go_loops.htm">Go - Loops</a></li>
<li><a href="/go/go_functions.htm">Go - Functions</a></li>
<li><a href="/go/go_scope_rules.htm">Go - Scope Rules</a></li>
<li><a href="/go/go_strings.htm">Go - Strings</a></li>
<li><a href="/go/go_arrays.htm">Go - Arrays</a></li>
<li><a href="/go/go_pointers.htm">Go - Pointers</a></li>
<li><a href="/go/go_structures.htm">Go - Structures</a></li>
<li><a href="/go/go_slice.htm">Go - Slice</a></li>
<li><a href="/go/go_range.htm">Go - Range</a></li>
<li><a href="/go/go_maps.htm">Go - Maps</a></li>
<li><a href="/go/go_recursion.htm">Go - Recursion</a></li>
<li><a href="/go/go_type_casting.htm">Go - Type Casting</a></li>
<li><a href="/go/go_interfaces.htm">Go - Interfaces</a></li>
<li><a href="/go/go_error_handling.htm">Go - Error Handling</a></li>
</ul>
<ul class="toc chapters">
<li class="heading">Go Useful Resources</li>
<li><a href="/go/go_questions_answers.htm">Go - Questions and Answers</a></li>
<li><a href="/go/go_quick_guide.htm">Go - Quick Guide</a></li>
<li><a href="/go/go_useful_resources.htm">Go - Useful Resources</a></li>
<li><a href="/go/go_discussion.htm">Go - Discussion</a></li>
</ul>
<ul class="toc reading">
<li class="sreading">Selected Reading</li>
<li><a target="_top" href="/upsc_ias_exams.htm">UPSC IAS Exams Notes</a></li>
<li><a target="_top" href="/developers_best_practices/index.htm">Developer's Best Practices</a></li>
<li><a target="_top" href="/questions_and_answers.htm">Questions and Answers</a></li>
<li><a target="_top" href="/effective_resume_writing.htm">Effective Resume Writing</a></li>
<li><a target="_top" href="/hr_interview_questions/index.htm">HR Interview Questions</a></li>
<li><a target="_top" href="/computer_glossary.htm">Computer Glossary</a></li>
<li><a target="_top" href="/computer_whoiswho.htm">Who is Who</a></li>
</ul>
<div id="stickyparent">
<div style="height:250px;width:300px;" id="sticky-ad">
<div id="430c9911-782f-495d-88f9-69f58ca8c9a4" class="_ap_apex_ad" >
<script>
var adpushup = adpushup || {};
adpushup.que = adpushup.que || [];
adpushup.que.push(function() {
adpushup.triggerAd("430c9911-782f-495d-88f9-69f58ca8c9a4");
});
</script>
</div>
</div>
</div>
</div>
<!-- Tutorial ToC Ends Here -->
<!-- Tutorial Content Starts Here -->
<div class="mui-col-md-6 tutorial-content">
<h1>Go - Interview Questions</h1>
<hr />
<div class="top-ad-heading">Advertisements</div>
<div style="text-align:center" class="google-top-ads">
<div id="adp_top_ads" style="text-align:center !important;"></div>
<script>
     var adPos = document.getElementById('adp_top_ads');
     var ad_id_720 = "8014640d-fd34-4b2e-9b1b-cc67234a2325";
     var ad_id_650 = "2d1bb2c4-eb72-471d-9c80-1bf5514728c1";
     var ad_id_300 = "df94a1a9-ae2f-432d-9a92-d93823ff4503";
     var width = window.innerWidth;
     var ad_id = ad_id_720;
     if( width <= 768 ){
        ad_id =  ad_id_300;
     }else if( width <= 1435 ){
        ad_id =  ad_id_650;
     }
     adPos.innerHTML = '<div id="' + ad_id + '" class="_ap_apex_ad"></div>';
     var adpushup = adpushup || {};
     adpushup.que = adpushup.que || [];
     adpushup.que.push(function() {
     adpushup.triggerAd(ad_id);
     });
</script>
</div>
<br>
<div class="mui-container-fluid button-borders">
<div class="pre-btn">
<a href="go_questions_answers.htm"><i class="fal fa-chevron-circle-left"></i> Previous Page</a>
</div>
<div class="nxt-btn">
<a href="go_questions_answers.htm">Next Page <i class="fal fa-chevron-circle-right"></i>&nbsp;</a>
</div>
</div>
<div class="clearer"></div>
<p>Dear readers, these <b>Go Programming Language Interview Questions</b> have been designed specially to get you acquainted with the nature of questions you may encounter during your interview for the subject of <b>Go Programming Language</b>. As per my experience good interviewers hardly plan to ask any particular question during your interview, normally questions start with some basic concept of the subject and later they continue based on further discussion and what you answer:</p>
<section class="toggle">
<label>What is Go?</label>
<div class="toggle-content">
<p>Go is a general-purpose language designed with systems programming in mind.It was initially developed at Google in year 2007 by Robert Griesemer, Rob Pike, and Ken Thompson. It is strongly and statically typed, provides inbuilt support for garbage collection and supports concurrent programming. Programs are constructed using packages, for efficient management of dependencies. Go programming implementations use a traditional compile and link model to generate executable binaries.</p>
</div>
</section>
<section class="toggle">
<label>What are the benefits of using Go programming?</label>
<div class="toggle-content">
<p>Following are the benefits of using Go programming &minus;</p>
<ul class="list">
<li><p>Support for environment adopting patterns similar to dynamic languages. For example type inference (x := 0 is valid declaration of a variable x of type int).</p></li>
<li><p>Compilation time is fast.</p></li>
<li><p>InBuilt concurrency support: light-weight processes (via goroutines), channels, select statement.</p></li>
<li><p>Conciseness, Simplicity, and Safety.</p></li>
<li><p>Support for Interfaces and Type embdding.</p></li>
<li><p>Production of statically linked native binaries without external dependencies.</p></li>
</ul>
</div>
</section>
<section class="toggle">
<label>Does Go support type inheritance?</label>
<div class="toggle-content">
<p>No support for type inheritance.</p>
</div>
</section>
<section class="toggle">
<label>Does Go support operator overloading?</label>
<div class="toggle-content">
<p>No support for operator overloading.</p>
</div>
</section>
<section class="toggle">
<label>Does Go support method overloading?</label>
<div class="toggle-content">
<p>No support for method overloading.</p>
</div>
</section>
<section class="toggle">
<label>Does Go support pointer arithmetics?</label>
<div class="toggle-content">
<p>No support for pointer arithmetic.</p>
</div>
</section>
<section class="toggle">
<label>Does Go support generic programming?</label>
<div class="toggle-content">
<p>No support for generic programming.</p>
</div>
</section>
<section class="toggle">
<label>Is Go a case sensitive language?</label>
<div class="toggle-content">
<p>Yes! Go is a case sensitive programming language.</p>
</div>
</section>
<section class="toggle">
<label>What is static type declaration of a variable in Go?</label>
<div class="toggle-content">
<p>Static type variable declaration provides assurance to the compiler that there is one variable existing with the given type and name so that compiler proceed for further compilation without needing complete detail about the variable. A variable declaration has its meaning at the time of compilation only, compiler needs actual variable declaration at the time of linking of the program.</p>
</div>
</section>
<section class="toggle">
<label>What is dynamic type declaration of a variable in Go?</label>
<div class="toggle-content">
<p>A dynamic type variable declaration requires compiler to interpret the type of variable based on value passed to it. Compiler don't need a variable to have type statically as a necessary requirement.</p>
</div>
</section>
<section class="toggle">
<label>Can you declared multiple types of variables in single declaration in Go?</label>
<div class="toggle-content">
<p>Yes Variables of different types can be declared in one go using type inference.</p>
<pre class="prettyprint notranslate">
var a, b, c = 3, 4, "foo"  
</pre>
</div>
</section>
<section class="toggle">
<label>How to print type of a variable in Go?</label>
<div class="toggle-content">
<p>Following code prints the type of a variable &minus;</p>
<pre class="prettyprint notranslate">
var a, b, c = 3, 4, "foo"  
fmt.Printf("a is of type %T\n", a)
</pre>
</div>
</section>
<section class="toggle">
<label>What is a pointer?</label>
<div class="toggle-content">
<p>It's a pointer variable which can hold the address of a variable.</p>
<p>For example &minus;</p>
<pre class="prettyprint notranslate">
var x = 5
var p *int
p = &amp;x
fmt.Printf("x = %d", *p)
</pre>
<p>Here x can be accessed by *p.</p>
</div>
</section>
<section class="toggle">
<label>What is the purpose of break statement?</label>
<div class="toggle-content">
<p>break terminates the for loop or switch statement and transfers execution to the statement immediately following the for loop or switch.</p>
</div>
</section>
<section class="toggle">
<label>What is the purpose of continue statement?</label>
<div class="toggle-content">
<p>continue causes the loop to skip the remainder of its body and immediately retest its condition prior to reiterating.</p>
</div>
</section>
<section class="toggle">
<label>What is the purpose of goto statement?</label>
<div class="toggle-content">
<p>goto transfers control to the labeled statement.</p>
</div>
</section>
<section class="toggle">
<label>Explain the syntax for 'for' loop.</label>
<div class="toggle-content">
<p>The syntax of a for loop in Go programming language is &minus;</p>
<pre class="prettyprint notranslate">
for [condition |  ( init; condition; increment ) | Range] {
   statement(s);
}
</pre>
<p>Here is the flow of control in a for loop &minus;</p>
<ul class="list">
<li><p>if condition is available, then for loop executes as long as condition is true.</p></li>
<li><p>if for clause that is ( init; condition; increment ) is present then
<p>The init step is executed first, and only once. This step allows you to declare and initialize any loop control variables. You are not required to put a statement here, as long as a semicolon appears.</p>
<p>Next, the condition is evaluated. If it is true, the body of the loop is executed. If it is false, the body of the loop does not execute and flow of control jumps to the next statement just after the for loop.</p>
<p>After the body of the for loop executes, the flow of control jumps back up to the increment statement. This statement allows you to update any loop control variables. This statement can be left blank, as long as a semicolon appears after the condition.</p>
<p>The condition is now evaluated again. If it is true, the loop executes and the process repeats itself (body of loop, then increment step, and then again condition). After the condition becomes false, the for loop terminates.</p>
</p></li>
<li><p>if range is available, then for loop executes for each item in the range.</p></li>
</ul>
</div>
</section>
<section class="toggle">
<label>Explain the syntax to create a function in Go.</label>
<div class="toggle-content">
<p>The general form of a function definition in Go programming language is as follows &minus;</p>
<pre class="prettyprint">
func function_name( [parameter list] ) [return_types] {
   body of the function
}
</pre>
<p>A function definition in Go programming language consists of a <i>function header</i> and a <i>function body</i>. Here are all the parts of a function &minus;</p>
<ul class="list">
<li><p><b>func</b> func starts the declaration of a function.</p></li>
<li><p><b>Function Name</b> &minus; This is the actual name of the function. The function name and the parameter list together constitute the function signature.</p></li>
<li><p><b>Parameters &minus;</b> A parameter is like a placeholder. When a function is invoked, you pass a value to the parameter. This value is referred to as actual parameter or argument. The parameter list refers to the type, order, and number of the parameters of a function. Parameters are optional; that is, a function may contain no parameters.</p></li>
<li><p><b>Return Type</b> &minus; A function may return a list of values. The <b>return_types</b> is the list of data types of the values the function returns. Some functions perform the desired operations without returning a value. In this case, the return_type is the not required.</p></li>
<li><p><b>Function Body</b> &minus; The function body contains a collection of statements that define what the function does.</p></li>
</ul>
</div>
</section>
<section class="toggle">
<label>Can you return multiple values from a function?</label>
<div class="toggle-content">
<p>A Go function can return multiple values. For example &minus;</p>
<pre class="prettyprint notranslate">
package main
import "fmt"

func swap(x, y string) (string, string) {
   return y, x
}
func main() {
   a, b := swap("Mahesh", "Kumar")
   fmt.Println(a, b)
}
</pre>
</div>
</section>
<section class="toggle">
<label>In how many ways you can pass parameters to a method?</label>
<div class="toggle-content">
<p>While calling a function, there are two ways that arguments can be passed to a function &minus;</p>
<ul class="list">
<li><p><b>Call by value</b> &minus; This method copies the actual value of an argument into the formal parameter of the function. In this case, changes made to the parameter inside the function have no effect on the argument.</p></li>
<li><p><b>Call by reference &minus;</b> This method copies the address of an argument into the formal parameter. Inside the function, the address is used to access the actual argument used in the call. This means that changes made to the parameter affect the argument.</p></li>
</ul>
</div>
</section>
<section class="toggle">
<label>What is the default way of passing parameters to a function?</label>
<div class="toggle-content">
<p>By default, Go uses call by value to pass arguments. In general, this means that code within a function cannot alter the arguments used to call the function and above mentioned example while calling max() function used the same method.</p>
</div>
</section>
<section class="toggle">
<label>What do you mean by function as value in Go?</label>
<div class="toggle-content">
<p>Go programming language provides flexibility to create functions on the fly and use them as values. We can set a variable with a function definition and use it as parameter to a function.</p>
</div>
</section>
<section class="toggle">
<label>What are the function closures?</label>
<div class="toggle-content">
<p>Functions closure are anonymous functions and can be used in dynamic programming.</p>
</div>
</section>
<section class="toggle">
<label>What are methods in Go?</label>
<div class="toggle-content">
<p>Go programming language supports special types of functions called methods. In method declaration syntax, a "receiver" is present to represent the container of the function. This receiver can be used to call function using "." operator.</p>
</div>
</section>
<section class="toggle">
<label>What is default value of a local variable in Go?</label>
<div class="toggle-content">
<p>A local variable has default value as it corresponding 0 value.</p>
</div>
</section>
<section class="toggle">
<label>What is default value of a global variable in Go?</label>
<div class="toggle-content">
<p>A global variable has default value as it corresponding 0 value.</p>
</div>
</section>
<section class="toggle">
<label>What is default value of a pointer variable in Go?</label>
<div class="toggle-content">
<p>Pointer is initialized to nil.</p>
</div>
</section>
<section class="toggle">
<label>Explain the purpose of the function Printf().</label>
<div class="toggle-content">
<p>Prints the formatted output.</p>
</div>
</section>
<section class="toggle">
<label>What is lvalue and rvalue?</label>
<div class="toggle-content">
<p>The expression appearing on right side of the assignment operator is called as rvalue. Rvalue is assigned to lvalue, which appears on left side of the assignment operator. The lvalue should designate to a variable not a constant.</p>
</div>
</section>
<section class="toggle">
<label>What is the difference between actual and formal parameters?</label>
<div class="toggle-content">
<p>The parameters sent to the function at calling end are called as actual parameters while at the receiving of the function definition called as formal parameters.</p>
</div>
</section>
<section class="toggle">
<label>What is the difference between variable declaration and variable definition?</label>
<div class="toggle-content">
<p>Declaration associates type to the variable whereas definition gives the value to the variable.</p>
</div>
</section>
<section class="toggle">
<label>Explain modular programming.</label>
<div class="toggle-content">
<p>Dividing the program in to sub programs (modules/function) to achieve the given task is modular approach. More generic functions definition gives the ability to re-use the functions, such as built-in library functions.</p>
</div>
</section>
<section class="toggle">
<label>What is a token?</label>
<div class="toggle-content">
<p>A Go program consists of various tokens and a token is either a keyword, an identifier, a constant, a string literal, or a symbol.</p>
</div>
</section>
<section class="toggle">
<label>Which key word is used to perform unconditional branching?</label>
<div class="toggle-content">
<p>goto</p>
</div>
</section>
<section class="toggle">
<label>What is an array?</label>
<div class="toggle-content">
<p>Array is collection of similar data items under a common name.</p>
</div>
</section>
<section class="toggle">
<label>What is a nil Pointers in Go?</label>
<div class="toggle-content">
<p>Go compiler assign a Nil value to a pointer variable in case you do not have exact address to be assigned. This is done at the time of variable declaration. A pointer that is assigned nil is called a nil pointer. The nil pointer is a constant with a value of zero defined in several standard libraries.</p>
</div>
</section>
<section class="toggle">
<label>What is a pointer on pointer?</label>
<div class="toggle-content">
<p>It's a pointer variable which can hold the address of another pointer variable. It de-refers twice to point to the data held by the designated pointer variable.</p>
<pre class="prettyprint notranslate">
var a int
var ptr *int
var pptr **int
a = 3000
ptr = &amp;a
pptr = &amp;ptr
fmt.Printf("Value available at **pptr = %d\n", **pptr)
</pre>
<p>Therefore 'a' can be accessed by **pptr.</p>
</div>
</section>
<section class="toggle">
<label>What is structure in Go?</label>
<div class="toggle-content">
<p>Structure is another user defined data type available in Go programming, which allows you to combine data items of different kinds.</p>
</div>
</section>
<section class="toggle">
<label>How to define a structure in Go?</label>
<div class="toggle-content">
<p>To define a structure, you must use type and struct statements. The struct statement defines a new data type, with more than one member for your program. type statement binds a name with the type which is struct in our case.</p> 
<p>The format of the struct statement is this &minus;</p>
<pre class="prettyprint notranslate">
type struct_variable_type struct {
   member definition;
   member definition;
   ...
   member definition;
}
</pre>
</div>
</section>
<section class="toggle">
<label>What is slice in Go?</label>
<div class="toggle-content">
<p>Go Slice is an abstraction over Go Array. As Go Array allows you to define type of variables that can hold several data items of the same kind but it do not provide any inbuilt method to increase size of it dynamically or get a sub-array of its own. Slices covers this limitation. It provides many utility functions required on Array and is widely used in Go programming.</p>
</div>
</section>
<section class="toggle">
<label>How to define a slice in Go?</label>
<div class="toggle-content">
<p>To define a slice, you can declare it as an array without specifying size or use make function to create the one.</p>
<pre class="prettyprint notranslate">
var numbers []int /* a slice of unspecified size */
/* numbers == []int{0,0,0,0,0}*/
numbers = make([]int,5,5) /* a slice of length 5 and capacity 5*/
</pre>
</div>
</section>
<section class="toggle">
<label>How to get the count of elements present in a slice?</label>
<div class="toggle-content">
<p>len() function returns the elements presents in the slice.</p>
</div>
</section>
<section class="toggle">
<label>What is the difference between len() and cap() functions of slice in Go?</label>
<div class="toggle-content">
<p>len() function returns the elements presents in the slice where cap() function returns the capacity of slice as how many elements it can be accomodate.</p>
</div>
</section>
<section class="toggle">
<label>How to get a sub-slice of a slice?</label>
<div class="toggle-content">
<p>Slice allows lower-bound and upper bound to be specified to get the subslice of it using[lower-bound:upper-bound].</p>
</div>
</section>
<section class="toggle">
<label>What is range in Go?</label>
<div class="toggle-content">
<p>The range keyword is used in for loop to iterate over items of an array, slice, channel or map. With array and slices, it returns the index of the item as integer. With maps, it returns the key of the next key-value pair. </p>
</div>
</section>
<section class="toggle">
<label>What are maps in Go?</label>
<div class="toggle-content">
<p>Go provides another important data type map which maps unique keys to values. A key is an object that you use to retrieve a value at a later date. Given a key and a value, you can store the value in a Map object. After value is stored, you can retrieve it by using its key.</p>
</div>
</section>
<section class="toggle">
<label>How to create a map in Go?</label>
<div class="toggle-content">
<p>You must use make function to create a map.</p>
<pre class="prettyprint notranslate">
/* declare a variable, by default map will be nil*/
var map_variable map[key_data_type]value_data_type

/* define the map as nil map can not be assigned any value*/
map_variable = make(map[key_data_type]value_data_type)
</pre>
</div>
</section>
<section class="toggle">
<label>How to delete an entry from a map in Go?</label>
<div class="toggle-content">
<p>delete() function is used to delete an entry from the map. It requires map and corresponding key which is to be deleted.</p>
</div>
</section>
<section class="toggle">
<label>What is type casting in Go?</label>
<div class="toggle-content">
<p>Type casting is a way to convert a variable from one data type to another data type. For example, if you want to store a long value into a simple integer then you can type cast long to int. You can convert values from one type to another using the cast operator as following &minus;</p>
<pre class="prettyprint notraslate">
type_name(expression)
</pre>
</div>
</section>
<section class="toggle">
<label>What are interfaces in Go?</label>
<div class="toggle-content">
<p>Go programming provides another data type called interfaces which represents a set of method signatures. struct data type implements these interfaces to have method definitions for the method signature of the interfaces.</p>
</div>
</section>
<h2>What is Next ?</h2>
<p>Further you can go through your past assignments you have done with the subject and make sure you are able to speak confidently on them. If you are fresher then interviewer does not expect you will answer very complex questions, rather you have to make your basics concepts very strong.</p>
<p>Second it really doesn't matter much if you could not answer few questions but it matters that whatever you answered, you must have answered with confidence. So just feel confident during your interview. We at tutorialspoint wish you best luck to have a good interviewer and all the very best for your future endeavor. Cheers :-)</p>
<div class="parent-file">go_questions_answers.htm</div>
<div class="mui-container-fluid button-borders show" id="bottom_navigation">
<div class="pre-btn">
<a href="go_questions_answers.htm"><i class="fal fa-chevron-circle-left"></i> Previous Page</a>
<a class="hide-on-mobile" href="javascript:printPage();"><i class="fa fa-print"></i> Print Page</a>
</div>
<div class="nxt-btn">
<a href="go_questions_answers.htm">Next Page <i class="fal fa-chevron-circle-right"></i>&nbsp;</a>
</div>
</div>
<div class="google-bottom-ads">
<div>Advertisements</div>
<div id="adp_bottom_ads"></div>
<script>
var adPos = document.getElementById('adp_bottom_ads');
var mobile_ad_id = "a8a632a6-046e-4f5c-b25f-8bc82ac89fb2";
var desktop_ad_id = "e7ddd6f7-1ab0-494a-bade-887daa4373a0";
var adpushup = adpushup || {};
adpushup.que = adpushup.que || [];
adpushup.que.push(function() {
var ad_id = window.innerWidth <= 768 ? mobile_ad_id : desktop_ad_id;
adPos.innerHTML = '<div id="' + ad_id + '" class="_ap_apex_ad"></div>';
adpushup.triggerAd(ad_id);
});
</script>
<div class="space-bottom"></div>
</div>
</div>
<!-- Tutorial Content Ends Here -->
<!-- Right Column Starts Here -->
<div class="mui-col-md-2 google-right-ads">
<div class="space-top"></div>
<div class="google-right-ad" id="ad300" style="margin: 0px auto !important;margin-top:5px;">
<div id="f0f6cff6-393d-4170-b63a-d9ff06ca9f25" class="_ap_apex_ad">
<script>
var adpushup = adpushup || {};
adpushup.que = adpushup.que || [];
adpushup.que.push(function() {
adpushup.triggerAd("f0f6cff6-393d-4170-b63a-d9ff06ca9f25");
});
</script>
</div>
</div>
<div class="google-right-ad" style="margin-top:16px;">
<div id="5c0affd5-724a-475c-bfcd-cecbc7660c36" class="_ap_apex_ad">
<script>
var adpushup = adpushup || {};
adpushup.que = adpushup.que || [];
adpushup.que.push(function() {
adpushup.triggerAd("5c0affd5-724a-475c-bfcd-cecbc7660c36");
});
</script>
</div>
</div>
<div class="space-bottom"></div>

<div class="google-right-ad" style="margin-top:16px;margin-bottom:15px;">
<div id="8f8814c2-d64c-4d26-9cb9-543653c0b48f" class="_ap_apex_ad">
<script>
var adpushup = adpushup || {};
adpushup.que = adpushup.que || [];
adpushup.que.push(function() {
adpushup.triggerAd("8f8814c2-d64c-4d26-9cb9-543653c0b48f");
});
</script>
</div>
</div>
</div>
</div>
<!-- Right Column Ends Here -->
</div>
</div>
<div class="clear"></div>
<footer id="footer">
<div class="mui--text-center">
<div class="mui--text-caption mui--text-light">
<a href="/index.htm" class="logo"><img class="img-responsive" src="/images/logo-black.png" alt="Tutorials Point" title="Tutorials Point"></a>
</div>
<ul class="mui-list--inline mui--text-body2 mui--text-light">
<li><a href="/about/index.htm"><i class="fal fa-globe"></i> About us</a></li>
<li><a href="/about/about_terms_of_use.htm"><i class="fal fa-asterisk"></i> Terms of use</a></li>
<li><a href="/about/about_privacy.htm"> <i class="fal fa-shield-check"></i> Privacy Policy</a></li>
<li><a href="/about/faq.htm"><i class="fal fa-question-circle"></i> FAQ's</a></li>
<li><a href="/about/about_helping.htm"><i class="fal fa-hands-helping"></i> Helping</a></li>
<li><a href="/about/contact_us.htm"><i class="fal fa-map-marker-alt"></i> Contact</a></li>
</ul>
<div class="mui--text-caption mui--text-light bottom-copyright-text">&copy; Copyright 2020. All Rights Reserved.</div>
</div>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-232293-17"></script>
<script>
window.dataLayer = window.dataLayer || [];
function gtag(){dataLayer.push(arguments);}
gtag('js', new Date());
gtag('config', 'UA-232293-6');
</script>
</footer>
</body>
</html>

