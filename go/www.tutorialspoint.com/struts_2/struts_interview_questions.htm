<!DOCTYPE html>
<html lang="en-US">
<head>
<title>Struts2 - Interview Questions - Tutorialspoint</title>
<meta charset="utf-8">
<meta name="description" content="Struts2 - Interview Questions - Dear readers, these Struts2 Interview Questions have been designed especially to get you acquainted with the nature of questions you may encounter during your i"/>
<meta name="keywords" content="C, C++, Python, Java, HTML, CSS, JavaScript, SQL, PHP, jQuery, XML, DOM, Bootstrap, Tutorials, Articles, Programming, training, learning, quiz, preferences, examples, code"/>
<link rel="canonical" href="https://www.tutorialspoint.com/struts_2/struts_interview_questions.htm" />
<link rel="shortcut icon" href="/favicon.ico" type="image/x-icon" />
<meta name="viewport" content="width=device-width,initial-scale=1.0,user-scalable=yes">
<link rel="stylesheet" href="/themes/css/style-min-v1.css?v=2.0.4">
<script src="/themes/js/script-min-v1.js?v=2.0.0"></script>
<script>function printPage() { window.print(); }</script>
<script data-cfasync="false" type="text/javascript">(function(w, d) { var s = d.createElement('script'); s.src = '//cdn.adpushup.com/40046/adpushup.js'; s.type = 'text/javascript'; s.async = true; (d.getElementsByTagName('head')[0] || d.getElementsByTagName('body')[0]).appendChild(s); })(window, document);</script>
<script data-cfasync="false" type="text/javascript">(function(w, d) { var s = d.createElement('script'); s.src = '//delivery.adrecover.com/18107/adRecover.js'; s.type = 'text/javascript'; s.async = true; (d.getElementsByTagName('head')[0] || d.getElementsByTagName('body')[0]).appendChild(s); })(window, document);</script>
<style>
.right-menu .mui-btn {
    background-color:#0c2444;
}
a.demo {
    background:#0c2444;
}
li.heading {
    background:#0c2444;
}
.course-box{background:#0c2444}
.home-intro-sub p{color:#0c2444}
</style>
</head>
<body>
<header id="header">
<!-- Top sub-menu Starts Here -->
<div class="mui-appbar mui-container-fulid top-menu">
<div class="mui-container">
<div class="top-menu-item home">
<a href="https://www.tutorialspoint.com/index.htm" target="_blank" title="TutorialsPoint - Home"><i class="fal fa-home"></i> <span>Home</span></a>
</div>
<div class="top-menu-item qa">
<a href="https://www.tutorialspoint.com/about/about_careers.htm" target="_blank" title="Job @ Tutorials Point"><i class="fa fa-suitcase"></i> <span>Jobs</span></a>
</div>
<div class="top-menu-item tools">
<a href="https://www.tutorialspoint.com/online_dev_tools.htm" target="_blank" title="Tools - Online Development and Testing Tools"><i class="fal fa-cogs"></i> <span>Tools</span></a>
</div>
<div class="top-menu-item coding-ground">
<a href="https://www.tutorialspoint.com/codingground.htm" target="_blank" title="Coding Ground - Free Online IDE and Terminal"><i class="fal fa-code"></i> <span>Coding Ground </span></a> 
</div>
<div class="top-menu-item current-affairs">
<a href="https://www.tutorialspoint.com/current_affairs.htm" target="_blank" title="Daily Current Affairs"><i class="fal fa-layer-plus"></i> <span>Current Affairs</span></a>
</div>
<div class="top-menu-item upsc-notes">
<a href="https://www.tutorialspoint.com/upsc_ias_exams.htm" target="_blank" title="UPSC IAS Exams Notes - TutorialsPoint"><i class="fal fa-user-tie"></i> <span>UPSC Notes</span></a>
</div>      
<div class="top-menu-item online-tutoris">
<a href="https://www.tutorialspoint.com/tutor_connect/index.php" target="_blank" title="Top Online Tutors - Tutor Connect"><i class="fal fa-user"></i> <span>Online Tutors</span></a>
</div>
<div class="top-menu-item whiteboard">
<a href="https://www.tutorialspoint.com/whiteboard.htm" target="_blank" title="Free Online Whiteboard"><i class="fal fa-chalkboard"></i> <span>Whiteboard</span></a>
</div>
<div class="top-menu-item net-meeting">
<a href="https://www.tutorialspoint.com/netmeeting.php" target="_blank" title="A free tool for online video conferencing"><i class="fal fa-chalkboard-teacher"></i> <span>Net Meeting</span></a> 
</div>
<div class="top-menu-item articles">
<a href="https://www.tutorix.com" target="_blank" title="Tutorx - The Best Learning App" rel="nofollow"><i class="fal fa-video"></i> <span>Tutorix</span></a> 
</div>        
<div class="social-menu-item">
<a href="https://www.facebook.com/tutorialspointindia" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Facebook"><i class="fab fa-facebook-f"></i></a> 
<a href="https://www.twitter.com/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Twitter"><i class="fab fa-twitter"></i></a>
<a href="https://www.linkedin.com/company/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Linkedin"><i class="fab fa-linkedin-in"></i></a>
<a href="https://www.youtube.com/channel/UCVLbzhxVTiTLiVKeGV7WEBg" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint YouTube"><i class="fab fa-youtube"></i></a>
</div>        
</div>
</div>
<!-- Top sub-menu Ends Here -->
<!-- Top main-menu Starts Here -->
<div class="mui-appbar mui-container-fulid mui--appbar-line-height mui--z1" id="logo-menu">
<div class="mui-container">
<div class="left-menu">
<a href="https://www.tutorialspoint.com/index.htm" title="Tutorialspoint">
<img class="tp-logo" alt="tutorialspoint" src="/struts_2/images/logo.png">
</a>
<div class="mui-dropdown">
<a class="mui-btn mui-btn--primary categories" data-mui-toggle="dropdown"><i class="fa fa-th-large"></i> 
<span>Categories <span class="mui-caret"></span></span></a>            
<ul class="mui-dropdown__menu cat-menu">
<li>
<ul>
<li><a href="/academic_tutorials.htm"><i class="fa fa-caret-right"></i> Academic Tutorials</a></li>
<li><a href="/big_data_tutorials.htm"><i class="fa fa-caret-right"></i> Big Data &amp; Analytics </a></li>
<li><a href="/computer_programming_tutorials.htm"><i class="fa fa-caret-right"></i> Computer Programming </a></li>
<li><a href="/computer_science_tutorials.htm"><i class="fa fa-caret-right"></i> Computer Science </a></li>
<li><a href="/database_tutorials.htm"><i class="fa fa-caret-right"></i> Databases </a></li>
<li><a href="/devops_tutorials.htm"><i class="fa fa-caret-right"></i> DevOps </a></li>
<li><a href="/digital_marketing_tutorials.htm"><i class="fa fa-caret-right"></i> Digital Marketing </a></li>
<li><a href="/engineering_tutorials.htm"><i class="fa fa-caret-right"></i> Engineering Tutorials </a></li>
<li><a href="/upsc_ias_exams.htm"><i class="fa fa-caret-right"></i> Exams Syllabus </a></li>
<li><a href="/famous_monuments.htm"><i class="fa fa-caret-right"></i> Famous Monuments </a></li>
<li><a href="/gate_exams_tutorials.htm"><i class="fa fa-caret-right"></i> GATE Exams Tutorials</a></li>
<li><a href="/latest_technologies.htm"><i class="fa fa-caret-right"></i> Latest Technologies </a></li>
<li><a href="/machine_learning_tutorials.htm"><i class="fa fa-caret-right"></i> Machine Learning </a></li>
<li><a href="/mainframe_tutorials.htm"><i class="fa fa-caret-right"></i> Mainframe Development </a></li>
<li><a href="/management_tutorials.htm"><i class="fa fa-caret-right"></i> Management Tutorials </a></li>
<li><a href="/maths_tutorials.htm"><i class="fa fa-caret-right"></i> Mathematics Tutorials</a></li>
<li><a href="/microsoft_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> Microsoft Technologies </a></li>
<li><a href="/misc_tutorials.htm"><i class="fa fa-caret-right"></i> Misc tutorials </a></li>
<li><a href="/mobile_development_tutorials.htm"><i class="fa fa-caret-right"></i> Mobile Development </a></li>
<li><a href="/java_technology_tutorials.htm"><i class="fa fa-caret-right"></i> Java Technologies </a></li>
<li><a href="/python_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> Python Technologies </a></li>
<li><a href="/sap_tutorials.htm"><i class="fa fa-caret-right"></i> SAP Tutorials </a></li>
<li><a href="/scripting_lnaguage_tutorials.htm"><i class="fa fa-caret-right"></i>Programming Scripts </a></li>
<li><a href="/selected_reading.htm"><i class="fa fa-caret-right"></i> Selected Reading </a></li>
<li><a href="/software_quality_tutorials.htm"><i class="fa fa-caret-right"></i> Software Quality </a></li>
<li><a href="/soft_skill_tutorials.htm"><i class="fa fa-caret-right"></i> Soft Skills </a></li>
<li><a href="/telecom_tutorials.htm"><i class="fa fa-caret-right"></i> Telecom Tutorials </a></li>
<li><a href="/upsc_ias_exams.htm"><i class="fa fa-caret-right"></i> UPSC IAS Exams </a></li>
<li><a href="/web_development_tutorials.htm"><i class="fa fa-caret-right"></i> Web Development </a></li>
<li><a href="/sports_tutorials.htm"><i class="fa fa-caret-right"></i> Sports Tutorials </a></li>
<li><a href="/xml_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> XML Technologies </a></li>
<li><a href="/multi_language_tutorials.htm"><i class="fa fa-caret-right"></i> Multi-Language</a></li>
<li><a href="/questions_and_answers.htm"><i class="fa fa-caret-right"></i> Interview Questions</a></li>
</ul>
</li>
</ul>
<div class="clear"></div>
</div> 
</div>
<div class="right-menu">
<div class="toc-toggle">
<a href="javascript:void(0);"><i class="fa fa-bars"></i></a>
</div>
<div class="mobile-search-btn">
<a href="https://www.tutorialspoint.com/search.htm"><i class="fal fa-search"></i></a>
</div>
<div class="search-box">
<form method="get" class="search-form" name="searchform" action="https://www.google.com/search" target="_blank" novalidate="">
<input type="hidden" name="sitesearch" value="www.tutorialspoint.com" class="user-valid valid">
<input class="header-search-box" type="text" id="search-string" name="q" placeholder="Search your favorite tutorials..." onfocus="if (this.value == 'Search your favorite tutorials...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Search your favorite tutorials...';}" autocomplete="off">
<button><i class="fal fa-search"></i></button>
</form>
</div>
<div class="menu-btn library-btn">
<a href="https://www.tutorialspoint.com/tutorialslibrary.htm"><i class="fal fa-cubes"></i> <span>Library</span></a>
</div>
<div class="menu-btn videos-btn">
<a href="https://www.tutorialspoint.com/videotutorials/index.php"><i class="fal fa-video"></i> <span>Videos</span></a> 
</div>
<div class="menu-btn videos-btn">
<a href="https://www.tutorialspoint.com/questions/index.php"><i class="fa fa-location-arrow"></i> <span>Q/A</span></a>
</div>
<div class="menu-btn ebooks-btn">
<a href="https://store.tutorialspoint.com"><i class="fal fa-book"></i> <span>eBooks</span></a>
</div>
<div class="mui-dropdown">
<button class="mui-btn mui-btn--primary mobile-menu" data-mui-toggle="dropdown">
<span class="mui-caret"></span>
</button>
<ul class="mui-dropdown__menu">
<li><a href="https://www.tutorialspoint.com/tutorialslibrary.htm"><i class="fal fa-cubes"></i> <span>Library</span></a></li>
<li><a href="https://www.tutorialspoint.com/videotutorials/index.php"><i class="fal fa-video"></i> <span>Videos</span></a></li>
<li><a href="https://store.tutorialspoint.com"><i class="fal fa-book"></i> <span>eBooks</span></a></li>
</ul>
</div>
</div>
</div>
</div>
<!-- Top main-menu Ends Here -->
</header>
<div class="mui-container-fluid content">
<div class="mui-container">
<!-- Tutorial ToC Starts Here -->
<div class="mui-col-md-3 tutorial-toc">
<div class="mini-logo">
<img src="/struts_2/images/struts-mini-logo.jpg" alt="Struts2 Tutorial" />
</div>
<ul class="toc chapters">
<li class="heading">Struts 2 Tutorial</li>
<li><a href="/struts_2/index.htm">Struts2 - Home</a></li>
<li><a href="/struts_2/basic_mvc_architecture.htm">Struts2 - Basic MVC Architecture</a></li>
<li><a href="/struts_2/struts_overview.htm">Struts2 - Overview</a></li>
<li><a href="/struts_2/struts_environment_setup.htm">Struts2 - Environment Setup</a></li>
<li><a href="/struts_2/struts_architecture.htm">Struts2 - Architecture</a></li>
<li><a href="/struts_2/struts_examples.htm">Struts2 - Examples</a></li>
<li><a href="/struts_2/struts_configuration.htm">Struts2 - Configuration</a></li>
<li><a href="/struts_2/struts_actions.htm">Struts2 - Actions</a></li>
<li><a href="/struts_2/struts_interceptors.htm">Struts2 - Interceptors</a></li>
<li><a href="/struts_2/struts_result_types.htm">Struts2 - Result Types</a></li>
<li><a href="/struts_2/struts_value_stack_ognl.htm">Struts2 - Value Stack/OGNL</a></li>
<li><a href="/struts_2/struts_file_uploads.htm">Struts2 - File Uploads</a></li>
<li><a href="/struts_2/struts_database_access.htm">Struts2 - Database Access</a></li>
<li><a href="/struts_2/struts_sending_email.htm">Struts2 - Sending Email</a></li>
<li><a href="/struts_2/struts_validations.htm">Struts2 - Validations</a></li>
<li><a href="/struts_2/struts_localization.htm">Struts2 - Localization</a></li>
<li><a href="/struts_2/struts_type_conversion.htm">Struts2 - Type Conversion</a></li>
<li><a href="/struts_2/struts_themes_templates.htm">Struts2 - Themes/Templates</a></li>
<li><a href="/struts_2/struts_exception_handling.htm">Struts2 - Exception Handling</a></li>
<li><a href="/struts_2/struts_annotations.htm">Struts2 - Annotations</a></li>
</ul>
<ul class="toc chapters">
<li class="heading">Struts 2 Tags</li>
<li><a href="/struts_2/struts_control_tags.htm">Struts2 - Control Tags</a></li>
<li><a href="/struts_2/struts_data_tags.htm">Struts2 - Data Tags</a></li>
<li><a href="/struts_2/struts_form_tags.htm">Struts2 - Form Tags</a></li>
<li><a href="/struts_2/struts_ajax_tags.htm">Struts2 - Ajax Tags</a></li>
</ul>
<ul class="toc chapters">
<li class="heading">Struts 2 Integrations</li>
<li><a href="/struts_2/struts_spring.htm">Struts2 - Spring</a></li>
<li><a href="/struts_2/struts_tiles.htm">Struts2 - Tiles</a></li>
<li><a href="/struts_2/struts_hibernate.htm">Struts2 - Hibernate</a></li>
</ul>
<ul class="toc chapters">
<li class="heading">Struts 2 Useful Resources</li>
<li><a href="/struts_2/struts_questions_answers.htm">Struts2 - Questions and Answers</a></li>
<li><a href="/struts_2/struts_quick_guide.htm">Struts2 - Quick Guide</a></li>
<li><a href="/struts_2/struts_useful_resources.htm">Struts2 - Useful Resources</a></li>
<li><a href="/struts_2/struts_discussion.htm">Struts2 - Discussion</a></li>
</ul>
<ul class="toc reading">
<li class="sreading">Selected Reading</li>
<li><a target="_top" href="/upsc_ias_exams.htm">UPSC IAS Exams Notes</a></li>
<li><a target="_top" href="/developers_best_practices/index.htm">Developer's Best Practices</a></li>
<li><a target="_top" href="/questions_and_answers.htm">Questions and Answers</a></li>
<li><a target="_top" href="/effective_resume_writing.htm">Effective Resume Writing</a></li>
<li><a target="_top" href="/hr_interview_questions/index.htm">HR Interview Questions</a></li>
<li><a target="_top" href="/computer_glossary.htm">Computer Glossary</a></li>
<li><a target="_top" href="/computer_whoiswho.htm">Who is Who</a></li>
</ul>
<div id="stickyparent">
<div style="height:250px;width:300px;" id="sticky-ad">
<div id="430c9911-782f-495d-88f9-69f58ca8c9a4" class="_ap_apex_ad" >
<script>
var adpushup = adpushup || {};
adpushup.que = adpushup.que || [];
adpushup.que.push(function() {
adpushup.triggerAd("430c9911-782f-495d-88f9-69f58ca8c9a4");
});
</script>
</div>
</div>
</div>
</div>
<!-- Tutorial ToC Ends Here -->
<!-- Tutorial Content Starts Here -->
<div class="mui-col-md-6 tutorial-content">
<h1>Struts2 - Interview Questions</h1>
<hr />
<div class="top-ad-heading">Advertisements</div>
<div style="text-align:center" class="google-top-ads">
<div id="adp_top_ads" style="text-align:center !important;"></div>
<script>
     var adPos = document.getElementById('adp_top_ads');
     var ad_id_720 = "8014640d-fd34-4b2e-9b1b-cc67234a2325";
     var ad_id_650 = "2d1bb2c4-eb72-471d-9c80-1bf5514728c1";
     var ad_id_300 = "df94a1a9-ae2f-432d-9a92-d93823ff4503";
     var width = window.innerWidth;
     var ad_id = ad_id_720;
     if( width <= 768 ){
        ad_id =  ad_id_300;
     }else if( width <= 1435 ){
        ad_id =  ad_id_650;
     }
     adPos.innerHTML = '<div id="' + ad_id + '" class="_ap_apex_ad"></div>';
     var adpushup = adpushup || {};
     adpushup.que = adpushup.que || [];
     adpushup.que.push(function() {
     adpushup.triggerAd(ad_id);
     });
</script>
</div>
<br>
<div class="mui-container-fluid button-borders">
<div class="pre-btn">
<a href="struts_questions_answers.htm"><i class="fal fa-chevron-circle-left"></i> Previous Page</a>
</div>
<div class="nxt-btn">
<a href="struts_questions_answers.htm">Next Page <i class="fal fa-chevron-circle-right"></i>&nbsp;</a>
</div>
</div>
<div class="clearer"></div>
<p>Dear readers, these <b>Struts2 Interview Questions</b> have been designed especially to get you acquainted with the nature of questions you may encounter during your interview for the subject of <b>Struts2 Programming</b>. As per my experience, good interviewers hardly planned to ask any particular question during your interview, normally questions start with some basic concept of the subject and later they continue based on further discussion and what you answer &minus;</p>
<section class="toggle">
<label>What is Struts2?</label>
<div class="toggle-content">
<p>Struts2 is popular and mature web application framework based on the MVC design pattern. Struts2 is not just the next version of Struts 1, but it is a complete rewrite of the Struts architecture.</p>
</div>
</section>
<section class="toggle">
<label>Name some of the features of Struts2.</label>
<div class="toggle-content">
<p>Here are some of the great features that may force you to consider Struts2 &minus;</p>
<ul class="list">
<li><p><b>POJO forms and POJO actions</b> &minus; Struts2 has done away with the Action Forms that were an integral part of the Struts framework. With Struts2, you can use any POJO to receive the form input. Similarly, you can now see any POJO as an Action class.</p></li>
<li><p><b>Tag support</b> &minus; Struts2 has improved the form tags and the new tags allow the developers to write less code.</p></li>
<li><p><b>AJAX support</b> &minus; Struts2 has recognised the take over by Web2.0 technologies, and has integrated AJAX support into the product by creating AJAX tags, that function very similar to the standard Struts2 tags.</p></li>
<li><p><b>Easy Integration</b> &minus; Integration with other frameworks like Spring, Tiles and SiteMesh is now easier with a variety of integration available with Struts2.</p></li>
<li><p><b>Template Support</b> &minus; Support for generating views using templates.</p></li>
<li><p><b>Plugin Support</b> &minus; The core Struts2 behaviour can be enhanced and augmented by the use of plugins. A number of plugins are available for Struts2.</p></li>
</ul>
</div>
</section>
<section class="toggle">
<label>What are the core components of a Struct2 based application?</label>
<div class="toggle-content">
<p>The Model-View-Controller pattern in Struts2 is realized with following five core components &minus;</p>
<ul class="list">
<li><p>Actions</p></li>
<li><p>Interceptors</p></li>
<li><p>Value Stack / OGNL</p></li>
<li><p>Results / Result types</p></li>
<li><p>View technologies</p></li>
</ul>
</div>
</section>
<section class="toggle">
<label>Explain the life cycle of a request in Struct2 application.</label>
<div class="toggle-content">
<p>Following is the life cycle of a request in Struct2 application &minus;</p>
<ul class="list">
<li><p>User sends a request to the server for requesting for some resource (i.e pages).</p></li>
<li><p>The FilterDispatcher looks at the request and then determines the appropriate Action.</p></li>
<li><p>Configured interceptors functionalities applies such as validation, file upload etc.</p></li>
<li><p>Selected action is executed to perform the requested operation.</p></li>
<li><p>Again, configured interceptors are applied to do any post-processing if required.</p></li>
<li><p>Finally the result is prepared by the view and returns the result to the user.</p></li>
</ul>
</div>
</section>
<section class="toggle">
<label>What is the purpose of struts.xml in Struct2?</label>
<div class="toggle-content">
<p>The struts.xml file contains the configuration information that you will be modifying as actions are developed. This file can be used to override default settings for an application, for example struts.devMode = false and other settings which are defined in property file. This file can be created under the folder WEB-INF/classes.</p>
</div>
</section>
<section class="toggle">
<label>What is the purpose of constant tag in struts.xml?</label>
<div class="toggle-content">
<p>The constant tag along with name and value attributes will be used to override any of the following properties defined in default.properties, like we just set struts.devMode property. Setting struts.devMode property allows us to see more debug messages in the log file.</p>
</div>
</section>
<section class="toggle">
<label>What is the purpose of action tag in struts.xml?</label>
<div class="toggle-content">
<p>We define action tags corresponds to every URL we want to access and we define a class with execute() method which will be accessed whenever we will access corresponding URL.</p>
<p>Results determine what gets returned to the browser after an action is executed. The string returned from the action should be the name of a result. Results are configured per-action as above, or as a "global" result, available to every action in a package. Results have optional name and type attributes. The default name value is "success".</p>
</div>
</section>
<section class="toggle">
<label>What is the purpose of struct-config.xml in Struct2?</label>
<div class="toggle-content">
<p>The struts-config.xml configuration file is a link between the View and Model components in the Web Client.</p>
</div>
</section>
<section class="toggle">
<label>What is the purpose of form-beans tag in struct-config.xml?</label>
<div class="toggle-content">
<p>This is where you map your ActionForm subclass to a name. You use this name as an alias for your ActionForm throughout the rest of the struts-config.xml file, and even on your JSP pages.</p>
</div>
</section>
<section class="toggle">
<label>What is the purpose of global-forwards tag in struct-config.xml?</label>
<div class="toggle-content">
<p>This section maps a page on your webapp to a name. You can use this name to refer to the actual page. This avoids hardcoding URLs on your web pages.</p>
</div>
</section>
<section class="toggle">
<label>What is the purpose of action-mappings tag in struct-config.xml?</label>
<div class="toggle-content">
<p>This is where you declare form handlers and they are also known as action mappings.</p>
</div>
</section>
<section class="toggle">
<label>What is the purpose of plug-in tag in struct-config.xml?</label>
<div class="toggle-content">
<p>This section tells Struts where to find your properties files, which contain prompts and error messages.</p>
</div>
</section>
<section class="toggle">
<label>What is the purpose of struts.properties in Struct2?</label>
<div class="toggle-content">
<p>This configuration file provides a mechanism to change the default behavior of the framework. Actually all of the properties contained within the struts.properties configuration file can also be configured in the web.xml using the init-param, as well using the constant tag in the struts.xml configuration file. But if you like to keep the things separate and more struts specific then you can create this file under the folder WEB-INF/classes.
The values configured in this file will override the default values configured in default.properties which is contained in the struts2-core-x.y.z.jar distribution.</p>
</div>
</section>
<section class="toggle">
<label>What are interceptors in Struts 2?</label>
<div class="toggle-content">
<p>Interceptors are conceptually the same as servlet filters or the JDKs Proxy class. Interceptors allow for crosscutting functionality to be implemented separately from the action as well as the framework. You can achieve the following using interceptors &minus;</p>
<ul class="list">
<li><p>Providing preprocessing logic before the action is called.</p></li>
<li><p>Providing postprocessing logic after the action is called.</p></li>
<li><p>Catching exceptions so that alternate processing can be performed.</p></li>
</ul>
</div>
</section>
<section class="toggle">
<label>How can you create your custom interceptor in Struts 2?</label>
<div class="toggle-content">
<p>Creating a custom interceptor is easy; the interface that needs to be extended is the Interceptor interface.</p>
</div>
</section>
<section class="toggle">
<label>How interceptor works in Struts 2?</label>
<div class="toggle-content">
<p>Actual action will be executed using the interceptor by invocation.invoke() call. So you can do some pre-processing and some post-processing based on your requirement.</p>
<p>The framework itself starts the process by making the first call to the ActionInvocation object's invoke(). Each time invoke() is called, ActionInvocation consults its state and executes whichever interceptor comes next. When all of the configured interceptors have been invoked, the invoke() method will cause the action itself to be executed.</p>
</div>
</section>
<section class="toggle">
<label>What are Result types in Struts?</label>
<div class="toggle-content">
<p>The Action class manages the application's state, and the Result Type manages the view.</p>
</div>
</section>
<section class="toggle">
<label>What is defeult result type?</label>
<div class="toggle-content">
<p>Default result type is dispatcher, which is used to dispatch to JSP pages.</p>
</div>
</section>
<section class="toggle">
<label>What is the purpose of dispatcher result type?</label>
<div class="toggle-content">
<p>The dispatcher result type is the default type, and is used if no other result type is specified. It's used to forward to a servlet, JSP, HTML page, and so on, on the server. It uses the RequestDispatcher.forward() method.</p>
</div>
</section>
<section class="toggle">
<label>What is the purpose of redirect result type?</label>
<div class="toggle-content">
<p>he redirect result type calls the standard response.sendRedirect() method, causing the browser to create a new request to the given location.
We can provide the location either in the body of the &lt;result...&gt; element or as a &lt;param name = "location"&gt; element.</p>
</div>
</section>
<section class="toggle">
<label>What is Value Stack?</label>
<div class="toggle-content">
<p>The value stack is a set of several objects which keeps the following objects in the provided order &minus;</p>
<ul class="list">
<li><p><b>Temporary Objects</b> &minus; There are various temporary objects which are created during execution of a page. For example the current iteration value for a collection being looped over in a JSP tag.</p></li>
<li><p><b>The Model Object</b> &minus; If you are using model objects in your struts application, the current model object is placed before the action on the value stack.</p></li>
<li><p><b>The Action Object</b> &minus; This will be the current action object which is being executed.</p></li>
<li><p><b>Named Objects</b> &minus; These objects include #application, #session, #request, #attr and #parameters and refer to the corresponding servlet scopes.</p></li>
</ul>
</div>
</section>
<section class="toggle">
<label>What is OGNL?</label>
<div class="toggle-content">
<p>The Object-Graph Navigation Language (OGNL) is a powerful expression language that is used to reference and manipulate data on the ValueStack. OGNL also helps in data transfer and type conversion.</p>
</div>
</section>
<section class="toggle">
<label>Which components are available using ActionContext map?</label>
<div class="toggle-content">
<p>The ActionContext map consists of the following &minus;</p>
<ul class="list">
<li><p><b>application</b> &minus; application scoped variables.</p></li>
<li><p><b>session</b> &minus; session scoped variables.</p></li>
<li><p><b>root / value stack</b> &minus; all your action variables are stored here.</p></li>
<li><p><b>request</b> &minus; request scoped variables.</p></li>
<li><p><b>parameters</b> &minus; request parameters.</p></li>
<li><p><b>atributes</b> &minus; the attributes stored in page, request, session and application scope.</p></li>
</ul>
</div>
</section>
<section class="toggle">
<label>Which interceptor is responsible for file upload support?</label>
<div class="toggle-content">
<p>File uploading in Struts is possible through a pre-defined interceptor called FileUpload interceptor which is available through the org.apache.struts2.interceptor.FileUploadInterceptor class and included as part of the defaultStack.</p>
</div>
</section>
<section class="toggle">
<label>What are the Struts2 configuration properties that control file uploading process?</label>
<div class="toggle-content">
<p>Following are the Struts2 configuration properties that control file uploading process &minus;</p>
<ul class="list">
<li><p><b>struts.multipart.maxSize</b> &minus; The maximum size (in bytes) of a file to be accepted as a file upload. Default is 250M.</p></li>
<li><p><b>struts.multipart.parser</b> &minus; The library used to upload the multipart form. By default is jakarta.</p></li>
<li><p><b>struts.multipart.saveDir</b> &minus; The location to store the temporary file. By default is javax.servlet.context.tempdir.</p></li>
</ul>
</div>
</section>
<section class="toggle">
<label>What are the Struts2 error message keys that can come during file uploading process?</label>
<div class="toggle-content">
<p>The fileUplaod interceptor uses several default error message keys &minus;</p>
<ul class="list">
<li><p><b>struts.messages.error.uploading</b> &minus; A general error that occurs when the file could not be uploaded.</p></li>
<li><p><b>struts.messages.error.file.too.large</b> &minus; Occurs when the uploaded file is too large as specified by maximumSize.</p></li>
<li><p><b>struts.messages.error.content.type.not.allowed</b> &minus; Occurs when the uploaded file does not match the expected content types specified.</p></li>
</ul>
</div>
</section>
<section class="toggle">
<label>How to override the default error message that can come during file uploading process?</label>
<div class="toggle-content">
<p>You can override the text of these messages in WebContent/WEB-INF/classes/messages.properties resource files.</p>
</div>
</section>
<section class="toggle">
<label>What is Structs 2 validation framework?</label>
<div class="toggle-content">
<p>At Struts's core, we have the validation framework that assists the application to run the rules to perform validation before the action method is executed. Action class should extend the ActionSupport class, in order to get the validate method executed.</p>
</div>
</section>
<section class="toggle">
<label>How Struts 2 validation works?</label>
<div class="toggle-content">
<p>When the user presses the submit button, Struts 2 will automatically execute the validate method and if any of the if statements listed inside the method are true, Struts 2 will call its addFieldError method. If any errors have been added then Struts 2 will not proceed to call the execute method. Rather the Struts 2 framework will return input as the result of calling the action.</p>
<p>So when validation fails and Struts 2 returns input, the Struts 2 framework will redisplay the view file. Since we used Struts 2 form tags, Struts 2 will automatically add the error messages just above the form filed.</p>
<p>These error messages are the ones we specified in the addFieldError method call. The addFieldError method takes two arguments. The first is the form field name to which the error applies and the second is the error message to display above that form field.</p>
</div>
</section>
<section class="toggle">
<label>What is XML Based Validation in struts2?</label>
<div class="toggle-content">
<p>The second method of doing validation is by placing an xml file next to the action class. Struts2 XML based validation provides more options of validation like email validation, integer range validation, form validation field, expression validation, regex validation, required validation, requiredstring validation, stringlength validation and etc.</p>
</div>
</section>
<section class="toggle">
<label>What should be the name of xml file used for validation in struts?</label>
<div class="toggle-content">
<p>The xml file needs to be named '[action-class]'-validation.xml.</p>
</div>
</section>
<section class="toggle">
<label>What types of validations are available in xml based validation in struts2?</label>
<div class="toggle-content">
<p>Following is the list of various types of field level and non-field level validation available in Struts2 &minus;</p>
<ul class="list">
<li><p>date validator</p></li>
<li><p>double validator</p></li>
<li><p>email validator</p></li>
<li><p>expression validator</p></li>
<li><p>int validator</p></li>
<li><p>regex validator</p></li>
<li><p>required validator</p></li>
<li><p>requiredstring validator</p></li>
<li><p>stringlength validator</p></li>
<li><p>url validator</p></li>
</ul>
</div>
</section>
<section class="toggle">
<label>What is Internationalization?</label>
<div class="toggle-content">
<p>Internationalization (i18n) is the process of planning and implementing products and services so that they can easily be adapted to specific local languages and cultures, a process called localization. The internationalization process is sometimes called translation or localization enablement.</p>
</div>
</section>
<section class="toggle">
<label>How struts2 supports Internationalization?</label>
<div class="toggle-content">
<p>Struts2 provides localization ie. internationalization (i18n) support through resource bundles, interceptors and tag libraries in the following places &minus;</p>
<ul class="list">
<li><p>The UI Tags.</p></li>
<li><p>Messages and Errors.</p></li>
<li><p>Within action classes.</p></li>
</ul>
</div>
</section>
<section class="toggle">
<label>What is the naming convention for a resource bundle file in struts2?</label>
<div class="toggle-content">
<p>The simplest naming format for a resource file is &minus;</p>
<pre class="prettyprint notranslate">
bundlename_language_country.properties
</pre>
<p>Here bundlename could be ActionClass, Interface, SuperClass, Model, Package, Global resource properties. Next part language_country represents the country locale for example Spanish (Spain) locale is represented by es_ES and English (United States) locale is represented by en_US etc. Here you can skip country part which is optional.</p>
</div>
</section>
<section class="toggle">
<label>In which order Struts framework searches for a message bundle?</label>
<div class="toggle-content">
<p>When you reference a message element by its key, Struts framework searches for a corresponding message bundle in the following order &minus;</p>
<ul class="list">
<li><p>ActionClass.properties</p></li>
<li><p>Interface.properties</p></li>
<li><p>SuperClass.properties</p></li>
<li><p>model.properties</p></li>
<li><p>package.properties</p></li>
<li><p>struts.properties</p></li>
<li><p>global.properties</p></li>
</ul>
</div>
</section>
<section class="toggle">
<label>Which class of struts is responsible to converts data types from string and vice versa?</label>
<div class="toggle-content">
<p>StrutsTypeConverter class tells Struts how to convert Environment to a String and vice versa by overriding two methods convertFromString() and convertToString().</p>
</div>
</section>
<section class="toggle">
<label>What inbuilt themes are provided by Struts2?</label>
<div class="toggle-content">
<p>Struts 2 comes with three built-in themes &minus;</p>
<ul class="list">
<li><p><b>simple theme</b> &minus; A minimal theme with no "bells and whistles". For example, the textfield tag renders the HTML &lt;input/&gt; tag without a label, validation, error reporting, or any other formatting or functionality.</p></li>
<li><p><b>xhtml theme</b> &minus; This is the default theme used by Struts 2 and provides all the basics that the simple theme provides and adds several features like standard two-column table layout for the HTML, Labels for each of the HTML, Validation and error reporting etc.</p></li>
<li><p><b>css_xhtml theme</b> &minus; This theme provides all the basics that the simple theme provides and adds several features like standard two-column CSS-based layout, using &lt;div&gt; for the HTML Struts Tags, Labels for each of the HTML Struts Tags, placed according to the CSS stylesheet.</p></li>
</ul>
</div>
</section>
<section class="toggle">
<label>How to handle exceptions in Structs?</label>
<div class="toggle-content">
<p>Struts makes the exception handling easy by the use of the "exception" interceptor. The "exception" interceptor is included as part of the default stack, so you don't have to do anything extra to configure it. It is available out-of-the-box ready for you to use.</p>
</div>
</section>
<section class="toggle">
<label>What is the purpose of @Results annotation?</label>
<div class="toggle-content">
<p>A @Results annotation is a collection of results. Under the @Results annotation, we can have multiple @Result annotations.</p>
<pre class="prettyprint notranslate">
@Results({
   @Result(name = "success", value = "/success.jsp"),
   @Result(name = "error", value = "/error.jsp")
})
public class Employee extends ActionSupport{
 ...
}
</pre>
</div>
</section>
<section class="toggle">
<label>What is the purpose of @Result annotation?</label>
<div class="toggle-content">
<p>The @result annotations have the name that correspond to the outcome of the execute method. They also contain a location as to which view should be served corresponding to return value from execute().</p>
<pre class="prettyprint notranslate">
@Result(name = "success", value = "/success.jsp")
public class Employee extends ActionSupport{
 ...
}
</pre>
</div>
</section>
<section class="toggle">
<label>What is the purpose of @Action annotation?</label>
<div class="toggle-content">
<p>This is used to decorate the execute() method. The Action method also takes in a value which is the URL on which the action is invoked.</p>
<pre class="prettyprint notranslate">
public class Employee extends ActionSupport{
   private String name;
   private int age;
   @Action(value = "/empinfo")
   public String execute() {
      return SUCCESS;
   }
}
</pre>
</div>
</section>
<section class="toggle">
<label>What is the purpose of @After annotation?</label>
<div class="toggle-content">
<p>The @After annotation marks a action method that needs to be called after the main action method and the result was executed. Return value is ignored.</p>
<pre class="prettyprint notranslate">
public class Employee extends ActionSupport{
   @After
   public void isValid() throws ValidationException {
      // validate model object, throw exception if failed
   }
   public String execute() {
      // perform secure action
      return SUCCESS;
   }
}
</pre>
</div>
</section>
<section class="toggle">
<label>What is the purpose of @Before annotation?</label>
<div class="toggle-content">
<p>The @Before annotation marks a action method that needs to be called before the main action method and the result was executed. Return value is ignored.</p>
<pre class="prettyprint notranslate">
public class Employee extends ActionSupport{
   @Before
   public void isAuthorized() throws AuthenticationException {
      // authorize request, throw exception if failed
   }
   public String execute() {
      // perform secure action
      return SUCCESS;
   }
}
</pre>
</div>
</section>
<section class="toggle">
<label>What is the purpose of @BeforeResult annotation?</label>
<div class="toggle-content">
<p>The @BeforeResult annotation marks a action method that needs to be executed before the result. Return value is ignored.</p>
<pre class="prettyprint notranslate">
public class Employee extends ActionSupport{
   @BeforeResult
   public void isValid() throws ValidationException {
    // validate model object, throw exception if failed
   }
   public String execute() {
      // perform action
      return SUCCESS;
   }
}
</pre>
</div>
</section>
<section class="toggle">
<label>What is the purpose of @ConversionErrorFieldValidator annotation?</label>
<div class="toggle-content">
<p>This validation annotation checks if there are any conversion errors for a field and applies them if they exist.</p>
<pre class="prettyprint notranslate">
public class Employee extends ActionSupport{
   @ConversionErrorFieldValidator(message = "Default message", 
                        key = "i18n.key", shortCircuit = true)
   public String getName() {
       return name;
   }
}
</pre>
</div>
</section>
<section class="toggle">
<label>What is the purpose of @DateRangeFieldValidator annotation?</label>
<div class="toggle-content">
<p>This validation annotation checks that a date field has a value within a specified range.</p>
<pre class="prettyprint notranslate">
public class Employee extends ActionSupport{
   @DateRangeFieldValidator(message = "Default message", 
   key = "i18n.key", shortCircuit = true, 
   min = "2005/01/01", max = "2005/12/31")
   public String getDOB() {
       return dob;
   }
}
</pre>
</div>
</section>
<section class="toggle">
<label>What is the purpose of @DoubleRangeFieldValidator annotation?</label>
<div class="toggle-content">
<p>This validation annotation checks that a double field has a value within a specified range. If neither min nor max is set, nothing will be done.</p>
<pre class="prettyprint notranslate">
public class Employee extends ActionSupport{
   @DoubleRangeFieldValidator(message = "Default message", 
   key = "i18n.key", shortCircuit = true, 
   minInclusive = "0.123", maxInclusive = "99.987")
   public String getIncome() {
       return income;
   }
}
</pre>
</div>
</section>
<section class="toggle">
<label>What is the purpose of @EmailValidator annotation?</label>
<div class="toggle-content">
<p>This validation annotation checks that a field is a valid e-mail address if it contains a non-empty String.</p>
<pre class="prettyprint notranslate">
public class Employee extends ActionSupport{
   @EmailValidator(message = "Default message", 
   key = "i18n.key", shortCircuit = true)
   public String getEmail() {
       return email;
   }
}
</pre>
</div>
</section>
<section class="toggle">
<label>What is the purpose of @ExpressionValidator annotation?</label>
<div class="toggle-content">
<p>This non-field level validator validates a supplied regular expression.</p>
<pre class="prettyprint notranslate">
@ExpressionValidator(message = "Default message", key = "i18n.key", 
shortCircuit = true, expression = "an OGNL expression" )
</pre>
</div>
</section>
<section class="toggle">
<label>What is the purpose of @IntRangeFieldValidator annotation?</label>
<div class="toggle-content">
<p>This validation annotation checks that a numeric field has a value within a specified range. If neither min nor max is set, nothing will be done.</p>
<pre class="prettyprint notranslate">
public class Employee extends ActionSupport{
   @IntRangeFieldValidator(message = "Default message", 
   key = "i18n.key", shortCircuit = true, 
   min = "0", max = "42")
   public String getAge() {
       return age;
   }
}
</pre>
</div>
</section>
<section class="toggle">
<label>What is the purpose of @RegexFieldValidator annotation?</label>
<div class="toggle-content">
<p>This annotation validates a string field using a regular expression.</p>
<pre class="prettyprint notranslate">
@RegexFieldValidator( key = "regex.field", expression = "yourregexp")
</pre>
</div>
</section>
<section class="toggle">
<label>What is the purpose of @RequiredFieldValidator annotation?</label>
<div class="toggle-content">
<p>This validation annotation checks that a field is non-null. The annotation must be applied at method level.</p>
<pre class="prettyprint notranslate">
public class Employee extends ActionSupport{
   @RequiredFieldValidator(message = "Default message", 
   key = "i18n.key", shortCircuit = true)
   public String getAge() {
       return age;
   }
}
</pre>
</div>
</section>
<section class="toggle">
<label>What is the purpose of @RequiredStringValidator annotation?</label>
<div class="toggle-content">
<p>This validation annotation checks that a String field is not empty (i.e. non-null with a length &gt; 0).</p>
<pre class="prettyprint notranslate">
public class Employee extends ActionSupport{
   @RequiredStringValidator(message = "Default message", 
   key = "i18n.key", shortCircuit = true, trim = true)
   public String getName() {
       return name;
   }
}
</pre>
</div>
</section>
<section class="toggle">
<label>What is the purpose of @StringLengthFieldValidator annotation?</label>
<div class="toggle-content">
<p>This validator checks that a String field is of the right length. It assumes that the field is a String. If neither minLength nor maxLength is set, nothing will be done.</p>
<pre class="prettyprint notranslate">
public class Employee extends ActionSupport{
   @StringLengthFieldValidator(message = "Default message", 
   key = "i18n.key", shortCircuit = true, 
   trim = true, minLength = "5",  maxLength = "12")
   public String getName() {
       return name;
   }
}
</pre>
</div>
</section>
<section class="toggle">
<label>What is the purpose of @UrlValidator annotation?</label>
<div class="toggle-content">
<p>This validator checks that a field is a valid URL.</p>
<pre class="prettyprint notranslate">
public class Employee extends ActionSupport{
   @UrlValidator(message = "Default message", 
   key = "i18n.key", shortCircuit = true)
   public String getURL() {
       return url;
   }
}
</pre>
</div>
</section>
<section class="toggle">
<label>What is the purpose of @Validations annotation?</label>
<div class="toggle-content">
<p>If you want to use several annotations of the same type, these annotation must be nested within the @Validations() annotation.</p>
<pre class="prettyprint notranslate">
public class Employee extends ActionSupport{
  @Validations(
   requiredFields =
      {@RequiredFieldValidator(type = ValidatorType.SIMPLE, 
      fieldName = "customfield", 
      message = "You must enter a value for field.")},
   requiredStrings =
      {@RequiredStringValidator(type = ValidatorType.SIMPLE, 
      fieldName = "stringisrequired", 
      message = "You must enter a value for string.")}
   )
   public String getName() {
       return name;
   }
}
</pre>
</div>
</section>
<section class="toggle">
<label>What is the purpose of @CustomValidator annotation?</label>
<div class="toggle-content">
<p>This annotation can be used for custom validators. Use the ValidationParameter annotation to supply additional params.</p>
<pre class="prettyprint notranslate">
@CustomValidator(type ="customValidatorName", fieldName = "myField")
</pre>
</div>
</section>
<section class="toggle">
<label>What is the purpose of @Conversion Annotation annotation?</label>
<div class="toggle-content">
<p>This is a marker annotation for type conversions at Type level. The Conversion annotation must be applied at Type level.</p>
<pre class="prettyprint notranslate">
@Conversion()
   public class ConversionAction implements Action {
}
</pre>
</div>
</section>
<section class="toggle">
<label>What is the purpose of @CreateIfNull Annotation annotation?</label>
<div class="toggle-content">
<p>This annotation sets the CreateIfNull for type conversion. The CreateIfNull annotation must be applied at field or method level.</p>
<pre class="prettyprint notranslate">
@CreateIfNull( value = true )
private List&lt;User&gt; users;
</pre>
</div>
</section>
<section class="toggle">
<label>What is the purpose of @Element Annotation annotation?</label>
<div class="toggle-content">
<p>This annotation sets the Element for type conversion. The Element annotation must be applied at field or method level.</p>
<pre class="prettyprint notranslate">
@Element( value = com.acme.User )
private List&lt;User&gt; userList;
</pre>
</div>
</section>
<section class="toggle">
<label>What is the purpose of @Key Annotation annotation?</label>
<div class="toggle-content">
<p>This annotation sets the Key for type conversion. The Key annotation must be applied at field or method level.</p>
<pre class="prettyprint notranslate">
@Key( value = java.lang.Long.class )
private Map&lt;Long, User&gt; userMap;
</pre>
</div>
</section>
<section class="toggle">
<label>What is the purpose of @KeyProperty Annotation annotation?</label>
<div class="toggle-content">
<p>This annotation sets the KeyProperty for type conversion. The KeyProperty annotation must be applied at field or method level.</p>
<pre class="prettyprint notranslate">
@KeyProperty( value = "userName" )
protected List&lt;User&gt; users = null;
</pre>
</div>
</section>
<section class="toggle">
<label>What is the purpose of @TypeConversion  Annotation annotation?</label>
<div class="toggle-content">
<p>This annotation annotation is used for class and application wide conversion rules. The TypeConversion annotation can be applied at property and method level.</p>
<pre class="prettyprint notranslate">
@TypeConversion(rule = ConversionRule.COLLECTION, 
converter = "java.util.String")
public void setUsers( List users ) {
   this.users = users;
}
</pre>
</div>
</section>
<h2>What is Next?</h2>
<p>Further, you can go through your past assignments you have done with the subject and make sure you are able to speak confidently on them. If you are fresher then interviewer does not expect you will answer very complex questions, rather you have to make your basics concepts very strong.</p>
<p>Second it really doesn't matter much if you could not answer few questions but it matters that whatever you answered, you must have answered with confidence. So just feel confident during your interview. We at tutorialspoint wish you best luck to have a good interviewer and all the very best for your future endeavor. Cheers :-)</p>
<div class="parent-file">struts_questions_answers.htm</div>
<div class="mui-container-fluid button-borders show" id="bottom_navigation">
<div class="pre-btn">
<a href="struts_questions_answers.htm"><i class="fal fa-chevron-circle-left"></i> Previous Page</a>
<a class="hide-on-mobile" href="javascript:printPage();"><i class="fa fa-print"></i> Print Page</a>
</div>
<div class="nxt-btn">
<a href="struts_questions_answers.htm">Next Page <i class="fal fa-chevron-circle-right"></i>&nbsp;</a>
</div>
</div>
<div class="google-bottom-ads">
<div>Advertisements</div>
<div id="adp_bottom_ads"></div>
<script>
var adPos = document.getElementById('adp_bottom_ads');
var mobile_ad_id = "a8a632a6-046e-4f5c-b25f-8bc82ac89fb2";
var desktop_ad_id = "e7ddd6f7-1ab0-494a-bade-887daa4373a0";
var adpushup = adpushup || {};
adpushup.que = adpushup.que || [];
adpushup.que.push(function() {
var ad_id = window.innerWidth <= 768 ? mobile_ad_id : desktop_ad_id;
adPos.innerHTML = '<div id="' + ad_id + '" class="_ap_apex_ad"></div>';
adpushup.triggerAd(ad_id);
});
</script>
<div class="space-bottom"></div>
</div>
</div>
<!-- Tutorial Content Ends Here -->
<!-- Right Column Starts Here -->
<div class="mui-col-md-2 google-right-ads">
<div class="space-top"></div>
<div class="google-right-ad" id="ad300" style="margin: 0px auto !important;margin-top:5px;">
<div id="f0f6cff6-393d-4170-b63a-d9ff06ca9f25" class="_ap_apex_ad">
<script>
var adpushup = adpushup || {};
adpushup.que = adpushup.que || [];
adpushup.que.push(function() {
adpushup.triggerAd("f0f6cff6-393d-4170-b63a-d9ff06ca9f25");
});
</script>
</div>
</div>
<div class="google-right-ad" style="margin-top:16px;">
<div id="5c0affd5-724a-475c-bfcd-cecbc7660c36" class="_ap_apex_ad">
<script>
var adpushup = adpushup || {};
adpushup.que = adpushup.que || [];
adpushup.que.push(function() {
adpushup.triggerAd("5c0affd5-724a-475c-bfcd-cecbc7660c36");
});
</script>
</div>
</div>
<div class="space-bottom"></div>

<div class="google-right-ad" style="margin-top:16px;margin-bottom:15px;">
<div id="8f8814c2-d64c-4d26-9cb9-543653c0b48f" class="_ap_apex_ad">
<script>
var adpushup = adpushup || {};
adpushup.que = adpushup.que || [];
adpushup.que.push(function() {
adpushup.triggerAd("8f8814c2-d64c-4d26-9cb9-543653c0b48f");
});
</script>
</div>
</div>
</div>
</div>
<!-- Right Column Ends Here -->
</div>
</div>
<div class="clear"></div>
<footer id="footer">
<div class="mui--text-center">
<div class="mui--text-caption mui--text-light">
<a href="/index.htm" class="logo"><img class="img-responsive" src="/images/logo-black.png" alt="Tutorials Point" title="Tutorials Point"></a>
</div>
<ul class="mui-list--inline mui--text-body2 mui--text-light">
<li><a href="/about/index.htm"><i class="fal fa-globe"></i> About us</a></li>
<li><a href="/about/about_terms_of_use.htm"><i class="fal fa-asterisk"></i> Terms of use</a></li>
<li><a href="/about/about_privacy.htm"> <i class="fal fa-shield-check"></i> Privacy Policy</a></li>
<li><a href="/about/faq.htm"><i class="fal fa-question-circle"></i> FAQ's</a></li>
<li><a href="/about/about_helping.htm"><i class="fal fa-hands-helping"></i> Helping</a></li>
<li><a href="/about/contact_us.htm"><i class="fal fa-map-marker-alt"></i> Contact</a></li>
</ul>
<div class="mui--text-caption mui--text-light bottom-copyright-text">&copy; Copyright 2020. All Rights Reserved.</div>
</div>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-232293-17"></script>
<script>
window.dataLayer = window.dataLayer || [];
function gtag(){dataLayer.push(arguments);}
gtag('js', new Date());
gtag('config', 'UA-232293-6');
</script>
</footer>
</body>
</html>

