<!DOCTYPE html>
<html lang="en-US">
<head>
<title>JUnit - Interview Questions - Tutorialspoint</title>
<meta charset="utf-8">
<meta name="description" content="JUnit - Interview Questions - Dear readers, these JUnit Interview Questions have been designed specially to get you acquainted with the nature of questions you may encounter during your inte"/>
<meta name="keywords" content="C, C++, Python, Java, HTML, CSS, JavaScript, SQL, PHP, jQuery, XML, DOM, Bootstrap, Tutorials, Articles, Programming, training, learning, quiz, preferences, examples, code"/>
<link rel="canonical" href="https://www.tutorialspoint.com/junit/junit_interview_questions.htm" />
<link rel="shortcut icon" href="/favicon.ico" type="image/x-icon" />
<meta name="viewport" content="width=device-width,initial-scale=1.0,user-scalable=yes">
<link rel="stylesheet" href="/themes/css/style-min-v1.css?v=2.0.3">
<script src="/themes/js/script-min-v1.js?v=2.0.0"></script>
<script>function printPage() { window.print(); }</script>
<script data-cfasync="false" type="text/javascript">(function(w, d) { var s = d.createElement('script'); s.src = '//cdn.adpushup.com/40046/adpushup.js'; s.type = 'text/javascript'; s.async = true; (d.getElementsByTagName('head')[0] || d.getElementsByTagName('body')[0]).appendChild(s); })(window, document);</script>
<script data-cfasync="false" type="text/javascript">(function(w, d) { var s = d.createElement('script'); s.src = '//delivery.adrecover.com/18107/adRecover.js'; s.type = 'text/javascript'; s.async = true; (d.getElementsByTagName('head')[0] || d.getElementsByTagName('body')[0]).appendChild(s); })(window, document);</script>
<style>
.right-menu .mui-btn {
    background-color:#f77c00;
}
a.demo {
    background:#f77c00;
}
li.heading {
    background:#f77c00;
}
.course-box{background:#f77c00}
.home-intro-sub p{color:#f77c00}
</style>
</head>
<body>
<header id="header">
<!-- Top sub-menu Starts Here -->
<div class="mui-appbar mui-container-fulid top-menu">
<div class="mui-container">
<div class="top-menu-item home">
<a href="https://www.tutorialspoint.com/index.htm" target="_blank" title="TutorialsPoint - Home"><i class="fal fa-home"></i> <span>Home</span></a>
</div>
<div class="top-menu-item qa">
<a href="https://www.tutorialspoint.com/about/about_careers.htm" target="_blank" title="Job @ Tutorials Point"><i class="fa fa-suitcase"></i> <span>Jobs</span></a>
</div>
<div class="top-menu-item tools">
<a href="https://www.tutorialspoint.com/online_dev_tools.htm" target="_blank" title="Tools - Online Development and Testing Tools"><i class="fal fa-cogs"></i> <span>Tools</span></a>
</div>
<div class="top-menu-item coding-ground">
<a href="https://www.tutorialspoint.com/codingground.htm" target="_blank" title="Coding Ground - Free Online IDE and Terminal"><i class="fal fa-code"></i> <span>Coding Ground </span></a> 
</div>
<div class="top-menu-item current-affairs">
<a href="https://www.tutorialspoint.com/current_affairs.htm" target="_blank" title="Daily Current Affairs"><i class="fal fa-layer-plus"></i> <span>Current Affairs</span></a>
</div>
<div class="top-menu-item upsc-notes">
<a href="https://www.tutorialspoint.com/upsc_ias_exams.htm" target="_blank" title="UPSC IAS Exams Notes - TutorialsPoint"><i class="fal fa-user-tie"></i> <span>UPSC Notes</span></a>
</div>      
<div class="top-menu-item online-tutoris">
<a href="https://www.tutorialspoint.com/tutor_connect/index.php" target="_blank" title="Top Online Tutors - Tutor Connect"><i class="fal fa-user"></i> <span>Online Tutors</span></a>
</div>
<div class="top-menu-item whiteboard">
<a href="https://www.tutorialspoint.com/whiteboard.htm" target="_blank" title="Free Online Whiteboard"><i class="fal fa-chalkboard"></i> <span>Whiteboard</span></a>
</div>
<div class="top-menu-item net-meeting">
<a href="https://www.tutorialspoint.com/netmeeting.php" target="_blank" title="A free tool for online video conferencing"><i class="fal fa-chalkboard-teacher"></i> <span>Net Meeting</span></a> 
</div>
<div class="top-menu-item articles">
<a href="https://www.tutorix.com" target="_blank" title="Tutorx - The Best Learning App" rel="nofollow"><i class="fal fa-video"></i> <span>Tutorix</span></a> 
</div>        
<div class="social-menu-item">
<a href="https://www.facebook.com/tutorialspointindia" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Facebook"><i class="fab fa-facebook-f"></i></a> 
<a href="https://www.twitter.com/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Twitter"><i class="fab fa-twitter"></i></a>
<a href="https://www.linkedin.com/company/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Linkedin"><i class="fab fa-linkedin-in"></i></a>
<a href="https://www.youtube.com/channel/UCVLbzhxVTiTLiVKeGV7WEBg" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint YouTube"><i class="fab fa-youtube"></i></a>
</div>        
</div>
</div>
<!-- Top sub-menu Ends Here -->
<!-- Top main-menu Starts Here -->
<div class="mui-appbar mui-container-fulid mui--appbar-line-height mui--z1" id="logo-menu">
<div class="mui-container">
<div class="left-menu">
<a href="https://www.tutorialspoint.com/index.htm" title="Tutorialspoint">
<img class="tp-logo" alt="tutorialspoint" src="/junit/images/logo.png">
</a>
<div class="mui-dropdown">
<a class="mui-btn mui-btn--primary categories" data-mui-toggle="dropdown"><i class="fa fa-th-large"></i> 
<span>Categories <span class="mui-caret"></span></span></a>            
<ul class="mui-dropdown__menu cat-menu">
<li>
<ul>
<li><a href="/academic_tutorials.htm"><i class="fa fa-caret-right"></i> Academic Tutorials</a></li>
<li><a href="/big_data_tutorials.htm"><i class="fa fa-caret-right"></i> Big Data &amp; Analytics </a></li>
<li><a href="/computer_programming_tutorials.htm"><i class="fa fa-caret-right"></i> Computer Programming </a></li>
<li><a href="/computer_science_tutorials.htm"><i class="fa fa-caret-right"></i> Computer Science </a></li>
<li><a href="/database_tutorials.htm"><i class="fa fa-caret-right"></i> Databases </a></li>
<li><a href="/devops_tutorials.htm"><i class="fa fa-caret-right"></i> DevOps </a></li>
<li><a href="/digital_marketing_tutorials.htm"><i class="fa fa-caret-right"></i> Digital Marketing </a></li>
<li><a href="/engineering_tutorials.htm"><i class="fa fa-caret-right"></i> Engineering Tutorials </a></li>
<li><a href="/upsc_ias_exams.htm"><i class="fa fa-caret-right"></i> Exams Syllabus </a></li>
<li><a href="/famous_monuments.htm"><i class="fa fa-caret-right"></i> Famous Monuments </a></li>
<li><a href="/gate_exams_tutorials.htm"><i class="fa fa-caret-right"></i> GATE Exams Tutorials</a></li>
<li><a href="/latest_technologies.htm"><i class="fa fa-caret-right"></i> Latest Technologies </a></li>
<li><a href="/machine_learning_tutorials.htm"><i class="fa fa-caret-right"></i> Machine Learning </a></li>
<li><a href="/mainframe_tutorials.htm"><i class="fa fa-caret-right"></i> Mainframe Development </a></li>
<li><a href="/management_tutorials.htm"><i class="fa fa-caret-right"></i> Management Tutorials </a></li>
<li><a href="/maths_tutorials.htm"><i class="fa fa-caret-right"></i> Mathematics Tutorials</a></li>
<li><a href="/microsoft_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> Microsoft Technologies </a></li>
<li><a href="/misc_tutorials.htm"><i class="fa fa-caret-right"></i> Misc tutorials </a></li>
<li><a href="/mobile_development_tutorials.htm"><i class="fa fa-caret-right"></i> Mobile Development </a></li>
<li><a href="/java_technology_tutorials.htm"><i class="fa fa-caret-right"></i> Java Technologies </a></li>
<li><a href="/python_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> Python Technologies </a></li>
<li><a href="/sap_tutorials.htm"><i class="fa fa-caret-right"></i> SAP Tutorials </a></li>
<li><a href="/scripting_lnaguage_tutorials.htm"><i class="fa fa-caret-right"></i>Programming Scripts </a></li>
<li><a href="/selected_reading.htm"><i class="fa fa-caret-right"></i> Selected Reading </a></li>
<li><a href="/software_quality_tutorials.htm"><i class="fa fa-caret-right"></i> Software Quality </a></li>
<li><a href="/soft_skill_tutorials.htm"><i class="fa fa-caret-right"></i> Soft Skills </a></li>
<li><a href="/telecom_tutorials.htm"><i class="fa fa-caret-right"></i> Telecom Tutorials </a></li>
<li><a href="/upsc_ias_exams.htm"><i class="fa fa-caret-right"></i> UPSC IAS Exams </a></li>
<li><a href="/web_development_tutorials.htm"><i class="fa fa-caret-right"></i> Web Development </a></li>
<li><a href="/sports_tutorials.htm"><i class="fa fa-caret-right"></i> Sports Tutorials </a></li>
<li><a href="/xml_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> XML Technologies </a></li>
<li><a href="/multi_language_tutorials.htm"><i class="fa fa-caret-right"></i> Multi-Language</a></li>
<li><a href="/questions_and_answers.htm"><i class="fa fa-caret-right"></i> Interview Questions</a></li>
</ul>
</li>
</ul>
<div class="clear"></div>
</div> 
</div>
<div class="right-menu">
<div class="toc-toggle">
<a href="javascript:void(0);"><i class="fa fa-bars"></i></a>
</div>
<div class="mobile-search-btn">
<a href="https://www.tutorialspoint.com/search.htm"><i class="fal fa-search"></i></a>
</div>
<div class="search-box">
<form method="get" class="search-form" name="searchform" action="https://www.google.com/search" target="_blank" novalidate="">
<input type="hidden" name="sitesearch" value="www.tutorialspoint.com" class="user-valid valid">
<input class="header-search-box" type="text" id="search-string" name="q" placeholder="Search your favorite tutorials..." onfocus="if (this.value == 'Search your favorite tutorials...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Search your favorite tutorials...';}" autocomplete="off">
<button><i class="fal fa-search"></i></button>
</form>
</div>
<div class="menu-btn library-btn">
<a href="https://www.tutorialspoint.com/tutorialslibrary.htm"><i class="fal fa-cubes"></i> <span>Library</span></a>
</div>
<div class="menu-btn videos-btn">
<a href="https://www.tutorialspoint.com/videotutorials/index.php"><i class="fal fa-video"></i> <span>Videos</span></a> 
</div>
<div class="menu-btn videos-btn">
<a href="https://www.tutorialspoint.com/questions/index.php"><i class="fa fa-location-arrow"></i> <span>Q/A</span></a>
</div>
<div class="menu-btn ebooks-btn">
<a href="https://store.tutorialspoint.com"><i class="fal fa-book"></i> <span>eBooks</span></a>
</div>
<div class="mui-dropdown">
<button class="mui-btn mui-btn--primary mobile-menu" data-mui-toggle="dropdown">
<span class="mui-caret"></span>
</button>
<ul class="mui-dropdown__menu">
<li><a href="https://www.tutorialspoint.com/tutorialslibrary.htm"><i class="fal fa-cubes"></i> <span>Library</span></a></li>
<li><a href="https://www.tutorialspoint.com/videotutorials/index.php"><i class="fal fa-video"></i> <span>Videos</span></a></li>
<li><a href="https://store.tutorialspoint.com"><i class="fal fa-book"></i> <span>eBooks</span></a></li>
</ul>
</div>
</div>
</div>
</div>
<!-- Top main-menu Ends Here -->
</header>
<div class="mui-container-fluid content">
<div class="mui-container">
<!-- Tutorial ToC Starts Here -->
<div class="mui-col-md-3 tutorial-toc">
<div class="mini-logo">
<img src="/junit/images/junit-mini-logo.jpg" alt="JUnit Tutorial" />
</div>
<ul class="toc chapters">
<li class="heading">JUnit Tutorial</li>
<li><a href="/junit/index.htm">JUnit - Home</a></li>
<li><a href="/junit/junit_overview.htm">JUnit - Overview</a></li>
<li><a href="/junit/junit_environment_setup.htm">JUnit - Environment Setup</a></li>
<li><a href="/junit/junit_test_framework.htm">JUnit - Test Framework</a></li>
<li><a href="/junit/junit_basic_usage.htm">JUnit - Basic Usage</a></li>
<li><a href="/junit/junit_api.htm">JUnit - API</a></li>
<li><a href="/junit/junit_writing_tests.htm">JUnit - Writing a Tests</a></li>
<li><a href="/junit/junit_using_assertion.htm">JUnit - Using Assertion</a></li>
<li><a href="/junit/junit_execution_procedure.htm">JUnit - Execution Procedure</a></li>
<li><a href="/junit/junit_executing_tests.htm">JUnit - Executing Tests</a></li>
<li><a href="/junit/junit_suite_test.htm">JUnit - Suite Test</a></li>
<li><a href="/junit/junit_ignore_test.htm">JUnit - Ignore Test</a></li>
<li><a href="/junit/junit_time_test.htm">JUnit - Time Test</a></li>
<li><a href="/junit/junit_exceptions_test.htm">JUnit - Exceptions Test</a></li>
<li><a href="/junit/junit_parameterized_test.htm">JUnit - Parameterized Test</a></li>
<li><a href="/junit/junit_plug_with_ant.htm">JUnit - Plug with Ant</a></li>
<li><a href="/junit/junit_plug_with_eclipse.htm">JUnit - Plug with Eclipse</a></li>
<li><a href="/junit/junit_extensions.htm">JUnit - Extensions</a></li>
</ul>
<ul class="toc chapters">
<li class="heading">JUnit Useful Resources</li>
<li><a href="/junit/junit_questions_answers.htm">JUnit - Questions and Answers</a></li>
<li><a href="/junit/junit_quick_guide.htm">JUnit - Quick Guide</a></li>
<li><a href="/junit/junit_useful_resources.htm">JUnit - Useful Resources</a></li>
<li><a href="/junit/junit_discussion.htm">JUnit - Discussion</a></li>
</ul>
<ul class="toc reading">
<li class="sreading">Selected Reading</li>
<li><a target="_top" href="/upsc_ias_exams.htm">UPSC IAS Exams Notes</a></li>
<li><a target="_top" href="/developers_best_practices/index.htm">Developer's Best Practices</a></li>
<li><a target="_top" href="/questions_and_answers.htm">Questions and Answers</a></li>
<li><a target="_top" href="/effective_resume_writing.htm">Effective Resume Writing</a></li>
<li><a target="_top" href="/hr_interview_questions/index.htm">HR Interview Questions</a></li>
<li><a target="_top" href="/computer_glossary.htm">Computer Glossary</a></li>
<li><a target="_top" href="/computer_whoiswho.htm">Who is Who</a></li>
</ul>
<div id="stickyparent">
<div style="height:250px;width:300px;" id="sticky-ad">
<div id="430c9911-782f-495d-88f9-69f58ca8c9a4" class="_ap_apex_ad" >
<script>
var adpushup = adpushup || {};
adpushup.que = adpushup.que || [];
adpushup.que.push(function() {
adpushup.triggerAd("430c9911-782f-495d-88f9-69f58ca8c9a4");
});
</script>
</div>
</div>
</div>
</div>
<!-- Tutorial ToC Ends Here -->
<!-- Tutorial Content Starts Here -->
<div class="mui-col-md-6 tutorial-content">
<h1>JUnit - Interview Questions</h1>
<hr />
<div class="top-ad-heading">Advertisements</div>
<div style="text-align:center" class="google-top-ads">
<div id="adp_top_ads" style="text-align:center !important;"></div>
<script>
     var adPos = document.getElementById('adp_top_ads');
     var ad_id_720 = "8014640d-fd34-4b2e-9b1b-cc67234a2325";
     var ad_id_650 = "2d1bb2c4-eb72-471d-9c80-1bf5514728c1";
     var ad_id_300 = "df94a1a9-ae2f-432d-9a92-d93823ff4503";
     var width = window.innerWidth;
     var ad_id = ad_id_720;
     if( width <= 768 ){
        ad_id =  ad_id_300;
     }else if( width <= 1435 ){
        ad_id =  ad_id_650;
     }
     adPos.innerHTML = '<div id="' + ad_id + '" class="_ap_apex_ad"></div>';
     var adpushup = adpushup || {};
     adpushup.que = adpushup.que || [];
     adpushup.que.push(function() {
     adpushup.triggerAd(ad_id);
     });
</script>
</div>
<br>
<div class="mui-container-fluid button-borders">
<div class="pre-btn">
<a href="junit_questions_answers.htm"><i class="fal fa-chevron-circle-left"></i> Previous Page</a>
</div>
<div class="nxt-btn">
<a href="junit_questions_answers.htm">Next Page <i class="fal fa-chevron-circle-right"></i>&nbsp;</a>
</div>
</div>
<div class="clearer"></div>
<p>Dear readers, these <b>JUnit Interview Questions</b> have been designed specially to get you acquainted with the nature of questions you may encounter during your interview for the subject of <b>JUnit</b>. As per my experience good interviewers hardly plan to ask any particular question during your interview, normally questions start with some basic concept of the subject and later they continue based on further discussion and what you answer:</p>
<section class="toggle">
<label> What is Testing?</label>
<div class="toggle-content">
<p>Testing is the process of checking the functionality of the application whether it is working as per requirements.</p>
</div>
</section>
<section class="toggle">
<label> What is Unit Testing?</label>
<div class="toggle-content">
<p>Unit testing is the testing of single entity (class or method). Unit testing is very essential to every software company to give a quality product to their customers.</p>
</div>
</section>
<section class="toggle">
<label> What is Manual testing?</label>
<div class="toggle-content">
<p>Executing the test cases manually without any tool support is known as manual testing.</p>
</div>
</section>
<section class="toggle">
<label> What is Automated testing?</label>
<div class="toggle-content">
<p>Taking tool support and executing the test cases by using automation tool is known as automation testing.</p>
</div>
</section>
<section class="toggle">
<label> What are the disadvantages of manual testing?</label>
<div class="toggle-content">
<p>Following are the disadvantages of manual testing &minus;</p>
<ul class="list">
<li><p>Time consuming and tedious &minus; Since test cases are executed by human resources so it is very slow and tedious.</p></li>
<li><p>Huge investment in human resources &minus; As test cases need to be executed manually so more testers are required in manual testing.</p></li>
<li><p>Less reliable &minus; Manual testing is less reliable as tests may not be performed with precision each time because of human errors.</p></li>
<li><p>Non-programmable &minus; No programming can be done to write sophisticated tests which fetch hidden information.</p></li>
</ul>
</div>
</section>
<section class="toggle">
<label> What are the advantages of automated testing?</label>
<div class="toggle-content">
<p>Following are the advantages of automated testing &minus;</p>
<ul class="list">
<li><p><b>Fast</b> &minus; Automation runs test cases significantly faster than human resources.</p></li>
<li><p><b>Less investment in human resources</b> &minus; Test cases are executed by using automation tool so less tester are required in automation testing.</p></li>
<li><p><b>More reliable</b> &minus; Automation tests perform precisely same operation each time they are run.</p></li>
<li><p><b>Programmable</b> &minus; Testers can program sophisticated tests to bring out hidden information.</p></li>
</ul>
</div>
</section>
<section class="toggle">
<label> What is JUnit?</label>
<div class="toggle-content">
<p>JUnit is a Regression Testing Framework used by developers to implement unit testing in Java and accelerate programming speed and increase the quality of code.</p>
</div>
</section>
<section class="toggle">
<label> What are important features of JUnit?</label>
<div class="toggle-content">
<p>Following are the important features of JUnit &minus;</p>
<ul class="list">
<li><p>It is an open source framework.</p></li>
<li><p>Provides Annotation to identify the test methods.</p></li>
<li><p>Provides Assertions for testing expected results.</p></li>
<li><p>Provides Test runners for running tests.</p></li>
<li><p>JUnit tests can be run automatically and they check their own results and provide immediate feedback.</p></li>
<li><p>JUnit tests can be organized into test suites containing test cases and even other test suites.</p></li>
<li><p>JUnit shows test progress in a bar that is green if test is going fine and it turns red when a test fails.</p></li>
</ul>
</div>
</section>
<section class="toggle">
<label> What is a Unit Test Case?</label>
<div class="toggle-content">
<p>A Unit Test Case is a part of code which ensures that the another part of code (method) works as expected. To achieve those desired results quickly, test framework is required .JUnit is perfect unit test framework for java programming language.</p>
</div>
</section>
<section class="toggle">
<label> What are the best practices to write a Unit Test Case?</label>
<div class="toggle-content">
<p>A formal written unit test case is characterized by a known input and by an expected output, which is worked out before the test is executed. The known input should test a precondition and the expected output should test a postcondition.</p>
<p>There must be at least two unit test cases for each requirement: one positive test and one negative test. If a requirement has sub-requirements, each sub-requirement must have at least two test cases as positive and negative.</p>
</div>
</section>
<section class="toggle">
<label> When are Unit Tests written in Development Cycle?</label>
<div class="toggle-content">
<p>Tests are written before the code during development in order to help coders write the best code.</p>
</div>
</section>
<section class="toggle">
<label> Why not just use System.out.println() for testing?</label>
<div class="toggle-content">
<p>Debugging the code using system.out.println() will lead to manual scanning of the whole output every time the program is run to ensure the code is doing the expected operations. Moreover, in the long run, it takes lesser time to code JUnit methods and test them on class files.</p>
</div>
</section>
<section class="toggle">
<label> How to install JUnit?</label>
<div class="toggle-content">
<p>Follow the steps below &minus;</p>
<ul class="list">
<li><p>Download the latest version of JUnit, referred to below as junit.zip.</p></li>
<li><p>Unzip the junit.zip distribution file to a directory referred to as %JUNIT_HOME%.</p></li>
<li><p>Add JUnit to the classpath &minus;</p></li>
</ul>
<pre class="result notranslate">
set CLASSPATH=%CLASSPATH%;%JUNIT_HOME%\junit.jar
</pre>
<ul class="list">
<li><p>Test the installation by running the sample tests distributed with JUnit (sample tests are located in the installation directory directly, not the junit.jar file). Then simply type &minus;</p></li>
</ul>
<pre class="result notranslate">
java org.junit.runner.JUnitCore org.junit.tests.AllTests
</pre>
<ul class="list">
<li><p>All the tests should pass with an "OK" message. If the tests don't pass, verify that junit.jar is in the CLASSPATH.</p></li>
</ul>
</div>
</section>
<section class="toggle">
<label> Why does JUnit only report the first failure in a single test?</label>
<div class="toggle-content">
<p>Reporting multiple failures in a single test is generally a sign that the test does too much and it is too big a unit test. JUnit is designed to work best with a number of small tests. It executes each test within a separate instance of the test class. It reports failure on each test.</p>
</div>
</section>
<section class="toggle">
<label> In Java, assert is a keyword. Won't this conflict with JUnit's assert() method?</label>
<div class="toggle-content">
<p>JUnit 3.7 deprecated assert() and replaced it with assertTrue(), which works exactly the same way. JUnit 4 is compatible with the assert keyword. If you run with the -ea JVM switch, assertions that fail will be reported by JUnit.</p>
</div>
</section>
<section class="toggle">
<label> How do I test things that must be run in a J2EE container (e.g. servlets, EJBs)?</label>
<div class="toggle-content">
<p>Refactoring J2EE components to delegate functionality to other objects that don't have to be run in a J2EE container will improve the design and testability of the software. Cactus is an open source JUnit extension that can be used for unit testing server-side java code.</p>
</div>
</section>
<section class="toggle">
<label> Name the tools with which JUnit can be easily integrated.</label>
<div class="toggle-content">
<p>JUnit Framework can be easily integrated with either of the followings &minus;</p>
<ul class="list">
<li>Eclipse</li>
<li>Ant</li>
<li>Maven</li>
</ul>
</div>
</section>
<section class="toggle">
<label> What are the core features of JUnit?</label>
<div class="toggle-content">
<p>JUnit test framework provides following important features &minus;</p>
<ul class="list">
<li>Fixtures</li>
<li>Test suites</li>
<li>Test runners</li>
<li>JUnit classes</li>
</ul>
</div>
</section>
<section class="toggle">
<label> What is a fixture?</label>
<div class="toggle-content">
<p>Fixture is a fixed state of a set of objects used as a baseline for running tests. The purpose of a test fixture is to ensure that there is a well known and fixed environment in which tests are run so that results are repeatable. It includes following methods &minus;</p>
<ul class="list">
<li><p>setUp() method which runs before every test invocation.</p></li>
<li><p>tearDown() method which runs after every test method.</p></li>
</ul>
</div>
</section>
<section class="toggle">
<label> What is a test suite?</label>
<div class="toggle-content">
<p>Test suite means bundle a few unit test cases and run it together. In JUnit, both @RunWith and @Suite annotation are used to run the suite test.</p>
</div>
</section>
<section class="toggle">
<label> What is a test runner?</label>
<div class="toggle-content">
<p>Test runner is used for executing the test cases.</p>
</div>
</section>
<section class="toggle">
<label> What are JUnit classes? List some of them.</label>
<div class="toggle-content">
<p>JUnit classes are important classes which are used in writing and testing JUnits. Some of the important classes are &minus;</p>
<ul class="list">
<li><p><b>Assert</b> &minus; It contains a set of assert methods.</p></li>
<li><p><b>TestCase</b> &minus; It contains a test case defines the fixture to run multiple tests.</p></li>
<li><p><b>TestResult</b> &minus; It contains methods to collect the results of executing a test case.</p></li>
<li><p><b>TestSuite</b> &minus; It is a Composite of Tests.</p></li>
</ul>
</div>
</section>
<section class="toggle">
<label> What are annotations and how are they useful in JUnit?</label>
<div class="toggle-content">
<p>Annotations are like meta-tags that you can add to you code and apply them to methods or in class. The annotation in JUnit gives us information about test methods, which methods are going to run before &amp; after test methods, which methods run before &amp; after all the methods, which methods or class will be ignore during execution.</p>
</div>
</section>
<section class="toggle">
<label> How will you run JUnit from command window?</label>
<div class="toggle-content">
<p>Follow the steps below &minus;</p>
<ul class="list">
<li><p>Set the CLASSPATH</p></li>
<li><p>Invoke the runner &minus;</p></li>
</ul>
<pre class="result notranslate">
java org.junit.runner.JUnitCore 
</pre>
</div>
</section>
<section class="toggle">
<label> What is the purpose of org.junit.Assert class?</label>
<div class="toggle-content">
<p>This class provides a set of assertion methods useful for writing tests. Only failed assertions are recorded.</p>
</div>
</section>
<section class="toggle">
<label> What is the purpose of org.junit.TestResult class?</label>
<div class="toggle-content">
<p>A TestResult collects the results of executing a test case. It is an instance of the Collecting Parameter pattern. The test framework distinguishes between failures and errors. A failure is anticipated and checked for with assertions. Errors are unanticipated problems like an ArrayIndexOutOfBoundsException.</p>
</div>
</section>
<section class="toggle">
<label> What is the purpose of org.junit.TestSuite class?</label>
<div class="toggle-content">
<p>A TestSuite is a Composite of Tests. It runs a collection of test cases.</p>
</div>
</section>
<section class="toggle">
<label> What is the purpose of @Test annotation in JUnit?</label>
<div class="toggle-content">
<p>The Test annotation tells JUnit that the public void method to which it is attached can be run as a test case.</p>
</div>
</section>
<section class="toggle">
<label> What is the purpose of @Before annotation in JUnit?</label>
<div class="toggle-content">
<p>Several tests need similar objects created before they can run. Annotating a public void method with @Before causes that method to be run before each Test method.</p>
</div>
</section>
<section class="toggle">
<label> What is the purpose of @After annotation in JUnit?</label>
<div class="toggle-content">
<p>If you allocate external resources in a Before method you need to release them after the test runs. Annotating a public void method with @After causes that method to be run after the Test method.</p>
</div>
</section>
<section class="toggle">
<label> What is the purpose of @BeforeClass annotation in JUnit?</label>
<div class="toggle-content">
<p>Annotating a public static void method with @BeforeClass causes it to be run once before any of the test methods in the class.</p>
</div>
</section>
<section class="toggle">
<label> What is the purpose of @AfterClass annotation in JUnit?</label>
<div class="toggle-content">
<p>This will perform the method after all tests have finished. This can be used to perform clean-up activities.</p>
</div>
</section>
<section class="toggle">
<label> What is @Ignore annotation and how is this useful?</label>
<div class="toggle-content">
<p>Following are some of the usefulness of @Ignore annotation &minus;</p>
<p>You can easily identify all @Ignore annotations in the source code, while unannotated or commented out tests are not so simple to find.</p>
<p>There are cases when you can't fix a code that is failing, but you still want to method to be around, precisely so that it does not get forgotten. In such cases @Ignore makes sense.</p>
</div>
</section>
<section class="toggle">
<label> Explain the execution procedure of the JUnit test API methods?</label>
<div class="toggle-content">
<p>Following is how the JUnit execution procedure works &minus;</p>
<ul class="list">
<li><p>First of all method annotated as @BeforeClass execute only once.</p></li>
<li><p>Lastly, the method annotated as @AfterClass executes only once.</p></li>
<li><p>Method annotated as @Before executes for each test case but before executing the test case.</p></li>
<li><p>Method annotated as @After executes for each test case but after the execution of test case.</p></li>
<li><p>In between method annotated as @Before and method annotated as @After each test case executes.</p></li>
</ul>
</div>
</section>
<section class="toggle">
<label> What is the purpose of org.junit.JUnitCore class?</label>
<div class="toggle-content">
<p>The test cases are executed using JUnitCore class. JUnitCore is a facade for running tests. It supports running JUnit 4 tests, JUnit 3.8.x tests, and mixtures.</p>
</div>
</section>
<section class="toggle">
<label> How to simulate timeout situation in JUnit?</label>
<div class="toggle-content">
<p>Junit provides a handy option of Timeout. If a test case takes more time than specified number of milliseconds then Junit will automatically mark it as failed. The timeout parameter is used along with @Test annotation.</p>
</div>
</section>
<section class="toggle">
<label> How can you use JUnit to test that the code throws desired exception?</label>
<div class="toggle-content">
<p>JUnit provides a option of tracing the Exception handling of code. You can test if a code throws desired exception or not. The expected parameter is used along with @Test annotation as follows &minus; @Test(expected)</p>
</div>
</section>
<section class="toggle">
<label> What are Parameterized tests?</label>
<div class="toggle-content">
<p>Junit 4 has introduced a new feature Parameterized tests. Parameterized tests allow developer to run the same test over and over again using different values. </p>
</div>
</section>
<section class="toggle">
<label> How to create Parameterized tests?</label>
<div class="toggle-content">
<p>There are five steps, that you need to follow to create Parameterized tests&minus;</p>
<ul class="list">
<li><p>Annotate test class with @RunWith(Parameterized.class).</p></li>
<li><p>Create a public static method annotated with @Parameters that returns a Collection of Objects (as Array) as test data set.</p></li>
<li><p>Create a public constructor that takes in what is equivalent to one "row" of test data.</p></li>
<li><p>Create an instance variable for each "column" of test data.</p></li>
<li><p>Create your tests case(s) using the instance variables as the source of the test data.</p></li>
<li><p>The test case will be invoked once per each row of data. Let's see Parameterized tests in action.</p></li>
</ul>
</div>
</section>
<section class="toggle">
<label> How do you use test fixtures?</label>
<div class="toggle-content">
<p>Fixtures is a fixed state of a set of objects used as a baseline for running tests. The purpose of a test fixture is to ensure that there is a well known and fixed environment in which tests are run so that results are repeatable. It includes &minus;</p>
<ul class="list">
<li><p>setUp() method which runs before every test invocation.</p></li>
<li><p>tearDown() method which runs after every test method.</p></li>
</ul>
</div>
</section>
<section class="toggle">
<label> How to compile a JUnit Test Class?</label>
<div class="toggle-content">
<p>Compiling a JUnit test class is like compiling any other Java classes. The only thing you need watch out is that the JUnit JAR file must be included in the classpath.</p>
</div>
</section>
<section class="toggle">
<label> What happens if a JUnit Test Method is Declared as "private"?</label>
<div class="toggle-content">
<p>If a JUnit test method is declared as "private", it compiles successfully. But the execution will fail. This is because JUnit requires that all test methods must be declared as "public".</p>
</div>
</section>
<section class="toggle">
<label> How do you test a "protected" method?</label>
<div class="toggle-content">
<p>When a method is declared as "protected", it can only be accessed within the same package where the class is defined. Hence to test a "protected" method of a target class, define your test class in the same package as the target class.</p>
</div>
</section>
<section class="toggle">
<label> How do you test a "private" method?</label>
<div class="toggle-content">
<p>When a method is declared as "private", it can only be accessed within the same class. So there is no way to test a "private" method of a target class from any test class. Hence you need to perform unit testing manually. Or you have to change your method from "private" to "protected".</p>
</div>
</section>
<section class="toggle">
<label> What happens if a JUnit test method is declared to return "String"?</label>
<div class="toggle-content">
<p>If a JUnit test method is declared to return "String", the compilation will pass ok. But the execution will fail. This is because JUnit requires that all test methods must be declared to return "void".</p>
</div>
</section>
<section class="toggle">
<label> Can you use a main() Method for Unit Testing?</label>
<div class="toggle-content">
<p>Yes you can test using main() method. One obvious advantage seems to be that you can whitebox test the class. That is, you can test the internals of it (private methods for example). You can't do that with unit-tests. But primarily the test framework tests the interface and the behavior from the user's perspective.</p>
</div>
</section>
<section class="toggle">
<label> Do you need to write a test class for every class that needs to be tested?</label>
<div class="toggle-content">
<p>No. We need not write an independent test class for every class that needs to be tested. If there is a small group of tests sharing a common test fixture, you may move those tests to a new test class.</p>
</div>
</section>
<section class="toggle">
<label> When are tests garbage collected?</label>
<div class="toggle-content">
<p>The test runner holds strong references to all Test instances for the duration of the test execution. This means that for a very long test run with many Test instances, none of the tests may be garbage collected until the end of the entire test run. Explicitly setting an object to null in the tearDown() method, for example, allows it to be garbage collected before the end of the entire test run.</p>
</div>
</section>
<section class="toggle">
<label> What is a Mock Object?</label>
<div class="toggle-content">
<p>In a unit test, mock objects can simulate the behavior of complex, real (non-mock) objects and are therefore useful when a real object is impractical or impossible to incorporate into a unit test.</p>
</div>
</section>
<section class="toggle">
<label> Explain unit testing using Mock Objects.</label>
<div class="toggle-content">
<p>The common coding style for testing with mock objects is to &minus;</p>
<ul class="list">
<li>Create instances of mock objects.</li>
<li>Set state and expectations in the mock objects.</li>
<li>Invoke domain code with mock objects as parameters.</li>
<li>Verify consistency in the mock objects.</li>
</ul>
</div>
</section>
<section class="toggle">
<label> Name some of the JUnit Extensions.</label>
<div class="toggle-content">
<p>Following are the JUnit extensions &minus;</p>
<ul class="list">
<li><p>Cactus</p></li>
<li><p>JWebUnit</p></li>
<li><p>XMLUnit</p></li>
<li><p>MockObject</p></li>
</ul>
</div>
</section>
<section class="toggle">
<label> What is Cactus?</label>
<div class="toggle-content">
<p>Cactus is a simple test framework for unit testing server-side java code (Servlets, EJBs, Tag Libs, Filters). The intent of Cactus is to lower the cost of writing tests for server-side code. It uses JUnit and extends it. Cactus implements an in-container strategy, meaning that tests are executed inside the container.</p>
</div>
</section>
<section class="toggle">
<label> What are the core components of Cactus?</label>
<div class="toggle-content">
<p>Cactus Ecosystem is made of several components &minus;</p>
<ul class="list">
<li><p>Cactus Framework is the heart of Cactus. It is the engine that provides the API to write Cactus tests.</p></li>
<li><p>Cactus Integration Modules are front ends and frameworks that provide easy ways of using the Cactus Framework (Ant scripts, Eclipse plugin, Maven plugin).</p></li>
</ul>
</div>
</section>
<section class="toggle">
<label> What is JWebUnit?</label>
<div class="toggle-content">
<p>WebUnit is a Java-based testing framework for web applications. It wraps existing testing frameworks such as HtmlUnit and Selenium with a unified, simple testing interface to allow you to quickly test the correctness of your web applications.</p>
</div>
</section>
<section class="toggle">
<label> What are the advantages of using JWebUnit?</label>
<div class="toggle-content">
<p>JWebUnit provides a high-level Java API for navigating a web application combined with a set of assertions to verify the application's correctness. This includes navigation via links, form entry and submission, validation of table contents, and other typical business web application features.</p>
<p>The simple navigation methods and ready-to-use assertions allow for more rapid test creation than using only JUnit or HtmlUnit. And if you want to switch from HtmlUnit to other plugins such as Selenium (available soon), there is no need to rewrite your tests.</p>
</div>
</section>
<section class="toggle">
<label> What is XMLUnit?</label>
<div class="toggle-content">
<p>XMLUnit provides a single JUnit extension class, XMLTestCase, and a set of supporting classes.</p>
</div>
</section>
<section class="toggle">
<label> What is the use of supporting classes in XMLUnit?</label>
<div class="toggle-content">
<p>Supporting classes allow assertions to be made about&minus;</p>
<ul class="list">
<li><p>The differences between two pieces of XML (via Diff and DetailedDiff classes).</p></li>
<li><p>The validity of a piece of XML (via Validator class).</p></li>
<li><p>The outcome of transforming a piece of XML using XSLT (via Transform class).</p></li>
<li><p>The evaluation of an XPath expression on a piece of XML (via classes implementing the XpathEngine interface).</p></li>
<li><p>Individual nodes in a piece of XML that are exposed by DOM Traversal (via NodeTest class).</p></li>
</ul>
</div>
</section>
<h2>What is Next ?</h2>
<p>Further you can go through your past assignments you have done with the subject and make sure you are able to speak confidently on them. If you are fresher then interviewer does not expect you will answer very complex questions, rather you have to make your basics concepts very strong.</p>
<p>Second it really doesn't matter much if you could not answer few questions but it matters that whatever you answered, you must have answered with confidence. So just feel confident during your interview. We at tutorialspoint wish you best luck to have a good interviewer and all the very best for your future endeavor. Cheers :-)</p>
<div class="parent-file">junit_questions_answers.htm</div>
<div class="mui-container-fluid button-borders show" id="bottom_navigation">
<div class="pre-btn">
<a href="junit_questions_answers.htm"><i class="fal fa-chevron-circle-left"></i> Previous Page</a>
<a class="hide-on-mobile" href="javascript:printPage();"><i class="fa fa-print"></i> Print Page</a>
</div>
<div class="nxt-btn">
<a href="junit_questions_answers.htm">Next Page <i class="fal fa-chevron-circle-right"></i>&nbsp;</a>
</div>
</div>
<div class="google-bottom-ads">
<div>Advertisements</div>
<div id="adp_bottom_ads"></div>
<script>
var adPos = document.getElementById('adp_bottom_ads');
var mobile_ad_id = "a8a632a6-046e-4f5c-b25f-8bc82ac89fb2";
var desktop_ad_id = "e7ddd6f7-1ab0-494a-bade-887daa4373a0";
var adpushup = adpushup || {};
adpushup.que = adpushup.que || [];
adpushup.que.push(function() {
var ad_id = window.innerWidth <= 768 ? mobile_ad_id : desktop_ad_id;
adPos.innerHTML = '<div id="' + ad_id + '" class="_ap_apex_ad"></div>';
adpushup.triggerAd(ad_id);
});
</script>
<div class="space-bottom"></div>
</div>
</div>
<!-- Tutorial Content Ends Here -->
<!-- Right Column Starts Here -->
<div class="mui-col-md-2 google-right-ads">
<div class="space-top"></div>
<div class="google-right-ad" id="ad300" style="margin: 0px auto !important;margin-top:5px;">
<div id="f0f6cff6-393d-4170-b63a-d9ff06ca9f25" class="_ap_apex_ad">
<script>
var adpushup = adpushup || {};
adpushup.que = adpushup.que || [];
adpushup.que.push(function() {
adpushup.triggerAd("f0f6cff6-393d-4170-b63a-d9ff06ca9f25");
});
</script>
</div>
</div>
<div class="google-right-ad" style="margin-top:16px;">
<div id="5c0affd5-724a-475c-bfcd-cecbc7660c36" class="_ap_apex_ad">
<script>
var adpushup = adpushup || {};
adpushup.que = adpushup.que || [];
adpushup.que.push(function() {
adpushup.triggerAd("5c0affd5-724a-475c-bfcd-cecbc7660c36");
});
</script>
</div>
</div>
<div class="space-bottom"></div>

<div class="google-right-ad" style="margin-top:16px;margin-bottom:15px;">
<div id="8f8814c2-d64c-4d26-9cb9-543653c0b48f" class="_ap_apex_ad">
<script>
var adpushup = adpushup || {};
adpushup.que = adpushup.que || [];
adpushup.que.push(function() {
adpushup.triggerAd("8f8814c2-d64c-4d26-9cb9-543653c0b48f");
});
</script>
</div>
</div>
</div>
</div>
<!-- Right Column Ends Here -->
</div>
</div>
<div class="clear"></div>
<footer id="footer">
<div class="mui--text-center">
<div class="mui--text-caption mui--text-light">
<a href="/index.htm" class="logo"><img class="img-responsive" src="/images/logo-black.png" alt="Tutorials Point" title="Tutorials Point"></a>
</div>
<ul class="mui-list--inline mui--text-body2 mui--text-light">
<li><a href="/about/index.htm"><i class="fal fa-globe"></i> About us</a></li>
<li><a href="/about/about_terms_of_use.htm"><i class="fal fa-asterisk"></i> Terms of use</a></li>
<li><a href="/about/about_privacy.htm"> <i class="fal fa-shield-check"></i> Privacy Policy</a></li>
<li><a href="/about/faq.htm"><i class="fal fa-question-circle"></i> FAQ's</a></li>
<li><a href="/about/about_helping.htm"><i class="fal fa-hands-helping"></i> Helping</a></li>
<li><a href="/about/contact_us.htm"><i class="fal fa-map-marker-alt"></i> Contact</a></li>
</ul>
<div class="mui--text-caption mui--text-light bottom-copyright-text">&copy; Copyright 2020. All Rights Reserved.</div>
</div>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-232293-17"></script>
<script>
window.dataLayer = window.dataLayer || [];
function gtag(){dataLayer.push(arguments);}
gtag('js', new Date());
gtag('config', 'UA-232293-6');
</script>
</footer>
</body>
</html>

