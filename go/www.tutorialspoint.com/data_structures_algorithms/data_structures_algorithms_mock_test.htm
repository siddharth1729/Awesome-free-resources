<!DOCTYPE html>
<html lang="en-US">
<head>
<title>Data Structures Algorithms Mock Test - Tutorialspoint</title>
<meta charset="utf-8">
<meta name="description" content="Data Structures Algorithms Mock Test - This section presents you various set of Mock Tests related to Data Structures Algorithms. You can download these sample mock tests at your local machine and so"/>
<meta name="keywords" content="C, C++, Python, Java, HTML, CSS, JavaScript, SQL, PHP, jQuery, XML, DOM, Bootstrap, Tutorials, Articles, Programming, training, learning, quiz, preferences, examples, code"/>
<link rel="canonical" href="https://www.tutorialspoint.com/data_structures_algorithms/data_structures_algorithms_mock_test.htm" />
<link rel="shortcut icon" href="/favicon.ico" type="image/x-icon" />
<meta name="viewport" content="width=device-width,initial-scale=1.0,user-scalable=yes">
<link rel="stylesheet" href="/themes/css/style-min-v1.css?v=2.0.3">
<script src="/themes/js/script-min-v1.js?v=2.0.0"></script>
<script>function printPage() { window.print(); }</script>
<script data-cfasync="false" type="text/javascript">(function(w, d) { var s = d.createElement('script'); s.src = '//cdn.adpushup.com/40046/adpushup.js'; s.type = 'text/javascript'; s.async = true; (d.getElementsByTagName('head')[0] || d.getElementsByTagName('body')[0]).appendChild(s); })(window, document);</script>
<script data-cfasync="false" type="text/javascript">(function(w, d) { var s = d.createElement('script'); s.src = '//delivery.adrecover.com/18107/adRecover.js'; s.type = 'text/javascript'; s.async = true; (d.getElementsByTagName('head')[0] || d.getElementsByTagName('body')[0]).appendChild(s); })(window, document);</script>
<style>
.right-menu .mui-btn {
    background-color:#cd3300;
}
a.demo {
    background:#cd3300;
}
li.heading {
    background:#cd3300;
}
.course-box{background:#cd3300}
.home-intro-sub p{color:#cd3300}
</style>
</head>
<body>
<header id="header">
<!-- Top sub-menu Starts Here -->
<div class="mui-appbar mui-container-fulid top-menu">
<div class="mui-container">
<div class="top-menu-item home">
<a href="https://www.tutorialspoint.com/index.htm" target="_blank" title="TutorialsPoint - Home"><i class="fal fa-home"></i> <span>Home</span></a>
</div>
<div class="top-menu-item qa">
<a href="https://www.tutorialspoint.com/about/about_careers.htm" target="_blank" title="Job @ Tutorials Point"><i class="fa fa-suitcase"></i> <span>Jobs</span></a>
</div>
<div class="top-menu-item tools">
<a href="https://www.tutorialspoint.com/online_dev_tools.htm" target="_blank" title="Tools - Online Development and Testing Tools"><i class="fal fa-cogs"></i> <span>Tools</span></a>
</div>
<div class="top-menu-item coding-ground">
<a href="https://www.tutorialspoint.com/codingground.htm" target="_blank" title="Coding Ground - Free Online IDE and Terminal"><i class="fal fa-code"></i> <span>Coding Ground </span></a> 
</div>
<div class="top-menu-item current-affairs">
<a href="https://www.tutorialspoint.com/current_affairs.htm" target="_blank" title="Daily Current Affairs"><i class="fal fa-layer-plus"></i> <span>Current Affairs</span></a>
</div>
<div class="top-menu-item upsc-notes">
<a href="https://www.tutorialspoint.com/upsc_ias_exams.htm" target="_blank" title="UPSC IAS Exams Notes - TutorialsPoint"><i class="fal fa-user-tie"></i> <span>UPSC Notes</span></a>
</div>      
<div class="top-menu-item online-tutoris">
<a href="https://www.tutorialspoint.com/tutor_connect/index.php" target="_blank" title="Top Online Tutors - Tutor Connect"><i class="fal fa-user"></i> <span>Online Tutors</span></a>
</div>
<div class="top-menu-item whiteboard">
<a href="https://www.tutorialspoint.com/whiteboard.htm" target="_blank" title="Free Online Whiteboard"><i class="fal fa-chalkboard"></i> <span>Whiteboard</span></a>
</div>
<div class="top-menu-item net-meeting">
<a href="https://www.tutorialspoint.com/netmeeting.php" target="_blank" title="A free tool for online video conferencing"><i class="fal fa-chalkboard-teacher"></i> <span>Net Meeting</span></a> 
</div>
<div class="top-menu-item articles">
<a href="https://www.tutorix.com" target="_blank" title="Tutorx - The Best Learning App" rel="nofollow"><i class="fal fa-video"></i> <span>Tutorix</span></a> 
</div>        
<div class="social-menu-item">
<a href="https://www.facebook.com/tutorialspointindia" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Facebook"><i class="fab fa-facebook-f"></i></a> 
<a href="https://www.twitter.com/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Twitter"><i class="fab fa-twitter"></i></a>
<a href="https://www.linkedin.com/company/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Linkedin"><i class="fab fa-linkedin-in"></i></a>
<a href="https://www.youtube.com/channel/UCVLbzhxVTiTLiVKeGV7WEBg" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint YouTube"><i class="fab fa-youtube"></i></a>
</div>        
</div>
</div>
<!-- Top sub-menu Ends Here -->
<!-- Top main-menu Starts Here -->
<div class="mui-appbar mui-container-fulid mui--appbar-line-height mui--z1" id="logo-menu">
<div class="mui-container">
<div class="left-menu">
<a href="https://www.tutorialspoint.com/index.htm" title="Tutorialspoint">
<img class="tp-logo" alt="tutorialspoint" src="/data_structures_algorithms/images/logo.png">
</a>
<div class="mui-dropdown">
<a class="mui-btn mui-btn--primary categories" data-mui-toggle="dropdown"><i class="fa fa-th-large"></i> 
<span>Categories <span class="mui-caret"></span></span></a>            
<ul class="mui-dropdown__menu cat-menu">
<li>
<ul>
<li><a href="/academic_tutorials.htm"><i class="fa fa-caret-right"></i> Academic Tutorials</a></li>
<li><a href="/big_data_tutorials.htm"><i class="fa fa-caret-right"></i> Big Data &amp; Analytics </a></li>
<li><a href="/computer_programming_tutorials.htm"><i class="fa fa-caret-right"></i> Computer Programming </a></li>
<li><a href="/computer_science_tutorials.htm"><i class="fa fa-caret-right"></i> Computer Science </a></li>
<li><a href="/database_tutorials.htm"><i class="fa fa-caret-right"></i> Databases </a></li>
<li><a href="/devops_tutorials.htm"><i class="fa fa-caret-right"></i> DevOps </a></li>
<li><a href="/digital_marketing_tutorials.htm"><i class="fa fa-caret-right"></i> Digital Marketing </a></li>
<li><a href="/engineering_tutorials.htm"><i class="fa fa-caret-right"></i> Engineering Tutorials </a></li>
<li><a href="/upsc_ias_exams.htm"><i class="fa fa-caret-right"></i> Exams Syllabus </a></li>
<li><a href="/famous_monuments.htm"><i class="fa fa-caret-right"></i> Famous Monuments </a></li>
<li><a href="/gate_exams_tutorials.htm"><i class="fa fa-caret-right"></i> GATE Exams Tutorials</a></li>
<li><a href="/latest_technologies.htm"><i class="fa fa-caret-right"></i> Latest Technologies </a></li>
<li><a href="/machine_learning_tutorials.htm"><i class="fa fa-caret-right"></i> Machine Learning </a></li>
<li><a href="/mainframe_tutorials.htm"><i class="fa fa-caret-right"></i> Mainframe Development </a></li>
<li><a href="/management_tutorials.htm"><i class="fa fa-caret-right"></i> Management Tutorials </a></li>
<li><a href="/maths_tutorials.htm"><i class="fa fa-caret-right"></i> Mathematics Tutorials</a></li>
<li><a href="/microsoft_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> Microsoft Technologies </a></li>
<li><a href="/misc_tutorials.htm"><i class="fa fa-caret-right"></i> Misc tutorials </a></li>
<li><a href="/mobile_development_tutorials.htm"><i class="fa fa-caret-right"></i> Mobile Development </a></li>
<li><a href="/java_technology_tutorials.htm"><i class="fa fa-caret-right"></i> Java Technologies </a></li>
<li><a href="/python_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> Python Technologies </a></li>
<li><a href="/sap_tutorials.htm"><i class="fa fa-caret-right"></i> SAP Tutorials </a></li>
<li><a href="/scripting_lnaguage_tutorials.htm"><i class="fa fa-caret-right"></i>Programming Scripts </a></li>
<li><a href="/selected_reading.htm"><i class="fa fa-caret-right"></i> Selected Reading </a></li>
<li><a href="/software_quality_tutorials.htm"><i class="fa fa-caret-right"></i> Software Quality </a></li>
<li><a href="/soft_skill_tutorials.htm"><i class="fa fa-caret-right"></i> Soft Skills </a></li>
<li><a href="/telecom_tutorials.htm"><i class="fa fa-caret-right"></i> Telecom Tutorials </a></li>
<li><a href="/upsc_ias_exams.htm"><i class="fa fa-caret-right"></i> UPSC IAS Exams </a></li>
<li><a href="/web_development_tutorials.htm"><i class="fa fa-caret-right"></i> Web Development </a></li>
<li><a href="/sports_tutorials.htm"><i class="fa fa-caret-right"></i> Sports Tutorials </a></li>
<li><a href="/xml_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> XML Technologies </a></li>
<li><a href="/multi_language_tutorials.htm"><i class="fa fa-caret-right"></i> Multi-Language</a></li>
<li><a href="/questions_and_answers.htm"><i class="fa fa-caret-right"></i> Interview Questions</a></li>
</ul>
</li>
</ul>
<div class="clear"></div>
</div> 
</div>
<div class="right-menu">
<div class="toc-toggle">
<a href="javascript:void(0);"><i class="fa fa-bars"></i></a>
</div>
<div class="mobile-search-btn">
<a href="https://www.tutorialspoint.com/search.htm"><i class="fal fa-search"></i></a>
</div>
<div class="search-box">
<form method="get" class="search-form" name="searchform" action="https://www.google.com/search" target="_blank" novalidate="">
<input type="hidden" name="sitesearch" value="www.tutorialspoint.com" class="user-valid valid">
<input class="header-search-box" type="text" id="search-string" name="q" placeholder="Search your favorite tutorials..." onfocus="if (this.value == 'Search your favorite tutorials...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Search your favorite tutorials...';}" autocomplete="off">
<button><i class="fal fa-search"></i></button>
</form>
</div>
<div class="menu-btn library-btn">
<a href="https://www.tutorialspoint.com/tutorialslibrary.htm"><i class="fal fa-cubes"></i> <span>Library</span></a>
</div>
<div class="menu-btn videos-btn">
<a href="https://www.tutorialspoint.com/videotutorials/index.php"><i class="fal fa-video"></i> <span>Videos</span></a> 
</div>
<div class="menu-btn videos-btn">
<a href="https://www.tutorialspoint.com/questions/index.php"><i class="fa fa-location-arrow"></i> <span>Q/A</span></a>
</div>
<div class="menu-btn ebooks-btn">
<a href="https://store.tutorialspoint.com"><i class="fal fa-book"></i> <span>eBooks</span></a>
</div>
<div class="mui-dropdown">
<button class="mui-btn mui-btn--primary mobile-menu" data-mui-toggle="dropdown">
<span class="mui-caret"></span>
</button>
<ul class="mui-dropdown__menu">
<li><a href="https://www.tutorialspoint.com/tutorialslibrary.htm"><i class="fal fa-cubes"></i> <span>Library</span></a></li>
<li><a href="https://www.tutorialspoint.com/videotutorials/index.php"><i class="fal fa-video"></i> <span>Videos</span></a></li>
<li><a href="https://store.tutorialspoint.com"><i class="fal fa-book"></i> <span>eBooks</span></a></li>
</ul>
</div>
</div>
</div>
</div>
<!-- Top main-menu Ends Here -->
</header>
<div class="mui-container-fluid content">
<div class="mui-container">
<!-- Tutorial ToC Starts Here -->
<div class="mui-col-md-3 tutorial-toc">
<div class="mini-logo">
<img src="/data_structures_algorithms/images/data-structure-mini-logo.jpg" alt="Data Structures & Algorithms Tutorial" />
</div>
<ul class="toc chapters">
<li class="heading">Data Structures &amp; Algorithms</li>
<li><a href="/data_structures_algorithms/index.htm">DSA - Home</a></li>
<li><a href="/data_structures_algorithms/data_structure_overview.htm">DSA - Overview</a></li>
<li><a href="/data_structures_algorithms/data_structure_environment.htm">DSA - Environment Setup</a></li>
</ul>
<ul class="toc chapters">
<li class="heading">Algorithm</li>   
<li><a href="/data_structures_algorithms/algorithms_basics.htm">DSA - Algorithms Basics</a></li>
<li><a href="/data_structures_algorithms/asymptotic_analysis.htm">DSA - Asymptotic Analysis</a></li>
<li><a href="/data_structures_algorithms/greedy_algorithms.htm">DSA - Greedy Algorithms</a></li>
<li><a href="/data_structures_algorithms/divide_and_conquer.htm">DSA - Divide and Conquer</a></li>
<li><a href="/data_structures_algorithms/dynamic_programming.htm">DSA - Dynamic Programming</a></li>
</ul>
<ul class="toc chapters">
<li class="heading">Data Structures</li>
<li><a href="/data_structures_algorithms/data_structures_basics.htm">DSA - Data Structure Basics</a></li>
<li><a href="/data_structures_algorithms/array_data_structure.htm">DSA - Array Data Structure</a></li>
</ul>
<ul class="toc chapters">
<li class="heading">Linked Lists</a></li>
<li><a href="/data_structures_algorithms/linked_list_algorithms.htm">DSA - Linked List Basics</a></li>
<li><a href="/data_structures_algorithms/doubly_linked_list_algorithm.htm">DSA - Doubly Linked List</a></li>
<li><a href="/data_structures_algorithms/circular_linked_list_algorithm.htm">DSA - Circular Linked List</a></li>
</ul>
<ul class="toc chapters">
<li class="heading">Stack &amp; Queue</li>
<li><a href="/data_structures_algorithms/stack_algorithm.htm">DSA - Stack</a></li>
<li><a href="/data_structures_algorithms/expression_parsing.htm">DSA - Expression Parsing</a></li>
<li><a href="/data_structures_algorithms/dsa_queue.htm">DSA - Queue</a></li>
</ul>
<ul class="toc chapters">
<li class="heading">Searching Techniques</li>
<!--<li style="background:yellow;"><a href="/data_structures_algorithms/searching_algorithms.htm">DSA - Searching Algorithms</a></li>-->
<li><a href="/data_structures_algorithms/linear_search_algorithm.htm">DSA - Linear Search</a></li>
<li><a href="/data_structures_algorithms/binary_search_algorithm.htm">DSA - Binary Search</a></li>
<li><a href="/data_structures_algorithms/interpolation_search_algorithm.htm">DSA - Interpolation Search</a></li>
<li><a href="/data_structures_algorithms/hash_data_structure.htm">DSA - Hash Table</a></li>
</ul>
<ul class="toc chapters">
<li class="heading">Sorting Techniques</li>
<li><a href="/data_structures_algorithms/sorting_algorithms.htm">DSA - Sorting Algorithms</a></li>
<li><a href="/data_structures_algorithms/bubble_sort_algorithm.htm">DSA - Bubble Sort</a></li>
<li><a href="/data_structures_algorithms/insertion_sort_algorithm.htm">DSA - Insertion Sort</a></li>
<li><a href="/data_structures_algorithms/selection_sort_algorithm.htm">DSA - Selection Sort</a></li>
<li><a href="/data_structures_algorithms/merge_sort_algorithm.htm">DSA - Merge Sort</a></li>
<li><a href="/data_structures_algorithms/shell_sort_algorithm.htm">DSA - Shell Sort</a></li>
<li><a href="/data_structures_algorithms/quick_sort_algorithm.htm">DSA - Quick Sort</a></li>
</ul>
<ul class="toc chapters">
<li class="heading">Graph Data Structure</li>
<li><a href="/data_structures_algorithms/graph_data_structure.htm">DSA - Graph Data Structure</a></li>
<li><a href="/data_structures_algorithms/depth_first_traversal.htm">DSA - Depth First Traversal</a></li>
<li><a href="/data_structures_algorithms/breadth_first_traversal.htm">DSA - Breadth First Traversal</a></li>
</ul>
<ul class="toc chapters">
<li class="heading">Tree Data Structure</li>
<li><a href="/data_structures_algorithms/tree_data_structure.htm">DSA - Tree Data Structure</a></li>
<li><a href="/data_structures_algorithms/tree_traversal.htm">DSA - Tree Traversal</a></li>
<li><a href="/data_structures_algorithms/binary_search_tree.htm">DSA - Binary Search Tree</a></li>
<li><a href="/data_structures_algorithms/avl_tree_algorithm.htm">DSA - AVL Tree</a></li>
<li><a href="/data_structures_algorithms/spanning_tree.htm">DSA - Spanning Tree</a></li>
<li><a href="/data_structures_algorithms/heap_data_structure.htm">DSA - Heap</a></li>
</ul>
<ul class="toc chapters">
<li class="heading">Recursion</li>
<li><a href="/data_structures_algorithms/recursion_basics.htm">DSA - Recursion Basics</a></li>
<li><a href="/data_structures_algorithms/tower_of_hanoi.htm">DSA - Tower of Hanoi</a></li>
<li><a href="/data_structures_algorithms/fibonacci_series.htm">DSA - Fibonacci Series</a></li>
</ul>
<ul class="toc chapters">
<li class="heading">DSA Useful Resources</li>
<li><a href="/data_structures_algorithms/data_structures_algorithms_questions_answers.htm">DSA - Questions and Answers</a></li>
<li><a href="/data_structures_algorithms/dsa_quick_guide.htm">DSA - Quick Guide</a></li>
<li><a href="/data_structures_algorithms/dsa_useful_resources.htm">DSA - Useful Resources</a></li>
<li><a href="/data_structures_algorithms/dsa_discussion.htm">DSA - Discussion</a></li>
</ul>
<ul class="toc reading">
<li class="sreading">Selected Reading</li>
<li><a target="_top" href="/upsc_ias_exams.htm">UPSC IAS Exams Notes</a></li>
<li><a target="_top" href="/developers_best_practices/index.htm">Developer's Best Practices</a></li>
<li><a target="_top" href="/questions_and_answers.htm">Questions and Answers</a></li>
<li><a target="_top" href="/effective_resume_writing.htm">Effective Resume Writing</a></li>
<li><a target="_top" href="/hr_interview_questions/index.htm">HR Interview Questions</a></li>
<li><a target="_top" href="/computer_glossary.htm">Computer Glossary</a></li>
<li><a target="_top" href="/computer_whoiswho.htm">Who is Who</a></li>
</ul>
<div id="stickyparent">
<div style="height:250px;width:300px;" id="sticky-ad">
<div id="430c9911-782f-495d-88f9-69f58ca8c9a4" class="_ap_apex_ad" >
<script>
var adpushup = adpushup || {};
adpushup.que = adpushup.que || [];
adpushup.que.push(function() {
adpushup.triggerAd("430c9911-782f-495d-88f9-69f58ca8c9a4");
});
</script>
</div>
</div>
</div>
</div>
<!-- Tutorial ToC Ends Here -->
<!-- Tutorial Content Starts Here -->
<div class="mui-col-md-6 tutorial-content">
<h1>Data Structures Algorithms Mock Test</h1>
<hr />
<div class="top-ad-heading">Advertisements</div>
<div style="text-align:center" class="google-top-ads">
<div id="adp_top_ads" style="text-align:center !important;"></div>
<script>
     var adPos = document.getElementById('adp_top_ads');
     var ad_id_720 = "8014640d-fd34-4b2e-9b1b-cc67234a2325";
     var ad_id_650 = "2d1bb2c4-eb72-471d-9c80-1bf5514728c1";
     var ad_id_300 = "df94a1a9-ae2f-432d-9a92-d93823ff4503";
     var width = window.innerWidth;
     var ad_id = ad_id_720;
     if( width <= 768 ){
        ad_id =  ad_id_300;
     }else if( width <= 1435 ){
        ad_id =  ad_id_650;
     }
     adPos.innerHTML = '<div id="' + ad_id + '" class="_ap_apex_ad"></div>';
     var adpushup = adpushup || {};
     adpushup.que = adpushup.que || [];
     adpushup.que.push(function() {
     adpushup.triggerAd(ad_id);
     });
</script>
</div>
<br>
<div class="mui-container-fluid button-borders">
<div class="pre-btn">
<a href="data_structures_algorithms_questions_answers.htm"><i class="fal fa-chevron-circle-left"></i> Previous Page</a>
</div>
<div class="nxt-btn">
<a href="data_structures_algorithms_questions_answers.htm">Next Page <i class="fal fa-chevron-circle-right"></i>&nbsp;</a>
</div>
</div>
<div class="clearer"></div>
<p>This section presents you various set of Mock Tests related to <b>Data Structures Algorithms</b>. You can download these sample mock tests at your local machine and solve offline at your convenience. Every mock test is supplied with a mock test key to let you verify the final score and grade yourself.</p>
<img src="/images/online_mock_tests.png" alt="Questions and Answers" />
<a href="/data_structures_algorithms/data_structures_algorithms_mock_test.htm?min=1&max=25"><button type="button" class="btn btn-default btn-mt"><i class="icon  icon-file-pdf-o"></i> Mock Test I</button></a>
<a href="/data_structures_algorithms/data_structures_algorithms_mock_test.htm?min=26&max=50"><button type="button" class="btn btn-default btn-mt"><i class="icon  icon-file-pdf-o"></i> Mock Test II</button></a>
<a href="/data_structures_algorithms/data_structures_algorithms_mock_test.htm?min=51&max=75"><button type="button" class="btn btn-default btn-mt"><i class="icon  icon-file-pdf-o"></i> Mock Test III</button></a>
<a href="/data_structures_algorithms/data_structures_algorithms_mock_test.htm?min=76&max=100"><button type="button" class="btn btn-default btn-mt"><i class="icon  icon-file-pdf-o"></i> Mock Test IV</button></a>
<style>
.B, .answer-sheet{
   display:none !important;
}
.Q a{
   pointer-events: none;
   cursor: default;
}
</style>
<h1>Data Structures Algorithms Mock Test I </h1>
<div class="QA">
<div class="Q" id="Q1">
<p><span>Q 1</span> - What is the worst case time complexity of linear search algorithm?</p>
<p><a class="false" href="javascript:void(0);"><span>A</span> - &Omicron;(1)</a></p>
<p><a class="false" href="javascript:void(0);"><span>B</span> - &Omicron;(n)</a></p>
<p><a class="false" href="javascript:void(0);"><span>C</span> - &Omicron;(log n)</a></p>
<p><a class="true" href="javascript:void(0);"><span>D</span> - &Omicron;(n<sup>2</sup>)</a></p>
</div>
<div class="A" id='A1'>
<h3>Answer : D</h3>
<h3>Explanation</h3>
<p>Linear search scans sequentially to find the target value.  The best case is &Omicron;(1) and average and worst case is &Omicron;(n).  Worst case is when data is not in the list, and it has to scan all n elements.</p>
</div>
<div class="B">
<button type="button" class="btn btn-default btn-xsm" onclick="javascript:showAnswer('1')"><i class="icon  icon-sort"></i> <span>Show Answer</span></button>
</div>
</div><div class="QA">
<div class="Q" id="Q2">
<p><span>Q 2</span> - What is the worst case run-time complexity of binary search algorithm?</p>
<p><a class="false" href="javascript:void(0);"><span>A</span> - &Omicron;(n<sup>2</sup>)</a></p>
<p><a class="false" href="javascript:void(0);"><span>B</span> - &Omicron;(n<sup>log n</sup>)</a></p>
<p><a class="false" href="javascript:void(0);"><span>C</span> - &Omicron;(n<sup>3</sup>)</a></p>
<p><a class="true" href="javascript:void(0);"><span>D</span> - &Omicron;(n)</a></p>
</div>
<div class="A" id='A2'>
<h3>Answer : D</h3>
<h3>Explanation</h3>
<p>In the worst case, binary search will be left or right intended, making it compare all the n values.</p>
</div>
<div class="B">
<button type="button" class="btn btn-default btn-xsm" onclick="javascript:showAnswer('2')"><i class="icon  icon-sort"></i> <span>Show Answer</span></button>
</div>
</div><div class="QA">
<div class="Q" id="Q3">
<p><span>Q 3</span> - Which of the following usees FIFO method</p>
<p><a class="true" href="javascript:void(0);"><span>A</span> - Queue</a></p>
<p><a class="false" href="javascript:void(0);"><span>B</span> - Stack</a></p>
<p><a class="false" href="javascript:void(0);"><span>C</span> - Hash Table</a></p>
<p><a class="false" href="javascript:void(0);"><span>D</span> - Binary Search Tree</a></p>
</div>
<div class="A" id='A3'>
<h3>Answer : A</h3>
<h3>Explanation</h3>
<p>Queue maintains two pointers &minus; front and rear.  In queue data structure, the item inserted first will always be removed first, hence FIFO! </p>
</div>
 <div class="B">
<button type="button" class="btn btn-default btn-xsm" onclick="javascript:showAnswer('3')"><i class="icon  icon-sort"></i> <span>Show Answer</span></button>
</div>
</div><div class="QA">
<div class="Q" id="Q4">
<p><span>Q 4</span> - A complete graph can have </p>
<p><a class="false" href="javascript:void(0);"><span>A</span> - n<sup>2</sup> spanning trees</a></p>
<p><a class="true" href="javascript:void(0);"><span>B</span> - n<sup>n - 2</sup> spanning trees</a></p>
<p><a class="false" href="javascript:void(0);"><span>C</span> - n<sup>n + 1</sup> spanning trees</a></p>
<p><a class="false" href="javascript:void(0);"><span>D</span> - n<sup>n</sup> spanning trees</a></p>
</div>
<div class="A" id='A4'>
<h3>Answer : B</h3>
<h3>Explanation</h3>
<p>At maximum, a complete graph can have n<sup>n - 1</sup> spanning trees. </p>
</div>
<div class="B">
<button type="button" class="btn btn-default btn-xsm" onclick="javascript:showAnswer('4')"><i class="icon  icon-sort"></i> <span>Show Answer</span></button>
</div>
</div><div class="QA">
<div class="Q" id="Q5">
<p><span>Q 5</span> - Which one of the below is not divide and conquer approach?</p>
<p><a class="false" href="javascript:void(0);"><span>A</span> - Insertion Sort</a></p>
<p><a class="true" href="javascript:void(0);"><span>B</span> - Merge Sort</a></p>
<p><a class="false" href="javascript:void(0);"><span>C</span> - Shell Sort</a></p>
<p><a class="false" href="javascript:void(0);"><span>D</span> - Heap Sort</a></p>
</div>
<div class="A" id='A5'>
<h3>Answer : B</h3>
<h3>Explanation</h3>
<p>Among the options, only Merge sort divides the list in sub-list, sorts and then merges them together </p>
</div>
<div class="B">
<button type="button" class="btn btn-default btn-xsm" onclick="javascript:showAnswer('5')"><i class="icon  icon-sort"></i> <span>Show Answer</span></button>
</div>
</div><div class="QA">
<div class="Q" id="Q6">
<p><span>Q 6</span> - Prefix notation is alsow known as</p>
<p><a class="false" href="javascript:void(0);"><span>A</span> - Reverse Polish Notation</a></p>
<p><a class="false" href="javascript:void(0);"><span>B</span> - Reverse Notation</a></p>
<p><a class="false" href="javascript:void(0);"><span>C</span> - Polish Reverse Notation</a></p>
<p><a class="true" href="javascript:void(0);"><span>D</span> - Polish Notation</a></p>
</div>
<div class="A" id='A6'>
<h3>Answer : D</h3>
<h3>Explanation</h3>
<p>Polish Notation</p>
</div>
<div class="B">
<button type="button" class="btn btn-default btn-xsm" onclick="javascript:showAnswer('6')"><i class="icon  icon-sort"></i> <span>Show Answer</span></button>
</div>
</div><div class="QA">
<div class="Q" id="Q7">
<p><span>Q 7</span> - In order traversal of binary search tree will produce &minus;</p>
<p><a class="false" href="javascript:void(0);"><span>A</span> - unsorted list</a></p>
<p><a class="false" href="javascript:void(0);"><span>B</span> - reverse of input</a></p>
<p><a class="true" href="javascript:void(0);"><span>C</span> - sorted list</a></p>
<p><a class="false" href="javascript:void(0);"><span>D</span> - none of the above</a></p>
</div>
<div class="A" id='A7'>
<h3>Answer : C</h3>
<h3>Explanation</h3>
<p>Binary search tree yields a sorted list when traversed in-order.</p>
</div>
<div class="B">
<button type="button" class="btn btn-default btn-xsm" onclick="javascript:showAnswer('7')"><i class="icon  icon-sort"></i> <span>Show Answer</span></button>
</div>
</div><div class="QA">
<div class="Q" id="Q8">
<p><span>Q 8</span> - In a min-heap:</p>
<p><a class="true" href="javascript:void(0);"><span>A</span> - parent nodes have values greater than or equal to their childs</a></p>
<p><a class="false" href="javascript:void(0);"><span>B</span> - parent nodes have values less than or equal to their childs</a></p>
<p><a class="false" href="javascript:void(0);"><span>C</span> - both statements are true</a></p>
<p><a class="false" href="javascript:void(0);"><span>D</span> - both statements are wrong</a></p>
</div>
<div class="A" id='A8'>
<h3>Answer : A</h3>
<h3>Explanation</h3>
<p>In a min heap, parents always have lesser or equal values than that of their childs.</p>
</div>
<div class="B">
<button type="button" class="btn btn-default btn-xsm" onclick="javascript:showAnswer('8')"><i class="icon  icon-sort"></i> <span>Show Answer</span></button>
</div>
</div><div class="QA">
<div class="Q" id="Q9">
<p><span>Q 9</span> - A procedure that calls itself is called</p>
<p><a class="false" href="javascript:void(0);"><span>A</span> - illegal call</a></p>
<p><a class="false" href="javascript:void(0);"><span>B</span> - reverse polish</a></p>
<p><a class="true" href="javascript:void(0);"><span>C</span> - recursive</a></p>
<p><a class="false" href="javascript:void(0);"><span>D</span> - none of the above</a></p>
</div>
<div class="A" id='A9'>
<h3>Answer : C</h3>
<h3>Explanation</h3>
<p>In recursion, a procedure calls itself, either directly or by calling a procedure which in turn calls it.</p>
</div>
<div class="B">
<button type="button" class="btn btn-default btn-xsm" onclick="javascript:showAnswer('9')"><i class="icon  icon-sort"></i> <span>Show Answer</span></button>
</div>
</div><div class="QA">
<div class="Q" id="Q10">
<p><span>Q 10</span> - For a binary search algorithm to work, it is necessary that the array (list) must be </p>
<p><a class="true" href="javascript:void(0);"><span>A</span> - sorted</a></p>
<p><a class="false" href="javascript:void(0);"><span>B</span> - unsorted</a></p>
<p><a class="false" href="javascript:void(0);"><span>C</span> - in a heap</a></p>
<p><a class="false" href="javascript:void(0);"><span>D</span> - popped out of stack</a></p>
</div>
<div class="A" id='A10'>
<h3>Answer : A</h3>
<h3>Explanation</h3>
<p>As binary search divides the list and selects a the sub-list to extend search based on comparison of values, it becomes necessary that the array (list) must be in sorted form. </p>
</div>
<div class="B">
<button type="button" class="btn btn-default btn-xsm" onclick="javascript:showAnswer('10')"><i class="icon  icon-sort"></i> <span>Show Answer</span></button>
</div>
</div><div class="QA">
<div class="Q" id="Q11">
<p><span>Q 11</span> - push() and pop() functions are found in </p>
<p><a class="false" href="javascript:void(0);"><span>A</span> - queues</a></p>
<p><a class="false" href="javascript:void(0);"><span>B</span> - lists</a></p>
<p><a class="true" href="javascript:void(0);"><span>C</span> - stacks</a></p>
<p><a class="false" href="javascript:void(0);"><span>D</span> - trees</a></p>
</div>
<div class="A" id='A11'>
<h3>Answer : C</h3>
<h3>Explanation</h3>
<p>Stack uses push() to insert an item in stack, and pop() to remove the top item from stack.</p>
</div>
<div class="B">
<button type="button" class="btn btn-default btn-xsm" onclick="javascript:showAnswer('11')"><i class="icon  icon-sort"></i> <span>Show Answer</span></button>
</div>
</div><div class="QA">
<div class="Q" id="Q12">
<p><span>Q 12</span> - Queue data structure works on</p>
<p><a class="false" href="javascript:void(0);"><span>A</span> - LIFO</a></p>
<p><a class="true" href="javascript:void(0);"><span>B</span> - FIFO</a></p>
<p><a class="false" href="javascript:void(0);"><span>C</span> - FILO</a></p>
<p><a class="false" href="javascript:void(0);"><span>D</span> - none of the above</a></p>
</div>
<div class="A" id='A12'>
<h3>Answer : B</h3>
<h3>Explanation</h3>
<p>In queue, data item inserted first, will be available first and data item inserted last will be available in the last. FIFO stands for First In First Out and is a correct answer.</p>
</div>
<div class="B">
<button type="button" class="btn btn-default btn-xsm" onclick="javascript:showAnswer('12')"><i class="icon  icon-sort"></i> <span>Show Answer</span></button>
</div>
</div><div class="QA">
<div class="Q" id="Q13">
<p><span>Q 13</span> - Maximum number of nodes in a binary tree with height k, where root is height 0, is </p>
<p><a class="false" href="javascript:void(0);"><span>A</span> - 2<sup><i>k</i></sup> &minus; 1</a></p>
<p><a class="true" href="javascript:void(0);"><span>B</span> - 2<sup><i>k+1</i></sup> &minus; 1</a></p>
<p><a class="false" href="javascript:void(0);"><span>C</span> - 2<sup><i>k-1</i></sup> + 1</a></p>
<p><a class="false" href="javascript:void(0);"><span>D</span> - 2<sup><i>k</i></sup> &minus; 1</a></p>
</div>
<div class="A" id='A13'>
<h3>Answer : B</h3>
<h3>Explanation</h3>
<p>If the root node is at height 0, then a binary tree can have at max 2<sup><i>k+1</i></sup> &minus; 1 nodes.</p><p> For example: a binary tree of height 1, can have maximum 2<sup><i>1+1</i></sup> &minus; 1 = 3 nodes.</p>
<pre class="result notranslate">
   r    --------- 0
  / \
 L   R  --------- 1
</pre>
</div>
<div class="B">
<button type="button" class="btn btn-default btn-xsm" onclick="javascript:showAnswer('13')"><i class="icon  icon-sort"></i> <span>Show Answer</span></button>
</div>
</div><div class="QA">
<div class="Q" id="Q14">
<p><span>Q 14</span> - Which one of the below mentioned is linear data structure &minus;</p>
<p><a class="false" href="javascript:void(0);"><span>A</span> - Queue</a></p>
<p><a class="false" href="javascript:void(0);"><span>B</span> - Stack</a></p>
<p><a class="false" href="javascript:void(0);"><span>C</span> -  Arrays</a></p>
<p><a class="true" href="javascript:void(0);"><span>D</span> - All of the above</a></p>
</div>
<div class="A" id='A14'>
<h3>Answer : D</h3>
<h3>Explanation</h3>
<p>All mentioned data structures are linear in nature.</p>
</div>
<div class="B">
<button type="button" class="btn btn-default btn-xsm" onclick="javascript:showAnswer('14')"><i class="icon  icon-sort"></i> <span>Show Answer</span></button>
</div>
</div>
<div class="QA">
<div class="Q" id="Q15">
<p><span>Q 15</span> - What data structure is used for depth first traversal of a graph?</p>
<p><a class="false" href="javascript:void(0);"><span>A</span> - queue</a></p>
<p><a class="true" href="javascript:void(0);"><span>B</span> - stack</a></p>
<p><a class="false" href="javascript:void(0);"><span>C</span> - list</a></p>
<p><a class="false" href="javascript:void(0);"><span>D</span> - none of the above</a></p>
</div>
<div class="A" id='A15'>
<h3>Answer : B</h3>
<h3>Explanation</h3>
<p>Stack is used for depth first traversal whereas queue is used for breadth first traversal</p>
</div>
<div class="B">
<button type="button" class="btn btn-default btn-xsm" onclick="javascript:showAnswer('15')"><i class="icon  icon-sort"></i> <span>Show Answer</span></button>
</div>
</div><div class="QA">
<div class="Q" id="Q16">
<p><span>Q 16</span> - What data structure is used for breadth first traversal of a graph?</p>
<p><a class="true" href="javascript:void(0);"><span>A</span> - queue</a></p>
<p><a class="false" href="javascript:void(0);"><span>B</span> - stack</a></p>
<p><a class="false" href="javascript:void(0);"><span>C</span> - list</a></p>
<p><a class="false" href="javascript:void(0);"><span>D</span> - none of the above</a></p>
</div>
<div class="A" id='A16'>
<h3>Answer : A</h3>
<h3>Explanation</h3>
<p>Queue is used for breadth first traversal whereas stack is used for depth first traversal.</p>
</div>
<div class="B">
<button type="button" class="btn btn-default btn-xsm" onclick="javascript:showAnswer('16')"><i class="icon  icon-sort"></i> <span>Show Answer</span></button>
</div>
</div><div class="QA">
<div class="Q" id="Q17">
<p><span>Q 17</span> - What data structure can be used to check if a syntax has balanced paranthesis ?</p>
<p><a class="false" href="javascript:void(0);"><span>A</span> - queue</a></p>
<p><a class="false" href="javascript:void(0);"><span>B</span> - tree</a></p>
<p><a class="false" href="javascript:void(0);"><span>C</span> - list</a></p>
<p><a class="true" href="javascript:void(0);"><span>D</span> - stack</a></p>
</div>
<div class="A" id='A17'>
<h3>Answer : D</h3>
<h3>Explanation</h3>
<p>Stack uses LIFO method which is good for checking matching paranthesis.</p>
</div>
<div class="B">
<button type="button" class="btn btn-default btn-xsm" onclick="javascript:showAnswer('17')"><i class="icon  icon-sort"></i> <span>Show Answer</span></button>
</div>
</div><div class="QA">
<div class="Q" id="Q18">
<p><span>Q 18</span> - Postfix expression is just a reverse of prefix expression.</p>
<p><a class="false" href="javascript:void(0);"><span>A</span> - True</a></p>
<p><a class="true" href="javascript:void(0);"><span>B</span> - False</a></p>
</div>
<div class="A" id='A18'>
<h3>Answer : B</h3>
<h3>Explanation</h3>
<p>Expression notations are not reverse (or so) of each other, rather operators used in the expression have different arrangements.</p>
</div>
<div class="B">
<button type="button" class="btn btn-default btn-xsm" onclick="javascript:showAnswer('18')"><i class="icon  icon-sort"></i> <span>Show Answer</span></button>
</div>
</div><div class="QA">
<div class="Q" id="Q19">
<p><span>Q 19</span> - Stack is used for</p>
<p><a class="false" href="javascript:void(0);"><span>A</span> - CPU Resource Allocation</a></p>
<p><a class="false" href="javascript:void(0);"><span>B</span> - Breadth First Traversal</a></p>
<p><a class="true" href="javascript:void(0);"><span>C</span> - Recursion</a></p>
<p><a class="false" href="javascript:void(0);"><span>D</span> - None of the above</a></p>
</div>
<div class="A" id='A19'>
<h3>Answer : C</h3>
<h3>Explanation</h3>
<p>Recursive procedures use stacks to execute the result of last executed procedural call.</p>
</div>
<div class="B">
<button type="button" class="btn btn-default btn-xsm" onclick="javascript:showAnswer('19')"><i class="icon  icon-sort"></i> <span>Show Answer</span></button>
</div>
</div><div class="QA">
<div class="Q" id="Q20">
<p><span>Q 20</span> - A circular linked list can be used for </p>
<p><a class="false" href="javascript:void(0);"><span>A</span> - Stack</a></p>
<p><a class="false" href="javascript:void(0);"><span>B</span> - Queue</a></p>
<p><a class="true" href="javascript:void(0);"><span>C</span> - Both Stack &amp; Queue</a></p>
<p><a class="false" href="javascript:void(0);"><span>D</span> - Neither Stack or Queue</a></p>
</div>
<div class="A" id='A20'>
<h3>Answer : C</h3>
<h3>Explanation</h3>
<p>Both stack and queue data structure can be represented by circular linked-list.</p>
</div>
<div class="B">
<button type="button" class="btn btn-default btn-xsm" onclick="javascript:showAnswer('20')"><i class="icon  icon-sort"></i> <span>Show Answer</span></button>
</div>
</div><div class="QA">
<div class="Q" id="Q21">
<p><span>Q 21</span> - A linked-list is a dynamic structure</p>
<p><a class="true" href="javascript:void(0);"><span>A</span> - true</a></p>
<p><a class="false" href="javascript:void(0);"><span>B</span> - false</a></p>
</div>
<div class="A" id='A21'>
<h3>Answer : A</h3>
<h3>Explanation</h3>
<p>A linked-list is dynamic structure, it can shrink and expand as required by the program.</p>
</div>
<div class="B">
<button type="button" class="btn btn-default btn-xsm" onclick="javascript:showAnswer('21')"><i class="icon  icon-sort"></i> <span>Show Answer</span></button>
</div>
</div><div class="QA">
<div class="Q" id="Q22">
<p><span>Q 22</span> - Minimum number of moves required to solve a <i>Tower of Hanoi</i> puzzle is</p>
<p><a class="false" href="javascript:void(0);"><span>A</span> - 2<sup>n<sup>2</sup></sup></a></p>
<p><a class="false" href="javascript:void(0);"><span>B</span> - 2<sup>n-1</sup></a></p>
<p><a class="true" href="javascript:void(0);"><span>C</span> - 2<sup>n</sup> - 1</a></p>
<p><a class="false" href="javascript:void(0);"><span>D</span> - 2n - 1</a></p>
</div>
<div class="A" id='A22'>
<h3>Answer : C</h3>
<h3>Explanation</h3>
<p>Minimum number of moves required to solve a Tower of Hanoi puzzle is 2<sup>n</sup> - 1.  Where n is the number of disks.  If the number of disks is 3, then minimum number of moves required are 2<sup>3</sup> - 1 = 7</p>
</div>
<div class="B">
<button type="button" class="btn btn-default btn-xsm" onclick="javascript:showAnswer('22')"><i class="icon  icon-sort"></i> <span>Show Answer</span></button>
</div>
</div><div class="QA">
<div class="Q" id="Q23">
<p><span>Q 23</span> - Which of the following is an example of dynamic programming approach?</p>
<p><a class="false" href="javascript:void(0);"><span>A</span> - Fibonacci Series</a></p>
<p><a class="false" href="javascript:void(0);"><span>B</span> - Tower of Hanoi</a></p>
<p><a class="false" href="javascript:void(0);"><span>C</span> - Dijkstra Shortest Path</a></p>
<p><a class="true" href="javascript:void(0);"><span>D</span> - All of the above</a></p>
</div>
<div class="A" id='A23'>
<h3>Answer : D</h3>
<h3>Explanation</h3>
<p>All mentioned use dynamic programming approach.  Before solving the in-hand sub-problem, dynamic algorithm will try to examine the results of previously solved sub-problems. The solutions of sub-problems are combined in order to achieve the best solution.</p>
</div>
<div class="B">
<button type="button" class="btn btn-default btn-xsm" onclick="javascript:showAnswer('23')"><i class="icon  icon-sort"></i> <span>Show Answer</span></button>
</div>
</div><div class="QA">
<div class="Q" id="Q24">
<p><span>Q 24</span> - The following formula will produce 
<pre class="result notranslate">
F<sub>n</sub> = F<sub>n-1</sub> + F<sub>n-2</sub>
</pre>   
</p>
<p><a class="false" href="javascript:void(0);"><span>A</span> - Armstrong Number</a></p>
<p><a class="true" href="javascript:void(0);"><span>B</span> - Fibonacci Series</a></p>
<p><a class="false" href="javascript:void(0);"><span>C</span> - Euler Number</a></p>
<p><a class="false" href="javascript:void(0);"><span>D</span> - Prime Number</a></p>
</div>
<div class="A" id='A24'>
<h3>Answer : B</h3>
<h3>Explanation</h3>
<p>Fibonacci Series generates subsequent number by adding two previous numbers.</p>
</div>
<div class="B">
<button type="button" class="btn btn-default btn-xsm" onclick="javascript:showAnswer('24')"><i class="icon  icon-sort"></i> <span>Show Answer</span></button>
</div>
</div><div class="QA">
<div class="Q" id="Q25">
<p><span>Q 25</span> - Minimum number of queues required for priority queue implementation?</p>
<p><a class="false" href="javascript:void(0);"><span>A</span> - 5</a></p>
<p><a class="false" href="javascript:void(0);"><span>B</span> - 4</a></p>
<p><a class="false" href="javascript:void(0);"><span>C</span> - 3</a></p>
<p><a class="true" href="javascript:void(0);"><span>D</span> - 2</a></p>
</div>
<div class="A" id='A25'>
<h3>Answer : D</h3>
<h3>Explanation</h3>
<p>Minimum number of queues required for priority queue implementation is two.  One for storing actual data and one for storing priorities.</p>
</div>
<div class="B">
<button type="button" class="btn btn-default btn-xsm" onclick="javascript:showAnswer('25')"><i class="icon  icon-sort"></i> <span>Show Answer</span></button>
</div>
</div>   <h1 class="answer-sheet">Answer Sheet</h1>
   <table class="table table-bordered">
   <tr>
   <th style="width:50%;">Question Number</th>
   <th style="width:50%;">Answer Key</th>
   </tr>      <tr>
      <td>1</td>
      <td>D</td>
      </tr>      <tr>
      <td>2</td>
      <td>D</td>
      </tr>      <tr>
      <td>3</td>
      <td>A</td>
      </tr>      <tr>
      <td>4</td>
      <td>B</td>
      </tr>      <tr>
      <td>5</td>
      <td>B</td>
      </tr>      <tr>
      <td>6</td>
      <td>D</td>
      </tr>      <tr>
      <td>7</td>
      <td>C</td>
      </tr>      <tr>
      <td>8</td>
      <td>A</td>
      </tr>      <tr>
      <td>9</td>
      <td>C</td>
      </tr>      <tr>
      <td>10</td>
      <td>A</td>
      </tr>      <tr>
      <td>11</td>
      <td>C</td>
      </tr>      <tr>
      <td>12</td>
      <td>B</td>
      </tr>      <tr>
      <td>13</td>
      <td>B</td>
      </tr>      <tr>
      <td>14</td>
      <td>D</td>
      </tr>      <tr>
      <td>15</td>
      <td>B</td>
      </tr>      <tr>
      <td>16</td>
      <td>A</td>
      </tr>      <tr>
      <td>17</td>
      <td>D</td>
      </tr>      <tr>
      <td>18</td>
      <td>B</td>
      </tr>      <tr>
      <td>19</td>
      <td>C</td>
      </tr>      <tr>
      <td>20</td>
      <td>C</td>
      </tr>      <tr>
      <td>21</td>
      <td>A</td>
      </tr>      <tr>
      <td>22</td>
      <td>C</td>
      </tr>      <tr>
      <td>23</td>
      <td>D</td>
      </tr>      <tr>
      <td>24</td>
      <td>B</td>
      </tr>      <tr>
      <td>25</td>
      <td>D</td>
      </tr></table><div class="download-btn">
<a target="_blank" href="/data_structures_algorithms/pdf/data_structures_algorithms_mock_test_i.pdf"><i class="fa fa-download"></i> Download</a>
</div>
<script type="text/javascript" src="/theme/js/exams-min.js"></script>
<div class="parent-file">data_structures_algorithms_questions_answers.htm</div>
<div class="mui-container-fluid button-borders show" id="bottom_navigation">
<div class="pre-btn">
<a href="data_structures_algorithms_questions_answers.htm"><i class="fal fa-chevron-circle-left"></i> Previous Page</a>
<a class="hide-on-mobile" href="javascript:printPage();"><i class="fa fa-print"></i> Print Page</a>
</div>
<div class="nxt-btn">
<a href="data_structures_algorithms_questions_answers.htm">Next Page <i class="fal fa-chevron-circle-right"></i>&nbsp;</a>
</div>
</div>
<div class="google-bottom-ads">
<div>Advertisements</div>
<div id="adp_bottom_ads"></div>
<script>
var adPos = document.getElementById('adp_bottom_ads');
var mobile_ad_id = "a8a632a6-046e-4f5c-b25f-8bc82ac89fb2";
var desktop_ad_id = "e7ddd6f7-1ab0-494a-bade-887daa4373a0";
var adpushup = adpushup || {};
adpushup.que = adpushup.que || [];
adpushup.que.push(function() {
var ad_id = window.innerWidth <= 768 ? mobile_ad_id : desktop_ad_id;
adPos.innerHTML = '<div id="' + ad_id + '" class="_ap_apex_ad"></div>';
adpushup.triggerAd(ad_id);
});
</script>
<div class="space-bottom"></div>
</div>
</div>
<!-- Tutorial Content Ends Here -->
<!-- Right Column Starts Here -->
<div class="mui-col-md-2 google-right-ads">
<div class="space-top"></div>
<div class="google-right-ad" id="ad300" style="margin: 0px auto !important;margin-top:5px;">
<div id="f0f6cff6-393d-4170-b63a-d9ff06ca9f25" class="_ap_apex_ad">
<script>
var adpushup = adpushup || {};
adpushup.que = adpushup.que || [];
adpushup.que.push(function() {
adpushup.triggerAd("f0f6cff6-393d-4170-b63a-d9ff06ca9f25");
});
</script>
</div>
</div>
<div class="google-right-ad" style="margin-top:16px;">
<div id="5c0affd5-724a-475c-bfcd-cecbc7660c36" class="_ap_apex_ad">
<script>
var adpushup = adpushup || {};
adpushup.que = adpushup.que || [];
adpushup.que.push(function() {
adpushup.triggerAd("5c0affd5-724a-475c-bfcd-cecbc7660c36");
});
</script>
</div>
</div>
<div class="space-bottom"></div>

<div class="google-right-ad" style="margin-top:16px;margin-bottom:15px;">
<div id="8f8814c2-d64c-4d26-9cb9-543653c0b48f" class="_ap_apex_ad">
<script>
var adpushup = adpushup || {};
adpushup.que = adpushup.que || [];
adpushup.que.push(function() {
adpushup.triggerAd("8f8814c2-d64c-4d26-9cb9-543653c0b48f");
});
</script>
</div>
</div>
</div>
</div>
<!-- Right Column Ends Here -->
</div>
</div>
<div class="clear"></div>
<footer id="footer">
<div class="mui--text-center">
<div class="mui--text-caption mui--text-light">
<a href="/index.htm" class="logo"><img class="img-responsive" src="/images/logo-black.png" alt="Tutorials Point" title="Tutorials Point"></a>
</div>
<ul class="mui-list--inline mui--text-body2 mui--text-light">
<li><a href="/about/index.htm"><i class="fal fa-globe"></i> About us</a></li>
<li><a href="/about/about_terms_of_use.htm"><i class="fal fa-asterisk"></i> Terms of use</a></li>
<li><a href="/about/about_privacy.htm"> <i class="fal fa-shield-check"></i> Privacy Policy</a></li>
<li><a href="/about/faq.htm"><i class="fal fa-question-circle"></i> FAQ's</a></li>
<li><a href="/about/about_helping.htm"><i class="fal fa-hands-helping"></i> Helping</a></li>
<li><a href="/about/contact_us.htm"><i class="fal fa-map-marker-alt"></i> Contact</a></li>
</ul>
<div class="mui--text-caption mui--text-light bottom-copyright-text">&copy; Copyright 2020. All Rights Reserved.</div>
</div>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-232293-17"></script>
<script>
window.dataLayer = window.dataLayer || [];
function gtag(){dataLayer.push(arguments);}
gtag('js', new Date());
gtag('config', 'UA-232293-6');
</script>
</footer>
</body>
</html>

