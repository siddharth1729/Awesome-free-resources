<!DOCTYPE html>
<html lang="en-US">
<head>
<title>C# - Interview Questions - Tutorialspoint</title>
<meta charset="utf-8">
<meta name="description" content="C# - Interview Questions - Dear readers, these C# Interview Questions have been designed specially to get you acquainted with the nature of questions you may encounter during your intervi"/>
<meta name="keywords" content="C, C++, Python, Java, HTML, CSS, JavaScript, SQL, PHP, jQuery, XML, DOM, Bootstrap, Tutorials, Articles, Programming, training, learning, quiz, preferences, examples, code"/>
<link rel="canonical" href="https://www.tutorialspoint.com/csharp/csharp_interview_questions.htm" />
<link rel="shortcut icon" href="/favicon.ico" type="image/x-icon" />
<meta name="viewport" content="width=device-width,initial-scale=1.0,user-scalable=yes">
<link rel="stylesheet" href="/themes/css/style-min-v1.css?v=2.0.3">
<script src="/themes/js/script-min-v1.js?v=2.0.0"></script>
<script>function printPage() { window.print(); }</script>
<script data-cfasync="false" type="text/javascript">(function(w, d) { var s = d.createElement('script'); s.src = '//cdn.adpushup.com/40046/adpushup.js'; s.type = 'text/javascript'; s.async = true; (d.getElementsByTagName('head')[0] || d.getElementsByTagName('body')[0]).appendChild(s); })(window, document);</script>
<script data-cfasync="false" type="text/javascript">(function(w, d) { var s = d.createElement('script'); s.src = '//delivery.adrecover.com/18107/adRecover.js'; s.type = 'text/javascript'; s.async = true; (d.getElementsByTagName('head')[0] || d.getElementsByTagName('body')[0]).appendChild(s); })(window, document);</script>
<style>
.right-menu .mui-btn {
    background-color:#FE9400;
}
a.demo {
    background:#FE9400;
}
li.heading {
    background:#FE9400;
}
.course-box{background:#FE9400}
.home-intro-sub p{color:#FE9400}
</style>
</head>
<body>
<header id="header">
<!-- Top sub-menu Starts Here -->
<div class="mui-appbar mui-container-fulid top-menu">
<div class="mui-container">
<div class="top-menu-item home">
<a href="https://www.tutorialspoint.com/index.htm" target="_blank" title="TutorialsPoint - Home"><i class="fal fa-home"></i> <span>Home</span></a>
</div>
<div class="top-menu-item qa">
<a href="https://www.tutorialspoint.com/about/about_careers.htm" target="_blank" title="Job @ Tutorials Point"><i class="fa fa-suitcase"></i> <span>Jobs</span></a>
</div>
<div class="top-menu-item tools">
<a href="https://www.tutorialspoint.com/online_dev_tools.htm" target="_blank" title="Tools - Online Development and Testing Tools"><i class="fal fa-cogs"></i> <span>Tools</span></a>
</div>
<div class="top-menu-item coding-ground">
<a href="https://www.tutorialspoint.com/codingground.htm" target="_blank" title="Coding Ground - Free Online IDE and Terminal"><i class="fal fa-code"></i> <span>Coding Ground </span></a> 
</div>
<div class="top-menu-item current-affairs">
<a href="https://www.tutorialspoint.com/current_affairs.htm" target="_blank" title="Daily Current Affairs"><i class="fal fa-layer-plus"></i> <span>Current Affairs</span></a>
</div>
<div class="top-menu-item upsc-notes">
<a href="https://www.tutorialspoint.com/upsc_ias_exams.htm" target="_blank" title="UPSC IAS Exams Notes - TutorialsPoint"><i class="fal fa-user-tie"></i> <span>UPSC Notes</span></a>
</div>      
<div class="top-menu-item online-tutoris">
<a href="https://www.tutorialspoint.com/tutor_connect/index.php" target="_blank" title="Top Online Tutors - Tutor Connect"><i class="fal fa-user"></i> <span>Online Tutors</span></a>
</div>
<div class="top-menu-item whiteboard">
<a href="https://www.tutorialspoint.com/whiteboard.htm" target="_blank" title="Free Online Whiteboard"><i class="fal fa-chalkboard"></i> <span>Whiteboard</span></a>
</div>
<div class="top-menu-item net-meeting">
<a href="https://www.tutorialspoint.com/netmeeting.php" target="_blank" title="A free tool for online video conferencing"><i class="fal fa-chalkboard-teacher"></i> <span>Net Meeting</span></a> 
</div>
<div class="top-menu-item articles">
<a href="https://www.tutorix.com" target="_blank" title="Tutorx - The Best Learning App" rel="nofollow"><i class="fal fa-video"></i> <span>Tutorix</span></a> 
</div>        
<div class="social-menu-item">
<a href="https://www.facebook.com/tutorialspointindia" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Facebook"><i class="fab fa-facebook-f"></i></a> 
<a href="https://www.twitter.com/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Twitter"><i class="fab fa-twitter"></i></a>
<a href="https://www.linkedin.com/company/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Linkedin"><i class="fab fa-linkedin-in"></i></a>
<a href="https://www.youtube.com/channel/UCVLbzhxVTiTLiVKeGV7WEBg" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint YouTube"><i class="fab fa-youtube"></i></a>
</div>        
</div>
</div>
<!-- Top sub-menu Ends Here -->
<!-- Top main-menu Starts Here -->
<div class="mui-appbar mui-container-fulid mui--appbar-line-height mui--z1" id="logo-menu">
<div class="mui-container">
<div class="left-menu">
<a href="https://www.tutorialspoint.com/index.htm" title="Tutorialspoint">
<img class="tp-logo" alt="tutorialspoint" src="/csharp/images/logo.png">
</a>
<div class="mui-dropdown">
<a class="mui-btn mui-btn--primary categories" data-mui-toggle="dropdown"><i class="fa fa-th-large"></i> 
<span>Categories <span class="mui-caret"></span></span></a>            
<ul class="mui-dropdown__menu cat-menu">
<li>
<ul>
<li><a href="/academic_tutorials.htm"><i class="fa fa-caret-right"></i> Academic Tutorials</a></li>
<li><a href="/big_data_tutorials.htm"><i class="fa fa-caret-right"></i> Big Data &amp; Analytics </a></li>
<li><a href="/computer_programming_tutorials.htm"><i class="fa fa-caret-right"></i> Computer Programming </a></li>
<li><a href="/computer_science_tutorials.htm"><i class="fa fa-caret-right"></i> Computer Science </a></li>
<li><a href="/database_tutorials.htm"><i class="fa fa-caret-right"></i> Databases </a></li>
<li><a href="/devops_tutorials.htm"><i class="fa fa-caret-right"></i> DevOps </a></li>
<li><a href="/digital_marketing_tutorials.htm"><i class="fa fa-caret-right"></i> Digital Marketing </a></li>
<li><a href="/engineering_tutorials.htm"><i class="fa fa-caret-right"></i> Engineering Tutorials </a></li>
<li><a href="/upsc_ias_exams.htm"><i class="fa fa-caret-right"></i> Exams Syllabus </a></li>
<li><a href="/famous_monuments.htm"><i class="fa fa-caret-right"></i> Famous Monuments </a></li>
<li><a href="/gate_exams_tutorials.htm"><i class="fa fa-caret-right"></i> GATE Exams Tutorials</a></li>
<li><a href="/latest_technologies.htm"><i class="fa fa-caret-right"></i> Latest Technologies </a></li>
<li><a href="/machine_learning_tutorials.htm"><i class="fa fa-caret-right"></i> Machine Learning </a></li>
<li><a href="/mainframe_tutorials.htm"><i class="fa fa-caret-right"></i> Mainframe Development </a></li>
<li><a href="/management_tutorials.htm"><i class="fa fa-caret-right"></i> Management Tutorials </a></li>
<li><a href="/maths_tutorials.htm"><i class="fa fa-caret-right"></i> Mathematics Tutorials</a></li>
<li><a href="/microsoft_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> Microsoft Technologies </a></li>
<li><a href="/misc_tutorials.htm"><i class="fa fa-caret-right"></i> Misc tutorials </a></li>
<li><a href="/mobile_development_tutorials.htm"><i class="fa fa-caret-right"></i> Mobile Development </a></li>
<li><a href="/java_technology_tutorials.htm"><i class="fa fa-caret-right"></i> Java Technologies </a></li>
<li><a href="/python_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> Python Technologies </a></li>
<li><a href="/sap_tutorials.htm"><i class="fa fa-caret-right"></i> SAP Tutorials </a></li>
<li><a href="/scripting_lnaguage_tutorials.htm"><i class="fa fa-caret-right"></i>Programming Scripts </a></li>
<li><a href="/selected_reading.htm"><i class="fa fa-caret-right"></i> Selected Reading </a></li>
<li><a href="/software_quality_tutorials.htm"><i class="fa fa-caret-right"></i> Software Quality </a></li>
<li><a href="/soft_skill_tutorials.htm"><i class="fa fa-caret-right"></i> Soft Skills </a></li>
<li><a href="/telecom_tutorials.htm"><i class="fa fa-caret-right"></i> Telecom Tutorials </a></li>
<li><a href="/upsc_ias_exams.htm"><i class="fa fa-caret-right"></i> UPSC IAS Exams </a></li>
<li><a href="/web_development_tutorials.htm"><i class="fa fa-caret-right"></i> Web Development </a></li>
<li><a href="/sports_tutorials.htm"><i class="fa fa-caret-right"></i> Sports Tutorials </a></li>
<li><a href="/xml_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> XML Technologies </a></li>
<li><a href="/multi_language_tutorials.htm"><i class="fa fa-caret-right"></i> Multi-Language</a></li>
<li><a href="/questions_and_answers.htm"><i class="fa fa-caret-right"></i> Interview Questions</a></li>
</ul>
</li>
</ul>
<div class="clear"></div>
</div> 
</div>
<div class="right-menu">
<div class="toc-toggle">
<a href="javascript:void(0);"><i class="fa fa-bars"></i></a>
</div>
<div class="mobile-search-btn">
<a href="https://www.tutorialspoint.com/search.htm"><i class="fal fa-search"></i></a>
</div>
<div class="search-box">
<form method="get" class="search-form" name="searchform" action="https://www.google.com/search" target="_blank" novalidate="">
<input type="hidden" name="sitesearch" value="www.tutorialspoint.com" class="user-valid valid">
<input class="header-search-box" type="text" id="search-string" name="q" placeholder="Search your favorite tutorials..." onfocus="if (this.value == 'Search your favorite tutorials...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Search your favorite tutorials...';}" autocomplete="off">
<button><i class="fal fa-search"></i></button>
</form>
</div>
<div class="menu-btn library-btn">
<a href="https://www.tutorialspoint.com/tutorialslibrary.htm"><i class="fal fa-cubes"></i> <span>Library</span></a>
</div>
<div class="menu-btn videos-btn">
<a href="https://www.tutorialspoint.com/videotutorials/index.php"><i class="fal fa-video"></i> <span>Videos</span></a> 
</div>
<div class="menu-btn videos-btn">
<a href="https://www.tutorialspoint.com/questions/index.php"><i class="fa fa-location-arrow"></i> <span>Q/A</span></a>
</div>
<div class="menu-btn ebooks-btn">
<a href="https://store.tutorialspoint.com"><i class="fal fa-book"></i> <span>eBooks</span></a>
</div>
<div class="mui-dropdown">
<button class="mui-btn mui-btn--primary mobile-menu" data-mui-toggle="dropdown">
<span class="mui-caret"></span>
</button>
<ul class="mui-dropdown__menu">
<li><a href="https://www.tutorialspoint.com/tutorialslibrary.htm"><i class="fal fa-cubes"></i> <span>Library</span></a></li>
<li><a href="https://www.tutorialspoint.com/videotutorials/index.php"><i class="fal fa-video"></i> <span>Videos</span></a></li>
<li><a href="https://store.tutorialspoint.com"><i class="fal fa-book"></i> <span>eBooks</span></a></li>
</ul>
</div>
</div>
</div>
</div>
<!-- Top main-menu Ends Here -->
</header>
<div class="mui-container-fluid content">
<div class="mui-container">
<!-- Tutorial ToC Starts Here -->
<div class="mui-col-md-3 tutorial-toc">
<div class="mini-logo">
<img src="/csharp/images/csharp-mini-logo.jpg" alt="Csharp Tutorial" />
</div>
<ul class="toc chapters">
<li><a class="videolink" href="/csharp_online_training/index.asp" target="_blank"><img src="/csharp/images/csharp-video-tutorials.jpg" alt="C# Video Tutorials" /></a></li>
</ul>
<ul class="toc chapters">
<li class="heading">C# Basic Tutorial</li>
<li><a href="/csharp/index.htm">C# - Home</a></li>
<li><a href="/csharp/csharp_overview.htm">C# - Overview</a></li>
<li><a href="/csharp/csharp_environment_setup.htm">C# - Environment</a></li>
<li><a href="/csharp/csharp_program_structure.htm">C# - Program Structure</a></li>
<li><a href="/csharp/csharp_basic_syntax.htm">C# - Basic Syntax</a></li>
<li><a href="/csharp/csharp_data_types.htm">C# - Data Types</a></li>
<li><a href="/csharp/csharp_type_conversion.htm">C# - Type Conversion</a></li>
<li><a href="/csharp/csharp_variables.htm">C# - Variables</a></li>
<li><a href="/csharp/csharp_constants.htm">C# - Constants</a></li>
<li><a href="/csharp/csharp_operators.htm">C# - Operators</a></li>
<li><a href="/csharp/csharp_decision_making.htm">C# - Decision Making</a></li>
<li><a href="/csharp/csharp_loops.htm">C# - Loops</a></li>
<li><a href="/csharp/csharp_encapsulation.htm">C# - Encapsulation</a></li>
<li><a href="/csharp/csharp_methods.htm">C# -  Methods</a></li>
<li><a href="/csharp/csharp_nullables.htm">C# -  Nullables</a></li>
<li><a href="/csharp/csharp_arrays.htm">C# - Arrays</a></li>
<li><a href="/csharp/csharp_strings.htm">C# - Strings</a></li>
<li><a href="/csharp/csharp_struct.htm">C# - Structure</a></li>
<li><a href="/csharp/csharp_enums.htm">C# - Enums</a></li>
<li><a href="/csharp/csharp_classes.htm">C# - Classes</a></li>
<li><a href="/csharp/csharp_inheritance.htm">C# - Inheritance</a></li>
<li><a href="/csharp/csharp_polymorphism.htm">C# - Polymorphism</a></li>
<li><a href="/csharp/csharp_operator_overloading.htm">C# - Operator Overloading</a></li>
<li><a href="/csharp/csharp_interfaces.htm">C# - Interfaces</a></li>
<li><a href="/csharp/csharp_namespaces.htm">C# - Namespaces</a></li>
<li><a href="/csharp/csharp_preprocessor_directives.htm">C# - Preprocessor Directives</a></li>
<li><a href="/csharp/csharp_regular_expressions.htm">C# - Regular Expressions</a></li>
<li><a href="/csharp/csharp_exception_handling.htm">C# - Exception Handling</a></li>
<li><a href="/csharp/csharp_file_io.htm">C# - File I/O</a></li>
</ul>
<ul class="toc chapters">
<li class="heading">C# Advanced Tutorial</li>
<li><a href="/csharp/csharp_attributes.htm">C# - Attributes</a></li>
<li><a href="/csharp/csharp_reflection.htm">C# - Reflection</a></li>
<li><a href="/csharp/csharp_properties.htm">C# - Properties</a></li>
<li><a href="/csharp/csharp_indexers.htm">C# - Indexers</a></li>
<li><a href="/csharp/csharp_delegates.htm">C# - Delegates</a></li>
<li><a href="/csharp/csharp_events.htm">C# - Events</a></li>
<li><a href="/csharp/csharp_collections.htm">C# - Collections</a></li>
<li><a href="/csharp/csharp_generics.htm">C# - Generics</a></li>
<li><a href="/csharp/csharp_anonymous_methods.htm">C# - Anonymous Methods</a></li>
<li><a href="/csharp/csharp_unsafe_codes.htm">C# - Unsafe Codes</a></li>
<li><a href="/csharp/csharp_multithreading.htm">C# - Multithreading</a></li>
</ul>
<ul class="toc chapters">
<li class="heading">C# Useful Resources</li>
<li><a href="/csharp/csharp_questions_answers.htm">C# - Questions and Answers</a></li>
<li><a href="/csharp/csharp_quick_guide.htm">C# - Quick Guide</a></li>
<li><a href="/csharp/csharp_useful_resources.htm">C# - Useful Resources</a></li>
<li><a href="/csharp/csharp_discussion.htm">C# - Discussion</a></li>
</ul>
<ul class="toc reading">
<li class="sreading">Selected Reading</li>
<li><a target="_top" href="/upsc_ias_exams.htm">UPSC IAS Exams Notes</a></li>
<li><a target="_top" href="/developers_best_practices/index.htm">Developer's Best Practices</a></li>
<li><a target="_top" href="/questions_and_answers.htm">Questions and Answers</a></li>
<li><a target="_top" href="/effective_resume_writing.htm">Effective Resume Writing</a></li>
<li><a target="_top" href="/hr_interview_questions/index.htm">HR Interview Questions</a></li>
<li><a target="_top" href="/computer_glossary.htm">Computer Glossary</a></li>
<li><a target="_top" href="/computer_whoiswho.htm">Who is Who</a></li>
</ul>
<div id="stickyparent">
<div style="height:250px;width:300px;" id="sticky-ad">
<div id="430c9911-782f-495d-88f9-69f58ca8c9a4" class="_ap_apex_ad" >
<script>
var adpushup = adpushup || {};
adpushup.que = adpushup.que || [];
adpushup.que.push(function() {
adpushup.triggerAd("430c9911-782f-495d-88f9-69f58ca8c9a4");
});
</script>
</div>
</div>
</div>
</div>
<!-- Tutorial ToC Ends Here -->
<!-- Tutorial Content Starts Here -->
<div class="mui-col-md-6 tutorial-content">
<h1>C# - Interview Questions</h1>
<hr />
<div class="top-ad-heading">Advertisements</div>
<div style="text-align:center" class="google-top-ads">
<div id="adp_top_ads" style="text-align:center !important;"></div>
<script>
     var adPos = document.getElementById('adp_top_ads');
     var ad_id_720 = "8014640d-fd34-4b2e-9b1b-cc67234a2325";
     var ad_id_650 = "2d1bb2c4-eb72-471d-9c80-1bf5514728c1";
     var ad_id_300 = "df94a1a9-ae2f-432d-9a92-d93823ff4503";
     var width = window.innerWidth;
     var ad_id = ad_id_720;
     if( width <= 768 ){
        ad_id =  ad_id_300;
     }else if( width <= 1435 ){
        ad_id =  ad_id_650;
     }
     adPos.innerHTML = '<div id="' + ad_id + '" class="_ap_apex_ad"></div>';
     var adpushup = adpushup || {};
     adpushup.que = adpushup.que || [];
     adpushup.que.push(function() {
     adpushup.triggerAd(ad_id);
     });
</script>
</div>
<br>
<div class="mui-container-fluid button-borders">
<div class="pre-btn">
<a href="csharp_questions_answers.htm"><i class="fal fa-chevron-circle-left"></i> Previous Page</a>
</div>
<div class="nxt-btn">
<a href="csharp_questions_answers.htm">Next Page <i class="fal fa-chevron-circle-right"></i>&nbsp;</a>
</div>
</div>
<div class="clearer"></div>
<p>Dear readers, these <b>C# Interview Questions</b> have been designed specially to get you acquainted with the nature of questions you may encounter during your interview for the subject of <b>C#</b>. As per my experience good interviewers hardly plan to ask any particular question during your interview, normally questions start with some basic concept of the subject and later they continue based on further discussion and what you answer &minus;</p>
<section class="toggle">
<label>What is C#?</label>
<div class="toggle-content">
<p>C# is a modern, general-purpose, object-oriented programming language developed by Microsoft. C# is designed for Common Language Infrastructure (CLI), which consists of the executable code and runtime environment that allows use of various high-level languages on different computer platforms and architectures.</p>
</div>
</section>
<section class="toggle">
<label>What is Jagged Array in C#?</label>
<div class="toggle-content">
<p>A Jagged array is an array of arrays.</p> 
<p>You can initialize a jagged array as &minus;</p>
<pre class="prettyprint notranslate">
int[][] scores = new int[2][]{new int[]{92,93,94},new int[]{85,66,87,88}};
</pre>
<p>Where, scores is an array of two arrays of integers - scores[0] is an array of 3 integers and scores[1] is an array of 4 integers.</p>
</div>
</section>
<section class="toggle">
<label>In how many ways you can pass parameters to a method?</label>
<div class="toggle-content">
<p>There are three ways that parameters can be passed to a method &minus;</p>
<ul class="list">
<li><p><b>Value parameters</b> &minus; This method copies the actual value of an argument into the formal parameter of the function. In this case, changes made to the parameter inside the function have no effect on the argument.</p></li>
<li><p><b>Reference parameters</b> &minus; This method copies the reference to the memory location of an argument into the formal parameter. This means that changes made to the parameter affect the argument.</p></li>
<li><p><b>Output parameters</b> &minus; This method helps in returning more than one value.</p></li>
</ul>
</div>
</section>
<section class="toggle">
<label>Can you return multiple values from a function in C#?</label>
<div class="toggle-content">
<p>Yes! Using output parameters. A return statement can be used for returning only one value from a function. However, using output parameters, you can return two values from a function.</p>
</div>
</section>
<section class="toggle">
<label>What is the difference between ref and out parameters?</label>
<div class="toggle-content">
<p>Output parameters are similar to reference parameters, except that they transfer data out of the method rather than into it. Reference parameter copies the reference to the memory location of an argument into the formal parameter. This means that changes made to the parameter affect the argument.</p>
</div>
</section>
<section class="toggle">
<label>What is namespace in C#?</label>
<div class="toggle-content">
<p>A namespace is designed for providing a way to keep one set of names separate from another. The class names declared in one namespace does not conflict with the same class names declared in another.</p>
</div>
</section>
<section class="toggle">
<label>What is the purpose of using statement in C#?</label>
<div class="toggle-content">
<p>using keyword is used to include a namespace in the program. A program generally has multiple using statements.</p>
</div>
</section>
<section class="toggle">
<label>What are value types in C#</label>
<div class="toggle-content">
<p>Value type variables can be assigned a value directly. They are derived from the class System.ValueType.</p>
<p>The value types directly contain data. Some examples are int, char, and float, which stores numbers, alphabets, and floating point numbers, respectively. When you declare an int type, the system allocates memory to store the value.</p>
</div>
</section>
<section class="toggle">
<label>What are reference types in C#</label>
<div class="toggle-content">
<p>The reference types do not contain the actual data stored in a variable, but they contain a reference to the variables.</p>
<p>In other words, they refer to a memory location. Using multiple variables, the reference types can refer to a memory location. If the data in the memory location is changed by one of the variables, the other variable automatically reflects this change in value. Example of built-in reference types are: object, dynamic, and string.</p>
</div>
</section>
<section class="toggle">
<label>Which class acts as a base class for all the data types in .net?</label>
<div class="toggle-content">
<p>The Object Type is the ultimate base class for all data types in C# Common Type System (CTS). Object is an alias for System.Object class. The object types can be assigned values of any other types, value types, reference types, predefined or user-defined types. However, before assigning values, it needs type conversion.</p>
</div>
</section>
<section class="toggle">
<label>What is boxing in C#?</label>
<div class="toggle-content">
<p>When a value type is converted to object type, it is called boxing.</p>
</div>
</section>
<section class="toggle">
<label>What is unboxing in C#?</label>
<div class="toggle-content">
<p>When an object type is converted to a value type, it is called unboxing.</p>
</div>
</section>
<section class="toggle">
<label>What are dynamic type variables in C#</label>
<div class="toggle-content">
<p>You can store any type of value in the dynamic data type variable. Type checking for these types of variables takes place at run-time.</p>
<p>Syntax for declaring a dynamic type is &minus;</p>
<pre class="prettyprint notranslate">
dynamic &lt;variable_name&gt; = value;
</pre>
<p>For example,</p>
<pre class="prettyprint notranslate">
dynamic d = 20;
</pre>
</div>
</section>
<section class="toggle">
<label>What is the difference between dynamic type variables and object type variables?</label>
<div class="toggle-content">
<p>Dynamic types are similar to object types except that type checking for object type variables takes place at compile time, whereas that for the dynamic type variables takes place at run time.</p>
</div>
</section>
<section class="toggle">
<label>What are pointer types in C#?</label>
<div class="toggle-content">
<p>Pointer type variables store the memory address of another type. Pointers in C# have the same capabilities as the pointers in C or C++.</p>
<p>Syntax for declaring a pointer type is &minus;</p>
<pre class="prettyprint notranslate">
type* identifier;
</pre>
<p>For example</p>
<pre class="prettyprint notranslate">
char* cptr;
int* iptr;
</pre>
</div>
</section>
<section class="toggle">
<label>What is the purpose of is operator in C#?</label>
<div class="toggle-content">
<p>is operator determines whether an object is of a certain type.</p>
<p>If( Ford is Car) // checks if Ford is an object of the Car class.</p>
</div>
</section>
<section class="toggle">
<label>What is the purpose of as operator in C#?</label>
<div class="toggle-content">
<p>as operator casts without raising an exception if the cast fails.</p>
<pre class="prettyprint notranslate">
Object obj = new StringReader("Hello");
StringReader r = obj as StringReader;
</pre>
</div>
</section>
<section class="toggle">
<label>What is encapsulation?</label>
<div class="toggle-content">
<p>Encapsulation is defined 'as the process of enclosing one or more items within a physical or logical package'. Encapsulation, in object oriented programming methodology, prevents access to implementation details.</p>
</div>
</section>
<section class="toggle">
<label>How encapsulation is implemented in C#?</label>
<div class="toggle-content">
<p>Encapsulation is implemented by using access specifiers.</p> 
</div>
</section>
<section class="toggle">
<label>What is the purpose of an access specifier in C#?</label>
<div class="toggle-content">
<p>An access specifier defines the scope and visibility of a class member.</p>
</div>
</section>
<section class="toggle">
<label>What is scope of a public member variable of a C# class?</label>
<div class="toggle-content">
<p>Public access specifier allows a class to expose its member variables and member functions to other functions and objects. Any public member can be accessed from outside the class.</p>
</div>
</section>
<section class="toggle">
<label>What is scope of a private member variable of a C# class?</label>
<div class="toggle-content">
<p>Private access specifier allows a class to hide its member variables and member functions from other functions and objects. Only functions of the same class can access its private members. Even an instance of a class cannot access its private members.</p>
</div>
</section>
<section class="toggle">
<label>What is scope of a protected member variable of a C# class?</label>
<div class="toggle-content">
<p>Protected access specifier allows a child class to access the member variables and member functions of its base class. This way it helps in implementing inheritance.</p> 
</div>
</section>
<section class="toggle">
<label>What is scope of a Internal member variable of a C# class?</label>
<div class="toggle-content">
<p>Internal access specifier allows a class to expose its member variables and member functions to other functions and objects in the current assembly. In other words, any member with internal access specifier can be accessed from any class or method defined within the application in which the member is defined.</p>
</div>
</section>
<section class="toggle">
<label>What is scope of a Protected Internal member variable of a C# class?</label>
<div class="toggle-content">
<p>The protected internal access specifier allows a class to hide its member variables and member functions from other class objects and functions, except a child class within the same application. This is also used while implementing inheritance.</p>
</div>
</section>
<section class="toggle">
<label>What are nullable types in C#?</label>
<div class="toggle-content">
<p>C# provides a special data types, the nullable types, to which you can assign normal range of values as well as null values.</p>
<p>For example, you can store any value from -2,147,483,648 to 2,147,483,647 or null in a Nullable&lt;Int32&gt; variable. Similarly, you can assign true, false, or null in a Nullable&lt;bool&gt; variable.</p>
</div>
</section>
<section class="toggle">
<label>What is the use of Null Coalescing Operator (??) in C#?</label>
<div class="toggle-content">
<p>The null coalescing operator is used with the nullable value types and reference types. It is used for converting an operand to the type of another nullable (or not) value type operand, where an implicit conversion is possible.</p>
<p>If the value of the first operand is null, then the operator returns the value of the second operand, otherwise it returns the value of the first operand.</p>
</div>
</section>
<section class="toggle">
<label>Can you create a function in C# which can accept varying number of arguments?</label>
<div class="toggle-content">
<p>By using the params keyword, a method parameter can be specified which takes a variable number of arguments or even no argument.</p>
</div>
</section>
<section class="toggle">
<label>Can you pass additional type of parameters after using params in function definition?</label>
<div class="toggle-content">
<p>No! additional parameters are not permitted after the params keyword in a method declaration. Only one params keyword is allowed in a method declaration.</p>
</div>
</section>
<section class="toggle">
<label>Which class acts as a base class for all arrays in C#?</label>
<div class="toggle-content">
<p>The Array class is the base class for all the arrays in C#. It is defined in the System namespace. The Array class provides various properties and methods to work with arrays.</p>
</div>
</section>
<section class="toggle">
<label>How to sort an array in C#?</label>
<div class="toggle-content">
<p>Using Array.sort(array) function. It sorts the elements in an entire one-dimensional Array using the IComparable implementation of each element of the Array.</p>
</div>
</section>
<section class="toggle">
<label>How to sort an array in C# in descending order?</label>
<div class="toggle-content">
<p>First sort the array using Array.sort(array) then reverse the same using Array.reverse(array) method.</p>
</div>
</section>
<section class="toggle">
<label>What is a structure in C#?</label>
<div class="toggle-content">
<p>In C#, a structure is a value type data type. It helps you to make a single variable hold related data of various data types. The struct keyword is used for creating a structure.</p>
<p>Structures are used to represent a record. To define a structure, you must use the struct statement. The struct statement defines a new data type, with more than one member for your program.</p>
</div>
</section>
<section class="toggle">
<label>What are the differences between a class and structure</label>
<div class="toggle-content">
<p>Classes and Structures have the following basic differences &minus;</p>
<ul class="list">
<li><p>classes are reference types and structs are value types.</p></li>
<li><p>structures do not support inheritance.</p></li>
<li><p>structures cannot have default constructor.</p></li>
</ul>
</div>
</section>
<section class="toggle">
<label>What is a enumeration in C#?</label>
<div class="toggle-content">
<p>An enumeration is a set of named integer constants. An enumerated type is declared using the enum keyword.</p>
<p>C# enumerations are value data type. In other words, enumeration contains its own values and cannot inherit or cannot pass inheritance.</p>
</div>
</section>
<section class="toggle">
<label>What is the default access for a class?</label>
<div class="toggle-content">
<p>Default access specifier for a class type is internal.</p>
</div>
</section>
<section class="toggle">
<label>What is the default access for a class member?</label>
<div class="toggle-content">
<p>Default access for the members is private.</p>
</div>
</section>
<section class="toggle">
<label>What is inheritance?</label>
<div class="toggle-content">
<p>One of the most important concepts in object-oriented programming is inheritance. Inheritance allows us to define a class in terms of another class, which makes it easier to create and maintain an application. This also provides an opportunity to reuse the code functionality and speeds up implementation time.</p>
<p>When creating a class, instead of writing completely new data members and member functions, the programmer can designate that the new class should inherit the members of an existing class. This existing class is called the base class, and the new class is referred to as the derived class.</p>
<p>The idea of inheritance implements the IS-A relationship. For example, mammal IS A animal, dog IS-A mammal hence dog IS-A animal as well, and so on.</p>
</div>
</section>
<section class="toggle">
<label>Is multiple inheritance supported in C#?</label>
<div class="toggle-content">
<p>No! C# does not support multiple inheritance.</p>
</div>
</section>
<section class="toggle">
<label>How to inherit a class in C#?</label>
<div class="toggle-content">
<p>A class can be derived from more than one class or interface, which means that it can inherit data and functions from multiple base classes or interfaces.
The syntax used in C# for creating derived classes is as follows &minus;</p>
<pre class="prettyprint notranslate">
&lt;acess-specifier&gt; class &lt;base_class&gt;
{
   ...
}
class &lt;derived_class&gt; : &lt;base_class&gt;
{
   ...
}
</pre>
</div>
</section>
<section class="toggle">
<label>What is polymorphism?</label>
<div class="toggle-content">
<p>The word polymorphism means having many forms. In object-oriented programming paradigm, polymorphism is often expressed as 'one interface, multiple functions'.</p>
</div>
</section>
<section class="toggle">
<label>What is the difference between static polymorphism and dynamic polymorphism?</label>
<div class="toggle-content">
<p>Polymorphism can be static or dynamic. In static polymorphism, the response to a function is determined at the compile time. In dynamic polymorphism, it is decided at run-time.</p>
</div>
</section>
<section class="toggle">
<label>How C# supports static polymorphism?</label>
<div class="toggle-content">
<p>C# provides two techniques to implement static polymorphism. They are &minus;</p>
<ul class="list">
<li><p>Function overloading</p></li>
<li><p>Operator overloading</p></li>
</ul>
</div>
</section>
<section class="toggle">
<label>What is early binding?</label>
<div class="toggle-content">
<p>The mechanism of linking a function with an object during compile time is called early binding. It is also called static binding.</p>
</div>
</section>
<section class="toggle">
<label>What is function overloading?</label>
<div class="toggle-content">
<p>You can have multiple definitions for the same function name in the same scope. The definition of the function must differ from each other by the types and/or the number of arguments in the argument list. You cannot overload function declarations that differ only by return type.</p>
</div>
</section>
<section class="toggle">
<label>How C# supports dynamic polymorphism?</label>
<div class="toggle-content">
<p>Dynamic polymorphism is implemented by abstract classes and virtual functions.</p>
</div>
</section>
<section class="toggle">
<label>What is a sealed class in C#?</label>
<div class="toggle-content">
<p>When a class is declared sealed, it cannot be inherited.</p>
</div>
</section>
<section class="toggle">
<label>How will you create sealed abstract class in C#?</label>
<div class="toggle-content">
<p>No! It can not be created as abstract classes cannot be declared sealed.</p>
</div>
</section>
<section class="toggle">
<label>What are virtual functions in C#?</label>
<div class="toggle-content">
<p>When you have a function defined in a class that you want to be implemented in an inherited class(es), you use virtual functions. The virtual functions could be implemented differently in different inherited class and the call to these functions will be decided at runtime.</p>
</div>
</section>
<section class="toggle">
<label>Is operator overloading supported in C#?</label>
<div class="toggle-content">
<p>You can redefine or overload most of the built-in operators available in C#. Thus a programmer can use operators with user-defined types as well.</p>
<p>Overloaded operators are functions with special names the keyword operator followed by the symbol for the operator being defined. Similar to any other function, an overloaded operator has a return type and a parameter list.</p>
</div>
</section>
<section class="toggle">
<label>What is an interface?</label>
<div class="toggle-content">
<p>n interface is defined as a syntactical contract that all the classes inheriting the interface should follow. The interface defines the 'what' part of the syntactical contract and the deriving classes define the 'how' part of the syntactical contract.</p>
<p>Interfaces define properties, methods, and events, which are the members of the interface. Interfaces contain only the declaration of the members. It is the responsibility of the deriving class to define the members. It often helps in providing a standard structure that the deriving classes would follow.</p>
</div>
</section>
<section class="toggle">
<label>What is a preprocessor directives in C#?</label>
<div class="toggle-content">
<p>The preprocessor directives give instruction to the compiler to preprocess the information before actual compilation starts.</p>
<p>All preprocessor directives begin with #, and only white-space characters may appear before a preprocessor directive on a line. Preprocessor directives are not statements, so they do not end with a semicolon (;).</p>
</div>
</section>
<section class="toggle">
<label>What is the use of conditional preprocessor directive in C#?</label>
<div class="toggle-content">
<p>You can use the #if directive to create a conditional directive. Conditional directives are useful for testing a symbol or symbols to check if they evaluate to true. If they do evaluate to true, the compiler evaluates all the code between the #if and the next directive.</p>
</div>
</section>
<section class="toggle">
<label>Which class acts as a base class for all exceptions in C#?</label>
<div class="toggle-content">
<p>C# exceptions are represented by classes. The exception classes in C# are mainly directly or indirectly derived from the System.Exception class. Some of the exception classes derived from the System.Exception class are the System.ApplicationException and System.SystemException classes.</p>
</div>
</section>
<section class="toggle">
<label>What is the difference between System.ApplicationException class and System.SystemException class?</label>
<div class="toggle-content">
<p>The System.ApplicationException class supports exceptions generated by application programs. Hence the exceptions defined by the programmers should derive from this class.</p>
<p>The System.SystemException class is the base class for all predefined system exception.</p>
</div>
</section>
<h2>What is Next ?</h2>
<p>Further you can go through your past assignments you have done with the subject and make sure you are able to speak confidently on them. If you are fresher then interviewer does not expect you will answer very complex questions, rather you have to make your basics concepts very strong.</p>
<p>Second it really doesn't matter much if you could not answer few questions but it matters that whatever you answered, you must have answered with confidence. So just feel confident during your interview. We at tutorialspoint wish you best luck to have a good interviewer and all the very best for your future endeavor. Cheers :-)</p>
<div class="parent-file">csharp_questions_answers.htm</div>
<div class="mui-container-fluid button-borders show" id="bottom_navigation">
<div class="pre-btn">
<a href="csharp_questions_answers.htm"><i class="fal fa-chevron-circle-left"></i> Previous Page</a>
<a class="hide-on-mobile" href="javascript:printPage();"><i class="fa fa-print"></i> Print Page</a>
</div>
<div class="nxt-btn">
<a href="csharp_questions_answers.htm">Next Page <i class="fal fa-chevron-circle-right"></i>&nbsp;</a>
</div>
</div>
<div class="google-bottom-ads">
<div>Advertisements</div>
<div id="adp_bottom_ads"></div>
<script>
var adPos = document.getElementById('adp_bottom_ads');
var mobile_ad_id = "a8a632a6-046e-4f5c-b25f-8bc82ac89fb2";
var desktop_ad_id = "e7ddd6f7-1ab0-494a-bade-887daa4373a0";
var adpushup = adpushup || {};
adpushup.que = adpushup.que || [];
adpushup.que.push(function() {
var ad_id = window.innerWidth <= 768 ? mobile_ad_id : desktop_ad_id;
adPos.innerHTML = '<div id="' + ad_id + '" class="_ap_apex_ad"></div>';
adpushup.triggerAd(ad_id);
});
</script>
<div class="space-bottom"></div>
</div>
</div>
<!-- Tutorial Content Ends Here -->
<!-- Right Column Starts Here -->
<div class="mui-col-md-2 google-right-ads">
<div class="space-top"></div>
<div class="google-right-ad" id="ad300" style="margin: 0px auto !important;margin-top:5px;">
<div id="f0f6cff6-393d-4170-b63a-d9ff06ca9f25" class="_ap_apex_ad">
<script>
var adpushup = adpushup || {};
adpushup.que = adpushup.que || [];
adpushup.que.push(function() {
adpushup.triggerAd("f0f6cff6-393d-4170-b63a-d9ff06ca9f25");
});
</script>
</div>
</div>
<div class="google-right-ad" style="margin-top:16px;">
<div id="5c0affd5-724a-475c-bfcd-cecbc7660c36" class="_ap_apex_ad">
<script>
var adpushup = adpushup || {};
adpushup.que = adpushup.que || [];
adpushup.que.push(function() {
adpushup.triggerAd("5c0affd5-724a-475c-bfcd-cecbc7660c36");
});
</script>
</div>
</div>
<div class="space-bottom"></div>

<div class="google-right-ad" style="margin-top:16px;margin-bottom:15px;">
<div id="8f8814c2-d64c-4d26-9cb9-543653c0b48f" class="_ap_apex_ad">
<script>
var adpushup = adpushup || {};
adpushup.que = adpushup.que || [];
adpushup.que.push(function() {
adpushup.triggerAd("8f8814c2-d64c-4d26-9cb9-543653c0b48f");
});
</script>
</div>
</div>
</div>
</div>
<!-- Right Column Ends Here -->
</div>
</div>
<div class="clear"></div>
<footer id="footer">
<div class="mui--text-center">
<div class="mui--text-caption mui--text-light">
<a href="/index.htm" class="logo"><img class="img-responsive" src="/images/logo-black.png" alt="Tutorials Point" title="Tutorials Point"></a>
</div>
<ul class="mui-list--inline mui--text-body2 mui--text-light">
<li><a href="/about/index.htm"><i class="fal fa-globe"></i> About us</a></li>
<li><a href="/about/about_terms_of_use.htm"><i class="fal fa-asterisk"></i> Terms of use</a></li>
<li><a href="/about/about_privacy.htm"> <i class="fal fa-shield-check"></i> Privacy Policy</a></li>
<li><a href="/about/faq.htm"><i class="fal fa-question-circle"></i> FAQ's</a></li>
<li><a href="/about/about_helping.htm"><i class="fal fa-hands-helping"></i> Helping</a></li>
<li><a href="/about/contact_us.htm"><i class="fal fa-map-marker-alt"></i> Contact</a></li>
</ul>
<div class="mui--text-caption mui--text-light bottom-copyright-text">&copy; Copyright 2020. All Rights Reserved.</div>
</div>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-232293-17"></script>
<script>
window.dataLayer = window.dataLayer || [];
function gtag(){dataLayer.push(arguments);}
gtag('js', new Date());
gtag('config', 'UA-232293-6');
</script>
</footer>
</body>
</html>

